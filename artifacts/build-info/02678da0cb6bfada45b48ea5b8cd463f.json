{
  "id": "02678da0cb6bfada45b48ea5b8cd463f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/core/IAlgebraPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './pool/IAlgebraPoolImmutables.sol';\r\nimport './pool/IAlgebraPoolState.sol';\r\nimport './pool/IAlgebraPoolDerivedState.sol';\r\nimport './pool/IAlgebraPoolActions.sol';\r\nimport './pool/IAlgebraPoolPermissionedActions.sol';\r\nimport './pool/IAlgebraPoolEvents.sol';\r\n\r\n/**\r\n * @title The interface for a Algebra Pool\r\n * @dev The pool interface is broken up into many smaller pieces.\r\n * Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPool is\r\n  IAlgebraPoolImmutables,\r\n  IAlgebraPoolState,\r\n  IAlgebraPoolDerivedState,\r\n  IAlgebraPoolActions,\r\n  IAlgebraPoolPermissionedActions,\r\n  IAlgebraPoolEvents\r\n{\r\n  // used only for combining interfaces\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolImmutables.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport '../IDataStorageOperator.sol';\r\n\r\n/// @title Pool state that never changes\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolImmutables {\r\n  /**\r\n   * @notice The contract that stores all the timepoints and can perform actions with them\r\n   * @return The operator address\r\n   */\r\n  function dataStorageOperator() external view returns (address);\r\n\r\n  /**\r\n   * @notice The contract that deployed the pool, which must adhere to the IAlgebraFactory interface\r\n   * @return The contract address\r\n   */\r\n  function factory() external view returns (address);\r\n\r\n  /**\r\n   * @notice The first of the two tokens of the pool, sorted by address\r\n   * @return The token contract address\r\n   */\r\n  function token0() external view returns (address);\r\n\r\n  /**\r\n   * @notice The second of the two tokens of the pool, sorted by address\r\n   * @return The token contract address\r\n   */\r\n  function token1() external view returns (address);\r\n\r\n  /**\r\n   * @notice The pool tick spacing\r\n   * @dev Ticks can only be used at multiples of this value\r\n   * e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\r\n   * This value is an int24 to avoid casting even though it is always positive.\r\n   * @return The tick spacing\r\n   */\r\n  function tickSpacing() external view returns (int24);\r\n\r\n  /**\r\n   * @notice The maximum amount of position liquidity that can use any tick in the range\r\n   * @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\r\n   * also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\r\n   * @return The max amount of liquidity per tick\r\n   */\r\n  function maxLiquidityPerTick() external view returns (uint128);\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that can change\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolState {\r\n  /**\r\n   * @notice The globalState structure in the pool stores many values but requires only one slot\r\n   * and is exposed as a single method to save gas when accessed externally.\r\n   * @return price The current price of the pool as a sqrt(token1/token0) Q64.96 value;\r\n   * Returns tick The current tick of the pool, i.e. according to the last tick transition that was run;\r\n   * Returns This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick\r\n   * boundary;\r\n   * Returns fee The last pool fee value in hundredths of a bip, i.e. 1e-6;\r\n   * Returns timepointIndex The index of the last written timepoint;\r\n   * Returns communityFeeToken0 The community fee percentage of the swap fee in thousandths (1e-3) for token0;\r\n   * Returns communityFeeToken1 The community fee percentage of the swap fee in thousandths (1e-3) for token1;\r\n   * Returns unlocked Whether the pool is currently locked to reentrancy;\r\n   */\r\n  function globalState()\r\n    external\r\n    view\r\n    returns (\r\n      uint160 price,\r\n      int24 tick,\r\n      uint16 fee,\r\n      uint16 timepointIndex,\r\n      uint8 communityFeeToken0,\r\n      uint8 communityFeeToken1,\r\n      bool unlocked\r\n    );\r\n\r\n  /**\r\n   * @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\r\n   * @dev This value can overflow the uint256\r\n   */\r\n  function totalFeeGrowth0Token() external view returns (uint256);\r\n\r\n  /**\r\n   * @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\r\n   * @dev This value can overflow the uint256\r\n   */\r\n  function totalFeeGrowth1Token() external view returns (uint256);\r\n\r\n  /**\r\n   * @notice The currently in range liquidity available to the pool\r\n   * @dev This value has no relationship to the total liquidity across all ticks.\r\n   * Returned value cannot exceed type(uint128).max\r\n   */\r\n  function liquidity() external view returns (uint128);\r\n\r\n  /**\r\n   * @notice Look up information about a specific tick in the pool\r\n   * @dev This is a public structure, so the `return` natspec tags are omitted.\r\n   * @param tick The tick to look up\r\n   * @return liquidityTotal the total amount of position liquidity that uses the pool either as tick lower or\r\n   * tick upper\r\n   * @return liquidityDelta how much liquidity changes when the pool price crosses the tick;\r\n   * Returns outerFeeGrowth0Token the fee growth on the other side of the tick from the current tick in token0;\r\n   * Returns outerFeeGrowth1Token the fee growth on the other side of the tick from the current tick in token1;\r\n   * Returns outerTickCumulative the cumulative tick value on the other side of the tick from the current tick;\r\n   * Returns outerSecondsPerLiquidity the seconds spent per liquidity on the other side of the tick from the current tick;\r\n   * Returns outerSecondsSpent the seconds spent on the other side of the tick from the current tick;\r\n   * Returns initialized Set to true if the tick is initialized, i.e. liquidityTotal is greater than 0\r\n   * otherwise equal to false. Outside values can only be used if the tick is initialized.\r\n   * In addition, these values are only relative and must be used only in comparison to previous snapshots for\r\n   * a specific position.\r\n   */\r\n  function ticks(int24 tick)\r\n    external\r\n    view\r\n    returns (\r\n      uint128 liquidityTotal,\r\n      int128 liquidityDelta,\r\n      uint256 outerFeeGrowth0Token,\r\n      uint256 outerFeeGrowth1Token,\r\n      int56 outerTickCumulative,\r\n      uint160 outerSecondsPerLiquidity,\r\n      uint32 outerSecondsSpent,\r\n      bool initialized\r\n    );\r\n\r\n  /** @notice Returns 256 packed tick initialized boolean values. See TickTable for more information */\r\n  function tickTable(int16 wordPosition) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Returns the information about a position by the position's key\r\n   * @dev This is a public mapping of structures, so the `return` natspec tags are omitted.\r\n   * @param key The position's key is a hash of a preimage composed by the owner, bottomTick and topTick\r\n   * @return liquidityAmount The amount of liquidity in the position;\r\n   * Returns lastLiquidityAddTimestamp Timestamp of last adding of liquidity;\r\n   * Returns innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke;\r\n   * Returns innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke;\r\n   * Returns fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke;\r\n   * Returns fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke\r\n   */\r\n  function positions(bytes32 key)\r\n    external\r\n    view\r\n    returns (\r\n      uint128 liquidityAmount,\r\n      uint32 lastLiquidityAddTimestamp,\r\n      uint256 innerFeeGrowth0Token,\r\n      uint256 innerFeeGrowth1Token,\r\n      uint128 fees0,\r\n      uint128 fees1\r\n    );\r\n\r\n  /**\r\n   * @notice Returns data about a specific timepoint index\r\n   * @param index The element of the timepoints array to fetch\r\n   * @dev You most likely want to use #getTimepoints() instead of this method to get an timepoint as of some amount of time\r\n   * ago, rather than at a specific index in the array.\r\n   * This is a public mapping of structures, so the `return` natspec tags are omitted.\r\n   * @return initialized whether the timepoint has been initialized and the values are safe to use;\r\n   * Returns blockTimestamp The timestamp of the timepoint;\r\n   * Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp;\r\n   * Returns secondsPerLiquidityCumulative the seconds per in range liquidity for the life of the pool as of the timepoint timestamp;\r\n   * Returns volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp;\r\n   * Returns averageTick Time-weighted average tick;\r\n   * Returns volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp;\r\n   */\r\n  function timepoints(uint256 index)\r\n    external\r\n    view\r\n    returns (\r\n      bool initialized,\r\n      uint32 blockTimestamp,\r\n      int56 tickCumulative,\r\n      uint160 secondsPerLiquidityCumulative,\r\n      uint88 volatilityCumulative,\r\n      int24 averageTick,\r\n      uint144 volumePerLiquidityCumulative\r\n    );\r\n\r\n  /**\r\n   * @notice Returns the information about active incentive\r\n   * @dev if there is no active incentive at the moment, virtualPool,endTimestamp,startTimestamp would be equal to 0\r\n   * @return virtualPool The address of a virtual pool associated with the current active incentive\r\n   */\r\n  function activeIncentive() external view returns (address virtualPool);\r\n\r\n  /**\r\n   * @notice Returns the lock time for added liquidity\r\n   */\r\n  function liquidityCooldown() external view returns (uint32 cooldownInSeconds);\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolDerivedState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/**\r\n * @title Pool state that is not stored\r\n * @notice Contains view functions to provide information about the pool that is computed rather than stored on the\r\n * blockchain. The functions here may have variable gas costs.\r\n * @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPoolDerivedState {\r\n  /**\r\n   * @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\r\n   * @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\r\n   * the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\r\n   * you must call it with secondsAgos = [3600, 0].\r\n   * @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\r\n   * log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\r\n   * @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\r\n   * @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\r\n   * @return secondsPerLiquidityCumulatives Cumulative seconds per liquidity-in-range value as of each `secondsAgos`\r\n   * from the current block timestamp\r\n   * @return volatilityCumulatives Cumulative standard deviation as of each `secondsAgos`\r\n   * @return volumePerAvgLiquiditys Cumulative swap volume per liquidity as of each `secondsAgos`\r\n   */\r\n  function getTimepoints(uint32[] calldata secondsAgos)\r\n    external\r\n    view\r\n    returns (\r\n      int56[] memory tickCumulatives,\r\n      uint160[] memory secondsPerLiquidityCumulatives,\r\n      uint112[] memory volatilityCumulatives,\r\n      uint256[] memory volumePerAvgLiquiditys\r\n    );\r\n\r\n  /**\r\n   * @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\r\n   * @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\r\n   * I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\r\n   * snapshot is taken and the second snapshot is taken.\r\n   * @param bottomTick The lower tick of the range\r\n   * @param topTick The upper tick of the range\r\n   * @return innerTickCumulative The snapshot of the tick accumulator for the range\r\n   * @return innerSecondsSpentPerLiquidity The snapshot of seconds per liquidity for the range\r\n   * @return innerSecondsSpent The snapshot of the number of seconds during which the price was in this range\r\n   */\r\n  function getInnerCumulatives(int24 bottomTick, int24 topTick)\r\n    external\r\n    view\r\n    returns (\r\n      int56 innerTickCumulative,\r\n      uint160 innerSecondsSpentPerLiquidity,\r\n      uint32 innerSecondsSpent\r\n    );\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Permissionless pool actions\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolActions {\r\n  /**\r\n   * @notice Sets the initial price for the pool\r\n   * @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\r\n   * @param price the initial sqrt price of the pool as a Q64.96\r\n   */\r\n  function initialize(uint160 price) external;\r\n\r\n  /**\r\n   * @notice Adds liquidity for the given recipient/bottomTick/topTick position\r\n   * @dev The caller of this method receives a callback in the form of IAlgebraMintCallback# AlgebraMintCallback\r\n   * in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\r\n   * on bottomTick, topTick, the amount of liquidity, and the current price.\r\n   * @param sender The address which will receive potential surplus of paid tokens\r\n   * @param recipient The address for which the liquidity will be created\r\n   * @param bottomTick The lower tick of the position in which to add liquidity\r\n   * @param topTick The upper tick of the position in which to add liquidity\r\n   * @param amount The desired amount of liquidity to mint\r\n   * @param data Any data that should be passed through to the callback\r\n   * @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n   * @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n   * @return liquidityActual The actual minted amount of liquidity\r\n   */\r\n  function mint(\r\n    address sender,\r\n    address recipient,\r\n    int24 bottomTick,\r\n    int24 topTick,\r\n    uint128 amount,\r\n    bytes calldata data\r\n  )\r\n    external\r\n    returns (\r\n      uint256 amount0,\r\n      uint256 amount1,\r\n      uint128 liquidityActual\r\n    );\r\n\r\n  /**\r\n   * @notice Collects tokens owed to a position\r\n   * @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\r\n   * Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\r\n   * amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\r\n   * actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\r\n   * @param recipient The address which should receive the fees collected\r\n   * @param bottomTick The lower tick of the position for which to collect fees\r\n   * @param topTick The upper tick of the position for which to collect fees\r\n   * @param amount0Requested How much token0 should be withdrawn from the fees owed\r\n   * @param amount1Requested How much token1 should be withdrawn from the fees owed\r\n   * @return amount0 The amount of fees collected in token0\r\n   * @return amount1 The amount of fees collected in token1\r\n   */\r\n  function collect(\r\n    address recipient,\r\n    int24 bottomTick,\r\n    int24 topTick,\r\n    uint128 amount0Requested,\r\n    uint128 amount1Requested\r\n  ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n  /**\r\n   * @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\r\n   * @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\r\n   * @dev Fees must be collected separately via a call to #collect\r\n   * @param bottomTick The lower tick of the position for which to burn liquidity\r\n   * @param topTick The upper tick of the position for which to burn liquidity\r\n   * @param amount How much liquidity to burn\r\n   * @return amount0 The amount of token0 sent to the recipient\r\n   * @return amount1 The amount of token1 sent to the recipient\r\n   */\r\n  function burn(\r\n    int24 bottomTick,\r\n    int24 topTick,\r\n    uint128 amount\r\n  ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n  /**\r\n   * @notice Swap token0 for token1, or token1 for token0\r\n   * @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback# AlgebraSwapCallback\r\n   * @param recipient The address to receive the output of the swap\r\n   * @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n   * value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @param data Any data to be passed through to the callback. If using the Router it should contain\r\n   * SwapRouter#SwapCallbackData\r\n   * @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n   * @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n   */\r\n  function swap(\r\n    address recipient,\r\n    bool zeroToOne,\r\n    int256 amountSpecified,\r\n    uint160 limitSqrtPrice,\r\n    bytes calldata data\r\n  ) external returns (int256 amount0, int256 amount1);\r\n\r\n  /**\r\n   * @notice Swap token0 for token1, or token1 for token0 (tokens that have fee on transfer)\r\n   * @dev The caller of this method receives a callback in the form of I AlgebraSwapCallback# AlgebraSwapCallback\r\n   * @param sender The address called this function (Comes from the Router)\r\n   * @param recipient The address to receive the output of the swap\r\n   * @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n   * @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n   * @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n   * value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n   * @param data Any data to be passed through to the callback. If using the Router it should contain\r\n   * SwapRouter#SwapCallbackData\r\n   * @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n   * @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n   */\r\n  function swapSupportingFeeOnInputTokens(\r\n    address sender,\r\n    address recipient,\r\n    bool zeroToOne,\r\n    int256 amountSpecified,\r\n    uint160 limitSqrtPrice,\r\n    bytes calldata data\r\n  ) external returns (int256 amount0, int256 amount1);\r\n\r\n  /**\r\n   * @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\r\n   * @dev The caller of this method receives a callback in the form of IAlgebraFlashCallback# AlgebraFlashCallback\r\n   * @dev All excess tokens paid in the callback are distributed to liquidity providers as an additional fee. So this method can be used\r\n   * to donate underlying tokens to currently in-range liquidity providers by calling with 0 amount{0,1} and sending\r\n   * the donation amount(s) from the callback\r\n   * @param recipient The address which will receive the token0 and token1 amounts\r\n   * @param amount0 The amount of token0 to send\r\n   * @param amount1 The amount of token1 to send\r\n   * @param data Any data to be passed through to the callback\r\n   */\r\n  function flash(\r\n    address recipient,\r\n    uint256 amount0,\r\n    uint256 amount1,\r\n    bytes calldata data\r\n  ) external;\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolPermissionedActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/**\r\n * @title Permissioned pool actions\r\n * @notice Contains pool methods that may only be called by the factory owner or tokenomics\r\n * @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPoolPermissionedActions {\r\n  /**\r\n   * @notice Set the community's % share of the fees. Cannot exceed 25% (250)\r\n   * @param communityFee0 new community fee percent for token0 of the pool in thousandths (1e-3)\r\n   * @param communityFee1 new community fee percent for token1 of the pool in thousandths (1e-3)\r\n   */\r\n  function setCommunityFee(uint8 communityFee0, uint8 communityFee1) external;\r\n\r\n  /**\r\n   * @notice Sets an active incentive\r\n   * @param virtualPoolAddress The address of a virtual pool associated with the incentive\r\n   */\r\n  function setIncentive(address virtualPoolAddress) external;\r\n\r\n  /**\r\n   * @notice Sets new lock time for added liquidity\r\n   * @param newLiquidityCooldown The time in seconds\r\n   */\r\n  function setLiquidityCooldown(uint32 newLiquidityCooldown) external;\r\n}\r\n"
      },
      "contracts/core/pool/IAlgebraPoolEvents.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Events emitted by a pool\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IAlgebraPoolEvents {\r\n  /**\r\n   * @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n   * @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n   * @param price The initial sqrt price of the pool, as a Q64.96\r\n   * @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n   */\r\n  event Initialize(uint160 price, int24 tick);\r\n\r\n  /**\r\n   * @notice Emitted when liquidity is minted for a given position\r\n   * @param sender The address that minted the liquidity\r\n   * @param owner The owner of the position and recipient of any minted liquidity\r\n   * @param bottomTick The lower tick of the position\r\n   * @param topTick The upper tick of the position\r\n   * @param liquidityAmount The amount of liquidity minted to the position range\r\n   * @param amount0 How much token0 was required for the minted liquidity\r\n   * @param amount1 How much token1 was required for the minted liquidity\r\n   */\r\n  event Mint(\r\n    address sender,\r\n    address indexed owner,\r\n    int24 indexed bottomTick,\r\n    int24 indexed topTick,\r\n    uint128 liquidityAmount,\r\n    uint256 amount0,\r\n    uint256 amount1\r\n  );\r\n\r\n  /**\r\n   * @notice Emitted when fees are collected by the owner of a position\r\n   * @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n   * @param owner The owner of the position for which fees are collected\r\n   * @param recipient The address that received fees\r\n   * @param bottomTick The lower tick of the position\r\n   * @param topTick The upper tick of the position\r\n   * @param amount0 The amount of token0 fees collected\r\n   * @param amount1 The amount of token1 fees collected\r\n   */\r\n  event Collect(address indexed owner, address recipient, int24 indexed bottomTick, int24 indexed topTick, uint128 amount0, uint128 amount1);\r\n\r\n  /**\r\n   * @notice Emitted when a position's liquidity is removed\r\n   * @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n   * @param owner The owner of the position for which liquidity is removed\r\n   * @param bottomTick The lower tick of the position\r\n   * @param topTick The upper tick of the position\r\n   * @param liquidityAmount The amount of liquidity to remove\r\n   * @param amount0 The amount of token0 withdrawn\r\n   * @param amount1 The amount of token1 withdrawn\r\n   */\r\n  event Burn(address indexed owner, int24 indexed bottomTick, int24 indexed topTick, uint128 liquidityAmount, uint256 amount0, uint256 amount1);\r\n\r\n  /**\r\n   * @notice Emitted by the pool for any swaps between token0 and token1\r\n   * @param sender The address that initiated the swap call, and that received the callback\r\n   * @param recipient The address that received the output of the swap\r\n   * @param amount0 The delta of the token0 balance of the pool\r\n   * @param amount1 The delta of the token1 balance of the pool\r\n   * @param price The sqrt(price) of the pool after the swap, as a Q64.96\r\n   * @param liquidity The liquidity of the pool after the swap\r\n   * @param tick The log base 1.0001 of price of the pool after the swap\r\n   */\r\n  event Swap(address indexed sender, address indexed recipient, int256 amount0, int256 amount1, uint160 price, uint128 liquidity, int24 tick);\r\n\r\n  /**\r\n   * @notice Emitted by the pool for any flashes of token0/token1\r\n   * @param sender The address that initiated the swap call, and that received the callback\r\n   * @param recipient The address that received the tokens from flash\r\n   * @param amount0 The amount of token0 that was flashed\r\n   * @param amount1 The amount of token1 that was flashed\r\n   * @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n   * @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n   */\r\n  event Flash(address indexed sender, address indexed recipient, uint256 amount0, uint256 amount1, uint256 paid0, uint256 paid1);\r\n\r\n  /**\r\n   * @notice Emitted when the community fee is changed by the pool\r\n   * @param communityFee0New The updated value of the token0 community fee percent\r\n   * @param communityFee1New The updated value of the token1 community fee percent\r\n   */\r\n  event CommunityFee(uint8 communityFee0New, uint8 communityFee1New);\r\n\r\n  /**\r\n   * @notice Emitted when new activeIncentive is set\r\n   * @param virtualPoolAddress The address of a virtual pool associated with the current active incentive\r\n   */\r\n  event Incentive(address indexed virtualPoolAddress);\r\n\r\n  /**\r\n   * @notice Emitted when the fee changes\r\n   * @param fee The value of the token fee\r\n   */\r\n  event Fee(uint16 fee);\r\n\r\n  /**\r\n   * @notice Emitted when the LiquidityCooldown changes\r\n   * @param liquidityCooldown The value of locktime for added liquidity\r\n   */\r\n  event LiquidityCooldown(uint32 liquidityCooldown);\r\n}\r\n"
      },
      "contracts/core/IDataStorageOperator.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\npragma abicoder v2;\r\n\r\ninterface IDataStorageOperator {\r\n  // alpha1 + alpha2 + baseFee must be <= type(uint16).max\r\n  struct FeeConfig {\r\n    uint16 alpha1; // max value of the first sigmoid\r\n    uint16 alpha2; // max value of the second sigmoid\r\n    uint32 beta1; // shift along the x-axis for the first sigmoid\r\n    uint32 beta2; // shift along the x-axis for the second sigmoid\r\n    uint16 gamma1; // horizontal stretch factor for the first sigmoid\r\n    uint16 gamma2; // horizontal stretch factor for the second sigmoid\r\n    uint32 volumeBeta; // shift along the x-axis for the outer volume-sigmoid\r\n    uint16 volumeGamma; // horizontal stretch factor the outer volume-sigmoid\r\n    uint16 baseFee; // minimum possible fee\r\n  }\r\n\r\n  event FeeConfiguration(FeeConfig feeConfig);\r\n\r\n  /**\r\n   * @notice Returns data belonging to a certain timepoint\r\n   * @param index The index of timepoint in the array\r\n   * @dev There is more convenient function to fetch a timepoint: observe(). Which requires not an index but seconds\r\n   * @return initialized Whether the timepoint has been initialized and the values are safe to use,\r\n   * blockTimestamp The timestamp of the observation,\r\n   * tickCumulative The tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp,\r\n   * secondsPerLiquidityCumulative The seconds per in range liquidity for the life of the pool as of the timepoint timestamp,\r\n   * volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp,\r\n   * averageTick Time-weighted average tick,\r\n   * volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp\r\n   */\r\n  function timepoints(uint256 index)\r\n    external\r\n    view\r\n    returns (\r\n      bool initialized,\r\n      uint32 blockTimestamp,\r\n      int56 tickCumulative,\r\n      uint160 secondsPerLiquidityCumulative,\r\n      uint88 volatilityCumulative,\r\n      int24 averageTick,\r\n      uint144 volumePerLiquidityCumulative\r\n    );\r\n\r\n  /// @notice Initialize the dataStorage array by writing the first slot. Called once for the lifecycle of the timepoints array\r\n  /// @param time The time of the dataStorage initialization, via block.timestamp truncated to uint32\r\n  /// @param tick Initial tick\r\n  function initialize(uint32 time, int24 tick) external;\r\n\r\n  /// @dev Reverts if an timepoint at or before the desired timepoint timestamp does not exist.\r\n  /// 0 may be passed as `secondsAgo' to return the current cumulative values.\r\n  /// If called with a timestamp falling between two timepoints, returns the counterfactual accumulator values\r\n  /// at exactly the timestamp between the two timepoints.\r\n  /// @param time The current block timestamp\r\n  /// @param secondsAgo The amount of time to look back, in seconds, at which point to return an timepoint\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return tickCumulative The cumulative tick since the pool was first initialized, as of `secondsAgo`\r\n  /// @return secondsPerLiquidityCumulative The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\r\n  /// @return volatilityCumulative The cumulative volatility value since the pool was first initialized, as of `secondsAgo`\r\n  /// @return volumePerAvgLiquidity The cumulative volume per liquidity value since the pool was first initialized, as of `secondsAgo`\r\n  function getSingleTimepoint(\r\n    uint32 time,\r\n    uint32 secondsAgo,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  )\r\n    external\r\n    view\r\n    returns (\r\n      int56 tickCumulative,\r\n      uint160 secondsPerLiquidityCumulative,\r\n      uint112 volatilityCumulative,\r\n      uint256 volumePerAvgLiquidity\r\n    );\r\n\r\n  /// @notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\r\n  /// @dev Reverts if `secondsAgos` > oldest timepoint\r\n  /// @param time The current block.timestamp\r\n  /// @param secondsAgos Each amount of time to look back, in seconds, at which point to return an timepoint\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return tickCumulatives The cumulative tick since the pool was first initialized, as of each `secondsAgo`\r\n  /// @return secondsPerLiquidityCumulatives The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\r\n  /// @return volatilityCumulatives The cumulative volatility values since the pool was first initialized, as of each `secondsAgo`\r\n  /// @return volumePerAvgLiquiditys The cumulative volume per liquidity values since the pool was first initialized, as of each `secondsAgo`\r\n  function getTimepoints(\r\n    uint32 time,\r\n    uint32[] memory secondsAgos,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  )\r\n    external\r\n    view\r\n    returns (\r\n      int56[] memory tickCumulatives,\r\n      uint160[] memory secondsPerLiquidityCumulatives,\r\n      uint112[] memory volatilityCumulatives,\r\n      uint256[] memory volumePerAvgLiquiditys\r\n    );\r\n\r\n  /// @notice Returns average volatility in the range from time-WINDOW to time\r\n  /// @param time The current block.timestamp\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return TWVolatilityAverage The average volatility in the recent range\r\n  /// @return TWVolumePerLiqAverage The average volume per liquidity in the recent range\r\n  function getAverages(\r\n    uint32 time,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  ) external view returns (uint112 TWVolatilityAverage, uint256 TWVolumePerLiqAverage);\r\n\r\n  /// @notice Writes an dataStorage timepoint to the array\r\n  /// @dev Writable at most once per block. Index represents the most recently written element. index must be tracked externally.\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param blockTimestamp The timestamp of the new timepoint\r\n  /// @param tick The active tick at the time of the new timepoint\r\n  /// @param liquidity The total in-range liquidity at the time of the new timepoint\r\n  /// @param volumePerLiquidity The gmean(volumes)/liquidity at the time of the new timepoint\r\n  /// @return indexUpdated The new index of the most recently written element in the dataStorage array\r\n  function write(\r\n    uint16 index,\r\n    uint32 blockTimestamp,\r\n    int24 tick,\r\n    uint128 liquidity,\r\n    uint128 volumePerLiquidity\r\n  ) external returns (uint16 indexUpdated);\r\n\r\n  /// @notice Changes fee configuration for the pool\r\n  function changeFeeConfiguration(FeeConfig calldata feeConfig) external;\r\n\r\n  /// @notice Calculates gmean(volume/liquidity) for block\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @param amount0 Total amount of swapped token0\r\n  /// @param amount1 Total amount of swapped token1\r\n  /// @return volumePerLiquidity gmean(volume/liquidity) capped by 100000 << 64\r\n  function calculateVolumePerLiquidity(\r\n    uint128 liquidity,\r\n    int256 amount0,\r\n    int256 amount1\r\n  ) external pure returns (uint128 volumePerLiquidity);\r\n\r\n  /// @return windowLength Length of window used to calculate averages\r\n  function window() external view returns (uint32 windowLength);\r\n\r\n  /// @notice Calculates fee based on combination of sigmoids\r\n  /// @param time The current block.timestamp\r\n  /// @param tick The current tick\r\n  /// @param index The index of the timepoint that was most recently written to the timepoints array\r\n  /// @param liquidity The current in-range pool liquidity\r\n  /// @return fee The fee in hundredths of a bip, i.e. 1e-6\r\n  function getFee(\r\n    uint32 time,\r\n    int24 tick,\r\n    uint16 index,\r\n    uint128 liquidity\r\n  ) external view returns (uint16 fee);\r\n}\r\n"
      },
      "contracts/tokenomics/IFarmingCenter.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '../core/IAlgebraPool.sol';\r\nimport '../core/IAlgebraVirtualPool.sol';\r\nimport '../core/IERC20Minimal.sol';\r\n\r\nimport '../periphery/IMulticall.sol';\r\nimport '../periphery/INonfungiblePositionManager.sol';\r\n\r\nimport '../periphery/IPeripheryPayments.sol';\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\r\n\r\nimport './farmings/limitFarming/IAlgebraLimitFarming.sol';\r\nimport './farmings/eternalFarming/IAlgebraEternalFarming.sol';\r\nimport './IFarmingCenterVault.sol';\r\nimport './IIncentiveKey.sol';\r\n\r\ninterface IFarmingCenter is\r\n    IAlgebraVirtualPool,\r\n    IERC721Receiver,\r\n    IIncentiveKey,\r\n    IMulticall,\r\n    IERC721Permit,\r\n    IPeripheryPayments\r\n{\r\n    struct VirtualPoolAddresses {\r\n        address eternalVirtualPool;\r\n        address limitVirtualPool;\r\n    }\r\n\r\n    function virtualPoolAddresses(address) external view returns (address, address);\r\n\r\n    /// @notice The nonfungible position manager with which this farming contract is compatible\r\n    function nonfungiblePositionManager() external view returns (INonfungiblePositionManager);\r\n\r\n    function limitFarming() external view returns (IAlgebraLimitFarming);\r\n\r\n    function eternalFarming() external view returns (IAlgebraEternalFarming);\r\n\r\n    function farmingCenterVault() external view returns (IFarmingCenterVault);\r\n\r\n    function l2Nfts(uint256)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            uint256 tokenId\r\n        );\r\n\r\n    /// @notice Returns information about a deposited NFT\r\n    /// @param tokenId The ID of the deposit (and token) that is being transferred\r\n    /// @return L2TokenId The nft layer2 id,\r\n    /// numberOfFarms The number of farms,\r\n    /// inLimitFarming The parameter showing if the token is in the limit farm,\r\n    /// owner The owner of deposit\r\n    function deposits(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 L2TokenId,\r\n            uint32 numberOfFarms,\r\n            bool inLimitFarming,\r\n            address owner\r\n        );\r\n\r\n    /// @notice Updates activeIncentive in AlgebraPool\r\n    /// @dev only farming can do it\r\n    /// @param pool The AlgebraPool for which farming was created\r\n    /// @param virtualPool The virtual pool to be connected\r\n    function connectVirtualPool(IAlgebraPool pool, address virtualPool) external;\r\n\r\n    /// @notice Enters in incentive (time-limited or eternal farming) with NFT-position token\r\n    /// @dev token must be deposited in FarmingCenter\r\n    /// @param key The incentive event key\r\n    /// @param tokenId The id of position NFT\r\n    /// @param tokensLocked Amount of tokens to lock for liquidity multiplier (if tiers are used)\r\n    /// @param isLimit Is incentive time-limited or eternal\r\n    function enterFarming(\r\n        IncentiveKey memory key,\r\n        uint256 tokenId,\r\n        uint256 tokensLocked,\r\n        bool isLimit\r\n    ) external;\r\n\r\n    /// @notice Exits from incentive (time-limited or eternal farming) with NFT-position token\r\n    /// @param key The incentive event key\r\n    /// @param tokenId The id of position NFT\r\n    /// @param isLimit Is incentive time-limited or eternal\r\n    function exitFarming(\r\n        IncentiveKey memory key,\r\n        uint256 tokenId,\r\n        bool isLimit\r\n    ) external;\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @dev \"proxies\" to NonfungiblePositionManager\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(INonfungiblePositionManager.CollectParams calldata params)\r\n        external\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Used to collect reward from eternal farming. Then reward can be claimed.\r\n    /// @param key The incentive event key\r\n    /// @param tokenId The id of position NFT\r\n    /// @return reward The amount of collected reward\r\n    /// @return bonusReward The amount of collected  bonus reward\r\n    function collectRewards(IncentiveKey memory key, uint256 tokenId)\r\n        external\r\n        returns (uint256 reward, uint256 bonusReward);\r\n\r\n    /// @notice Used to claim and send rewards from farming(s)\r\n    /// @dev can be used via static call to get current rewards for user\r\n    /// @param rewardToken The token that is a reward\r\n    /// @param to The address to be rewarded\r\n    /// @param amountRequestedIncentive Amount to claim in incentive (limit) farming\r\n    /// @param amountRequestedEternal Amount to claim in eternal farming\r\n    /// @return reward The summary amount of claimed rewards\r\n    function claimReward(\r\n        IERC20Minimal rewardToken,\r\n        address to,\r\n        uint256 amountRequestedIncentive,\r\n        uint256 amountRequestedEternal\r\n    ) external returns (uint256 reward);\r\n\r\n    /// @notice Withdraw Algebra NFT-position token\r\n    /// @dev can be used via static call to get current rewards for user\r\n    /// @param tokenId The id of position NFT\r\n    /// @param to New owner of position NFT\r\n    /// @param data The additional data for NonfungiblePositionManager\r\n    function withdrawToken(\r\n        uint256 tokenId,\r\n        address to,\r\n        bytes memory data\r\n    ) external;\r\n\r\n    /// @notice Emitted when ownership of a deposit changes\r\n    /// @param tokenId The ID of the deposit (and token) that is being transferred\r\n    /// @param oldOwner The owner before the deposit was transferred\r\n    /// @param newOwner The owner after the deposit was transferred\r\n    event DepositTransferred(uint256 indexed tokenId, address indexed oldOwner, address indexed newOwner);\r\n}\r\n"
      },
      "contracts/core/IAlgebraVirtualPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\ninterface IAlgebraVirtualPool {\r\n  enum Status {\r\n    NOT_EXIST,\r\n    ACTIVE,\r\n    NOT_STARTED\r\n  }\r\n\r\n  /**\r\n   * @dev This function is called by the main pool when an initialized tick is crossed there.\r\n   * If the tick is also initialized in a virtual pool it should be crossed too\r\n   * @param nextTick The crossed tick\r\n   * @param zeroToOne The direction\r\n   */\r\n  function cross(int24 nextTick, bool zeroToOne) external;\r\n\r\n  /**\r\n   * @dev This function is called from the main pool before every swap To increase seconds per liquidity\r\n   * cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool\r\n   * @param currentTimestamp The timestamp of the current swap\r\n   * @return Status The status of virtual pool\r\n   */\r\n  function increaseCumulative(uint32 currentTimestamp) external returns (Status);\r\n}\r\n"
      },
      "contracts/core/IERC20Minimal.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Minimal ERC20 interface for Algebra\r\n/// @notice Contains a subset of the full ERC20 interface that is used in Algebra\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\ninterface IERC20Minimal {\r\n  /// @notice Returns the balance of a token\r\n  /// @param account The account for which to look up the number of tokens it has, i.e. its balance\r\n  /// @return The number of tokens held by the account\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /// @notice Transfers the amount of token from the `msg.sender` to the recipient\r\n  /// @param recipient The account that will receive the amount transferred\r\n  /// @param amount The number of tokens to send from the sender to the recipient\r\n  /// @return Returns true for a successful transfer, false for an unsuccessful transfer\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /// @notice Returns the current allowance given to a spender by an owner\r\n  /// @param owner The account of the token owner\r\n  /// @param spender The account of the token spender\r\n  /// @return The current allowance granted by `owner` to `spender`\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\r\n  /// @param spender The account which will be allowed to spend a given amount of the owners tokens\r\n  /// @param amount The amount of tokens allowed to be used by `spender`\r\n  /// @return Returns true for a successful approval, false for unsuccessful\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\r\n  /// @param sender The account from which the transfer will be initiated\r\n  /// @param recipient The recipient of the transfer\r\n  /// @param amount The amount of the transfer\r\n  /// @return Returns true for a successful transfer, false for unsuccessful\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\r\n  /// @param from The account from which the tokens were sent, i.e. the balance decreased\r\n  /// @param to The account to which the tokens were sent, i.e. the balance increased\r\n  /// @param value The amount of tokens that were transferred\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\r\n  /// @param owner The account that approved spending of its tokens\r\n  /// @param spender The account for which the spending allowance was modified\r\n  /// @param value The new allowance from the owner to the spender\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
      },
      "contracts/periphery/IMulticall.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n/// @title Multicall interface\r\n/// @notice Enables calling multiple methods in a single call to the contract\r\ninterface IMulticall {\r\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\r\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\r\n    /// @param data The encoded function data for each of the calls to make to this contract\r\n    /// @return results The results from each of the calls passed in via data\r\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\r\n}\r\n"
      },
      "contracts/periphery/INonfungiblePositionManager.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\r\n\r\nimport './IPoolInitializer.sol';\r\nimport './IERC721Permit.sol';\r\nimport './IPeripheryPayments.sol';\r\nimport './IPeripheryImmutableState.sol';\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps Algebra positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface INonfungiblePositionManager is\r\n    IPoolInitializer,\r\n    IPeripheryPayments,\r\n    IPeripheryImmutableState,\r\n    IERC721Metadata,\r\n    IERC721Enumerable,\r\n    IERC721Permit\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param actualLiquidity the actual liquidity that was added into a pool. Could differ from\r\n    /// _liquidity_ when using FeeOnTransfer tokens\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(\r\n        uint256 indexed tokenId,\r\n        uint128 liquidity,\r\n        uint128 actualLiquidity,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        address pool\r\n    );\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to achieve resulting liquidity\r\n    /// @return amount1 The amount of token1 to achieve resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (\r\n            uint128 liquidity,\r\n            uint256 amount0,\r\n            uint256 amount1\r\n        );\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n}\r\n"
      },
      "contracts/periphery/IPeripheryPayments.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\n\r\n/// @title Periphery Payments\r\n/// @notice Functions to ease deposits and withdrawals of NativeToken\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface IPeripheryPayments {\r\n    /// @notice Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken.\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users.\r\n    /// @param amountMinimum The minimum amount of WNativeToken to unwrap\r\n    /// @param recipient The address receiving NativeToken\r\n    function unwrapWNativeToken(uint256 amountMinimum, address recipient) external payable;\r\n\r\n    /// @notice Refunds any NativeToken balance held by this contract to the `msg.sender`\r\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\r\n    /// that use ether for the input amount\r\n    function refundNativeToken() external payable;\r\n\r\n    /// @notice Transfers the full amount of a token held by this contract to recipient\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\r\n    /// @param token The contract address of the token which will be transferred to `recipient`\r\n    /// @param amountMinimum The minimum amount of token required for a transfer\r\n    /// @param recipient The destination address of the token\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) external payable;\r\n}\r\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\n}\n"
      },
      "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitFarming.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '../../IAlgebraFarming.sol';\r\n\r\n/// @title Algebra Farming Interface\r\n/// @notice Allows farming nonfungible liquidity tokens in exchange for reward tokens\r\ninterface IAlgebraLimitFarming is IAlgebraFarming {\r\n    struct IncentiveParams {\r\n        uint256 reward; // The amount of reward tokens to be distributed\r\n        uint256 bonusReward; // The amount of bonus reward tokens to be distributed\r\n        uint24 minimalPositionWidth; // The minimal allowed width of position (tickUpper - tickLower)\r\n        address multiplierToken; // The address of token which can be locked to get liquidity multiplier\r\n        uint32 enterStartTime; // The time when enter should become possible\r\n    }\r\n\r\n    /// @notice The max duration of an incentive in seconds\r\n    function maxIncentiveDuration() external view returns (uint256);\r\n\r\n    /// @notice The max amount of seconds into the future the incentive startTime can be set\r\n    function maxIncentiveStartLeadTime() external view returns (uint256);\r\n\r\n    /// @notice Returns information about a farmd liquidity NFT\r\n    /// @param tokenId The ID of the farmd token\r\n    /// @param incentiveId The ID of the incentive for which the token is farmd\r\n    /// @return liquidity The amount of liquidity in the NFT as of the last time the rewards were computed,\r\n    /// tickLower The lower end of the tick range for the position,\r\n    /// tickUpper The upper end of the tick range for the position\r\n    function farms(uint256 tokenId, bytes32 incentiveId)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 liquidity,\r\n            int24 tickLower,\r\n            int24 tickUpper\r\n        );\r\n\r\n    function createLimitFarming(\r\n        IncentiveKey memory key,\r\n        Tiers calldata tiers,\r\n        IncentiveParams memory params\r\n    ) external returns (address virtualPool);\r\n\r\n    function addRewards(\r\n        IncentiveKey memory key,\r\n        uint256 reward,\r\n        uint256 bonusReward\r\n    ) external;\r\n\r\n    function decreaseRewardsAmount(\r\n        IncentiveKey memory key,\r\n        uint256 rewardAmount,\r\n        uint256 bonusRewardAmount\r\n    ) external;\r\n\r\n    /// @notice Event emitted when a liquidity mining incentive has been created\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param bonusRewardToken The token being distributed as a bonus reward\r\n    /// @param pool The Algebra pool\r\n    /// @param startTime The time when the incentive program begins\r\n    /// @param endTime The time when rewards stop accruing\r\n    /// @param reward The amount of reward tokens to be distributed\r\n    /// @param bonusReward The amount of bonus reward tokens to be distributed\r\n    /// @param tiers The amounts of locked token for liquidity multipliers\r\n    /// @param multiplierToken The address of token which can be locked to get liquidity multiplier\r\n    /// @param minimalAllowedPositionWidth The minimal allowed position width (tickUpper - tickLower)\r\n    /// @param enterStartTime The time when enter becomes possible\r\n    event LimitFarmingCreated(\r\n        IERC20Minimal indexed rewardToken,\r\n        IERC20Minimal indexed bonusRewardToken,\r\n        IAlgebraPool indexed pool,\r\n        uint256 startTime,\r\n        uint256 endTime,\r\n        uint256 reward,\r\n        uint256 bonusReward,\r\n        Tiers tiers,\r\n        address multiplierToken,\r\n        uint24 minimalAllowedPositionWidth,\r\n        uint32 enterStartTime\r\n    );\r\n\r\n    event RewardAmountsDecreased(uint256 reward, uint256 bonusReward, bytes32 incentiveId);\r\n}\r\n"
      },
      "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalFarming.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\nimport '../../IAlgebraFarming.sol';\r\n\r\n/// @title Algebra Eternal Farming Interface\r\n/// @notice Allows farming nonfungible liquidity tokens in exchange for reward tokens without locking NFT for incentive time\r\ninterface IAlgebraEternalFarming is IAlgebraFarming {\r\n    struct IncentiveParams {\r\n        uint256 reward; // The amount of reward tokens to be distributed\r\n        uint256 bonusReward; // The amount of bonus reward tokens to be distributed\r\n        uint128 rewardRate; // The rate of reward distribution per second\r\n        uint128 bonusRewardRate; // The rate of bonus reward distribution per second\r\n        uint24 minimalPositionWidth; // The minimal allowed width of position (tickUpper - tickLower)\r\n        address multiplierToken; // The address of token which can be locked to get liquidity multiplier\r\n    }\r\n\r\n    /// @notice Event emitted when reward rates were changed\r\n    /// @param rewardRate The new rate of main token distribution per sec\r\n    /// @param bonusRewardRate The new rate of bonus token distribution per sec\r\n    /// @param incentiveId The ID of the incentive for which rates were changed\r\n    event RewardsRatesChanged(uint128 rewardRate, uint128 bonusRewardRate, bytes32 incentiveId);\r\n\r\n    /// @notice Event emitted when rewards were added\r\n    /// @param tokenId The ID of the token for which rewards were collected\r\n    /// @param incentiveId The ID of the incentive for which rewards were collected\r\n    /// @param rewardAmount Collected amount of reward\r\n    /// @param bonusRewardAmount Collected amount of bonus reward\r\n    event RewardsCollected(uint256 tokenId, bytes32 incentiveId, uint256 rewardAmount, uint256 bonusRewardAmount);\r\n\r\n    /// @notice Returns information about a farmd liquidity NFT\r\n    /// @param tokenId The ID of the farmd token\r\n    /// @param incentiveId The ID of the incentive for which the token is farmd\r\n    /// @return liquidity The amount of liquidity in the NFT as of the last time the rewards were computed,\r\n    /// tickLower The lower tick of position,\r\n    /// tickUpper The upper tick of position,\r\n    /// innerRewardGrowth0 The last saved reward0 growth inside position,\r\n    /// innerRewardGrowth1 The last saved reward1 growth inside position\r\n    function farms(uint256 tokenId, bytes32 incentiveId)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 liquidity,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint256 innerRewardGrowth0,\r\n            uint256 innerRewardGrowth1\r\n        );\r\n\r\n    /// @notice Creates a new liquidity mining incentive program\r\n    /// @param key Details of the incentive to create\r\n    /// @param params Params of incentive\r\n    /// @param tiers The amounts of locked token for liquidity multipliers\r\n    /// @return virtualPool The virtual pool\r\n    function createEternalFarming(\r\n        IncentiveKey memory key,\r\n        IncentiveParams memory params,\r\n        Tiers calldata tiers\r\n    ) external returns (address virtualPool);\r\n\r\n    function addRewards(\r\n        IncentiveKey memory key,\r\n        uint256 rewardAmount,\r\n        uint256 bonusRewardAmount\r\n    ) external;\r\n\r\n    function setRates(\r\n        IncentiveKey memory key,\r\n        uint128 rewardRate,\r\n        uint128 bonusRewardRate\r\n    ) external;\r\n\r\n    function collectRewards(\r\n        IncentiveKey memory key,\r\n        uint256 tokenId,\r\n        address _owner\r\n    ) external returns (uint256 reward, uint256 bonusReward);\r\n\r\n    /// @notice Event emitted when a liquidity mining incentive has been created\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param bonusRewardToken The token being distributed as a bonus reward\r\n    /// @param pool The Algebra pool\r\n    /// @param virtualPool The virtual pool address\r\n    /// @param startTime The time when the incentive program begins\r\n    /// @param endTime The time when rewards stop accruing\r\n    /// @param reward The amount of reward tokens to be distributed\r\n    /// @param bonusReward The amount of bonus reward tokens to be distributed\r\n    /// @param tiers The amounts of locked token for liquidity multipliers\r\n    /// @param multiplierToken The address of token which can be locked to get liquidity multiplier\r\n    /// @param minimalAllowedPositionWidth The minimal allowed position width (tickUpper - tickLower)\r\n    event EternalFarmingCreated(\r\n        IERC20Minimal indexed rewardToken,\r\n        IERC20Minimal indexed bonusRewardToken,\r\n        IAlgebraPool indexed pool,\r\n        address virtualPool,\r\n        uint256 startTime,\r\n        uint256 endTime,\r\n        uint256 reward,\r\n        uint256 bonusReward,\r\n        Tiers tiers,\r\n        address multiplierToken,\r\n        uint24 minimalAllowedPositionWidth\r\n    );\r\n}\r\n"
      },
      "contracts/tokenomics/IFarmingCenterVault.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity 0.7.6;\r\n\r\ninterface IFarmingCenterVault {\r\n    function claimTokens(\r\n        address token,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes32 incentiveId\r\n    ) external;\r\n\r\n    function setFarmingCenter(address farming) external;\r\n\r\n    function lockTokens(\r\n        uint256 tokenId,\r\n        bytes32 incentiveId,\r\n        uint256 tokenAmount\r\n    ) external;\r\n\r\n    function balances(uint256 tokenId, bytes32 incentiveId) external view returns (uint256 balance);\r\n}\r\n"
      },
      "contracts/tokenomics/IIncentiveKey.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\n\r\nimport '../core/IERC20Minimal.sol';\r\nimport '../core/IAlgebraPool.sol';\r\n\r\ninterface IIncentiveKey {\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param bonusRewardToken The bonus token being distributed as a reward\r\n    /// @param pool The Algebra pool\r\n    /// @param startTime The time when the incentive program begins\r\n    /// @param endTime The time when rewards stop accruing\r\n    struct IncentiveKey {\r\n        IERC20Minimal rewardToken;\r\n        IERC20Minimal bonusRewardToken;\r\n        IAlgebraPool pool;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n    }\r\n}\r\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
      },
      "contracts/periphery/IPoolInitializer.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n/// @title Creates and initializes V3 Pools\r\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\r\n/// require the pool to exist.\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface IPoolInitializer {\r\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\r\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\r\n    /// @param token0 The contract address of token0 of the pool\r\n    /// @param token1 The contract address of token1 of the pool\r\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\r\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\r\n    function createAndInitializePoolIfNecessary(\r\n        address token0,\r\n        address token1,\r\n        uint160 sqrtPriceX96\r\n    ) external payable returns (address pool);\r\n}\r\n"
      },
      "contracts/periphery/IERC721Permit.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\n\r\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\r\n\r\n/// @title ERC721 with permit\r\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\r\ninterface IERC721Permit is IERC721 {\r\n    /// @notice The permit typehash used in the permit signature\r\n    /// @return The typehash for the permit\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\r\n    /// @notice The domain separator used in the permit signature\r\n    /// @return The domain seperator used in encoding of permit signature\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\r\n    /// @notice Approve of a specific token ID for spending by spender via signature\r\n    /// @param spender The account that is being approved\r\n    /// @param tokenId The ID of the token that is being approved for spending\r\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function permit(\r\n        address spender,\r\n        uint256 tokenId,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n}\r\n"
      },
      "contracts/periphery/IPeripheryImmutableState.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Immutable state\r\n/// @notice Functions that return immutable state of the router\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface IPeripheryImmutableState {\r\n    /// @return Returns the address of the Algebra factory\r\n    function factory() external view returns (address);\r\n\r\n    /// @return Returns the address of the pool Deployer\r\n    function poolDeployer() external view returns (address);\r\n\r\n    /// @return Returns the address of WNativeToken\r\n    function WNativeToken() external view returns (address);\r\n}\r\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n"
      },
      "@openzeppelin/contracts/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/tokenomics/IAlgebraFarming.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '../core/IAlgebraPoolDeployer.sol';\r\nimport '../core/IAlgebraPool.sol';\r\nimport '../core/IERC20Minimal.sol';\r\nimport '../periphery/INonfungiblePositionManager.sol';\r\n\r\nimport './IIncentiveKey.sol';\r\n\r\n/// @title Algebra Farming Interface\r\n/// @notice Allows farming nonfungible liquidity tokens in exchange for reward tokens\r\ninterface IAlgebraFarming is IIncentiveKey {\r\n    /// @notice The nonfungible position manager with which this farming contract is compatible\r\n    function nonfungiblePositionManager() external view returns (INonfungiblePositionManager);\r\n\r\n\r\n    /// @notice The pool deployer\r\n    function deployer() external returns (IAlgebraPoolDeployer);\r\n\r\n    /// @notice Updates the incentive maker\r\n    /// @param _incentiveMaker The new incentive maker address\r\n    function setIncentiveMaker(address _incentiveMaker) external;\r\n\r\n    struct Tiers {\r\n        // amount of token to reach the tier\r\n        uint256 tokenAmountForTier1;\r\n        uint256 tokenAmountForTier2;\r\n        uint256 tokenAmountForTier3;\r\n        // 1 = 0.01%\r\n        uint32 tier1Multiplier;\r\n        uint32 tier2Multiplier;\r\n        uint32 tier3Multiplier;\r\n    }\r\n\r\n    /// @notice Represents a farming incentive\r\n    /// @param incentiveId The ID of the incentive computed from its parameters\r\n    function incentives(bytes32 incentiveId)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 totalReward,\r\n            uint256 bonusReward,\r\n            address virtualPoolAddress,\r\n            uint24 minimalPositionWidth,\r\n            uint224 totalLiquidity,\r\n            address multiplierToken,\r\n            Tiers memory tiers\r\n        );\r\n\r\n    /// @notice Detach incentive from the pool\r\n    /// @param key The key of the incentive\r\n    function detachIncentive(IncentiveKey memory key) external;\r\n\r\n    /// @notice Attach incentive to the pool\r\n    /// @param key The key of the incentive\r\n    function attachIncentive(IncentiveKey memory key) external;\r\n\r\n    /// @notice Returns amounts of reward tokens owed to a given address according to the last time all farms were updated\r\n    /// @param owner The owner for which the rewards owed are checked\r\n    /// @param rewardToken The token for which to check rewards\r\n    /// @return rewardsOwed The amount of the reward token claimable by the owner\r\n    function rewards(address owner, IERC20Minimal rewardToken) external view returns (uint256 rewardsOwed);\r\n\r\n    /// @notice Updates farming center address\r\n    /// @param _farmingCenter The new farming center contract address\r\n    function setFarmingCenterAddress(address _farmingCenter) external;\r\n\r\n    /// @notice enter farming for Algebra LP token\r\n    /// @param key The key of the incentive for which to enterFarming the NFT\r\n    /// @param tokenId The ID of the token to exitFarming\r\n    /// @param tokensLocked The amount of tokens locked for boost\r\n    function enterFarming(\r\n        IncentiveKey memory key,\r\n        uint256 tokenId,\r\n        uint256 tokensLocked\r\n    ) external;\r\n\r\n    /// @notice exitFarmings for Algebra LP token\r\n    /// @param key The key of the incentive for which to exitFarming the NFT\r\n    /// @param tokenId The ID of the token to exitFarming\r\n    /// @param _owner Owner of the token\r\n    function exitFarming(\r\n        IncentiveKey memory key,\r\n        uint256 tokenId,\r\n        address _owner\r\n    ) external;\r\n\r\n    /// @notice Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param to The address where claimed rewards will be sent to\r\n    /// @param amountRequested The amount of reward tokens to claim. Claims entire reward amount if set to 0.\r\n    /// @return reward The amount of reward tokens claimed\r\n    function claimReward(\r\n        IERC20Minimal rewardToken,\r\n        address to,\r\n        uint256 amountRequested\r\n    ) external returns (uint256 reward);\r\n\r\n    /// @notice Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\r\n    /// @notice only for FarmingCenter\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param from The address of position owner\r\n    /// @param to The address where claimed rewards will be sent to\r\n    /// @param amountRequested The amount of reward tokens to claim. Claims entire reward amount if set to 0.\r\n    /// @return reward The amount of reward tokens claimed\r\n    function claimRewardFrom(\r\n        IERC20Minimal rewardToken,\r\n        address from,\r\n        address to,\r\n        uint256 amountRequested\r\n    ) external returns (uint256 reward);\r\n\r\n    /// @notice Calculates the reward amount that will be received for the given farm\r\n    /// @param key The key of the incentive\r\n    /// @param tokenId The ID of the token\r\n    /// @return reward The reward accrued to the NFT for the given incentive thus far\r\n    /// @return bonusReward The bonus reward accrued to the NFT for the given incentive thus far\r\n    function getRewardInfo(IncentiveKey memory key, uint256 tokenId)\r\n        external\r\n        returns (uint256 reward, uint256 bonusReward);\r\n\r\n    /// @notice Event emitted when a liquidity mining incentive has been stopped from the outside\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param bonusRewardToken The token being distributed as a bonus reward\r\n    /// @param pool The Algebra pool\r\n    /// @param virtualPool The detached virtual pool address\r\n    /// @param startTime The time when the incentive program begins\r\n    /// @param endTime The time when rewards stop accruing\r\n    event IncentiveDetached(\r\n        IERC20Minimal indexed rewardToken,\r\n        IERC20Minimal indexed bonusRewardToken,\r\n        IAlgebraPool indexed pool,\r\n        address virtualPool,\r\n        uint256 startTime,\r\n        uint256 endTime\r\n    );\r\n\r\n    /// @notice Event emitted when a liquidity mining incentive has been runned again from the outside\r\n    /// @param rewardToken The token being distributed as a reward\r\n    /// @param bonusRewardToken The token being distributed as a bonus reward\r\n    /// @param pool The Algebra pool\r\n    /// @param virtualPool The attached virtual pool address\r\n    /// @param startTime The time when the incentive program begins\r\n    /// @param endTime The time when rewards stop accruing\r\n    event IncentiveAttached(\r\n        IERC20Minimal indexed rewardToken,\r\n        IERC20Minimal indexed bonusRewardToken,\r\n        IAlgebraPool indexed pool,\r\n        address virtualPool,\r\n        uint256 startTime,\r\n        uint256 endTime\r\n    );\r\n\r\n    /// @notice Event emitted when a Algebra LP token has been farmd\r\n    /// @param tokenId The unique identifier of an Algebra LP token\r\n    /// @param incentiveId The incentive in which the token is farming\r\n    /// @param liquidity The amount of liquidity farmd\r\n    /// @param tokensLocked The amount of tokens locked for multiplier\r\n    event FarmEntered(uint256 indexed tokenId, bytes32 indexed incentiveId, uint128 liquidity, uint256 tokensLocked);\r\n\r\n    /// @notice Event emitted when a Algebra LP token has been exitFarmingd\r\n    /// @param tokenId The unique identifier of an Algebra LP token\r\n    /// @param incentiveId The incentive in which the token is farming\r\n    /// @param rewardAddress The token being distributed as a reward\r\n    /// @param bonusRewardToken The token being distributed as a bonus reward\r\n    /// @param owner The address where claimed rewards were sent to\r\n    /// @param reward The amount of reward tokens to be distributed\r\n    /// @param bonusReward The amount of bonus reward tokens to be distributed\r\n    event FarmEnded(\r\n        uint256 indexed tokenId,\r\n        bytes32 indexed incentiveId,\r\n        address indexed rewardAddress,\r\n        address bonusRewardToken,\r\n        address owner,\r\n        uint256 reward,\r\n        uint256 bonusReward\r\n    );\r\n\r\n    /// @notice Emitted when the incentive maker is changed\r\n    /// @param incentiveMaker The incentive maker after the address was changed\r\n    event IncentiveMaker(address indexed incentiveMaker);\r\n\r\n    /// @notice Emitted when the farming center is changed\r\n    /// @param farmingCenter The farming center after the address was changed\r\n    event FarmingCenter(address indexed farmingCenter);\r\n\r\n    /// @notice Event emitted when rewards were added\r\n    /// @param rewardAmount The additional amount of main token\r\n    /// @param bonusRewardAmount The additional amount of bonus token\r\n    /// @param incentiveId The ID of the incentive for which rewards were added\r\n    event RewardsAdded(uint256 rewardAmount, uint256 bonusRewardAmount, bytes32 incentiveId);\r\n\r\n    /// @notice Event emitted when a reward token has been claimed\r\n    /// @param to The address where claimed rewards were sent to\r\n    /// @param reward The amount of reward tokens claimed\r\n    /// @param rewardAddress The token reward address\r\n    /// @param owner The address where claimed rewards were sent to\r\n    event RewardClaimed(address indexed to, uint256 reward, address indexed rewardAddress, address indexed owner);\r\n}\r\n"
      },
      "contracts/core/IAlgebraPoolDeployer.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/**\r\n * @title An interface for a contract that is capable of deploying Algebra Pools\r\n * @notice A contract that constructs a pool must implement this to pass arguments to the pool\r\n * @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\r\n * of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain.\r\n * Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n * https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\r\n */\r\ninterface IAlgebraPoolDeployer {\r\n  /**\r\n   *  @notice Emitted when the factory address is changed\r\n   *  @param factory The factory address after the address was changed\r\n   */\r\n  event Factory(address indexed factory);\r\n\r\n  /**\r\n   * @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\r\n   * @dev Called by the pool constructor to fetch the parameters of the pool\r\n   * Returns dataStorage The pools associated dataStorage\r\n   * Returns factory The factory address\r\n   * Returns token0 The first token of the pool by address sort order\r\n   * Returns token1 The second token of the pool by address sort order\r\n   */\r\n  function parameters()\r\n    external\r\n    view\r\n    returns (\r\n      address dataStorage,\r\n      address factory,\r\n      address token0,\r\n      address token1\r\n    );\r\n\r\n  /**\r\n   * @dev Deploys a pool with the given parameters by transiently setting the parameters storage slot and then\r\n   * clearing it after deploying the pool.\r\n   * @param dataStorage The pools associated dataStorage\r\n   * @param factory The contract address of the Algebra factory\r\n   * @param token0 The first token of the pool by address sort order\r\n   * @param token1 The second token of the pool by address sort order\r\n   * @return pool The deployed pool's address\r\n   */\r\n  function deploy(\r\n    address dataStorage,\r\n    address factory,\r\n    address token0,\r\n    address token1\r\n  ) external returns (address pool);\r\n\r\n  /**\r\n   * @dev Sets the factory address to the poolDeployer for permissioned actions\r\n   * @param factory The address of the Algebra factory\r\n   */\r\n  function setFactory(address factory) external;\r\n}\r\n"
      },
      "contracts/periphery/INonfungibleTokenPositionDescriptor.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './INonfungiblePositionManager.sol';\r\n\r\n/// @title Describes position NFT tokens via URI\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface INonfungibleTokenPositionDescriptor {\r\n    /// @notice Produces the URI describing a particular token ID for a position manager\r\n    /// @dev Note this URI may be a data: URI with the JSON contents directly inlined\r\n    /// @param positionManager The position manager for which to describe the token\r\n    /// @param tokenId The ID of the token for which to produce a description, which may not be valid\r\n    /// @return The URI of the ERC721-compliant metadata\r\n    function tokenURI(INonfungiblePositionManager positionManager, uint256 tokenId)\r\n        external\r\n        view\r\n        returns (string memory);\r\n}\r\n"
      },
      "contracts/periphery/IPeripheryPaymentsWithFee.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\n\r\nimport './IPeripheryPayments.sol';\r\n\r\n/// @title Periphery Payments\r\n/// @notice Functions to ease deposits and withdrawals of NativeToken\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface IPeripheryPaymentsWithFee is IPeripheryPayments {\r\n    /// @notice Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken, with a percentage between\r\n    /// 0 (exclusive), and 1 (inclusive) going to feeRecipient\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users.\r\n    function unwrapWNativeTokenWithFee(\r\n        uint256 amountMinimum,\r\n        address recipient,\r\n        uint256 feeBips,\r\n        address feeRecipient\r\n    ) external payable;\r\n\r\n    /// @notice Transfers the full amount of a token held by this contract to recipient, with a percentage between\r\n    /// 0 (exclusive) and 1 (inclusive) going to feeRecipient\r\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\r\n    function sweepTokenWithFee(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient,\r\n        uint256 feeBips,\r\n        address feeRecipient\r\n    ) external payable;\r\n}\r\n"
      },
      "contracts/periphery/IV3Migrator.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\nimport './IMulticall.sol';\r\nimport './ISelfPermit.sol';\r\nimport './IPoolInitializer.sol';\r\n\r\n/// @title Algebra Migrator\r\n/// @notice Enables migration of liqudity from Uniswap v2-compatible pairs into Algebra pools\r\n/// @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\r\n/// https://github.com/Uniswap/v3-periphery\r\ninterface IV3Migrator is IMulticall, ISelfPermit, IPoolInitializer {\r\n    struct MigrateParams {\r\n        address pair; // the Uniswap v2-compatible pair\r\n        uint256 liquidityToMigrate; // expected to be balanceOf(msg.sender)\r\n        uint8 percentageToMigrate; // represented as a numerator over 100\r\n        address token0;\r\n        address token1;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Min; // must be discounted by percentageToMigrate\r\n        uint256 amount1Min; // must be discounted by percentageToMigrate\r\n        address recipient;\r\n        uint256 deadline;\r\n        bool refundAsNative;\r\n    }\r\n\r\n    /// @notice Migrates liquidity to Algebra by burning v2 liquidity and minting a new position for Algebra\r\n    /// @dev Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of\r\n    /// the maximum amount of Algebra liquidity that the v2 liquidity can get. For the special case of migrating to an\r\n    /// out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range\r\n    /// @param params The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata\r\n    function migrate(MigrateParams calldata params) external;\r\n}\r\n"
      },
      "contracts/periphery/ISelfPermit.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\n\r\n/// @title Self Permit\r\n/// @notice Functionality to call permit on any EIP-2612-compliant token for use in the route\r\ninterface ISelfPermit {\r\n    /// @notice Permits this contract to spend a given token from `msg.sender`\r\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this).\r\n    /// @param token The address of the token spent\r\n    /// @param value The amount that can be spent of token\r\n    /// @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function selfPermit(\r\n        address token,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n\r\n    /// @notice Permits this contract to spend a given token from `msg.sender`\r\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this).\r\n    /// Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\r\n    /// @param token The address of the token spent\r\n    /// @param value The amount that can be spent of token\r\n    /// @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function selfPermitIfNecessary(\r\n        address token,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n\r\n    /// @notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\r\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this)\r\n    /// @param token The address of the token spent\r\n    /// @param nonce The current nonce of the owner\r\n    /// @param expiry The timestamp at which the permit is no longer valid\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function selfPermitAllowed(\r\n        address token,\r\n        uint256 nonce,\r\n        uint256 expiry,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n\r\n    /// @notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\r\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this)\r\n    /// Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\r\n    /// @param token The address of the token spent\r\n    /// @param nonce The current nonce of the owner\r\n    /// @param expiry The timestamp at which the permit is no longer valid\r\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\r\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\r\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\r\n    function selfPermitAllowedIfNecessary(\r\n        address token,\r\n        uint256 nonce,\r\n        uint256 expiry,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external payable;\r\n}\r\n"
      },
      "contracts/tokenomics/farmings/IAlgebraVirtualPoolBase.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '../../core/IAlgebraVirtualPool.sol';\r\n\r\n/// @title Base interface for virtual pools\r\ninterface IAlgebraVirtualPoolBase is IAlgebraVirtualPool {\r\n    // returns how much time the price was out of any farmd liquidity\r\n    function timeOutside() external view returns (uint32);\r\n\r\n    // returns data associated with a tick\r\n    function ticks(int24 tickId)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 liquidityTotal,\r\n            int128 liquidityDelta,\r\n            uint256 outerFeeGrowth0Token,\r\n            uint256 outerFeeGrowth1Token,\r\n            int56 outerTickCumulative,\r\n            uint160 outerSecondsPerLiquidity,\r\n            uint32 outerSecondsSpent,\r\n            bool initialized\r\n        );\r\n\r\n    // returns the current liquidity in virtual pool\r\n    function currentLiquidity() external view returns (uint128);\r\n\r\n    // returns the current tick in virtual pool\r\n    function globalTick() external view returns (int24);\r\n\r\n    // returns total seconds per farmd liquidity from the moment of initialization of the virtual pool\r\n    function globalSecondsPerLiquidityCumulative() external view returns (uint160);\r\n\r\n    // returns the timestamp after previous swap (like the last timepoint in a default pool)\r\n    function prevTimestamp() external view returns (uint32);\r\n\r\n    /// @notice This function is used to calculate the seconds per liquidity inside a certain position\r\n    /// @param bottomTick The bottom tick of a position\r\n    /// @param topTick The top tick of a position\r\n    /// @return innerSecondsSpentPerLiquidity The seconds per liquidity inside the position\r\n    function getInnerSecondsPerLiquidity(int24 bottomTick, int24 topTick)\r\n        external\r\n        view\r\n        returns (uint160 innerSecondsSpentPerLiquidity);\r\n\r\n    /**\r\n     * @dev This function is called when anyone farms their liquidity. The position in a virtual pool\r\n     * should be changed accordingly\r\n     * @param currentTimestamp The timestamp of current block\r\n     * @param bottomTick The bottom tick of a position\r\n     * @param topTick The top tick of a position\r\n     * @param liquidityDelta The amount of liquidity in a position\r\n     * @param currentTick The current tick in the main pool\r\n     */\r\n    function applyLiquidityDeltaToPosition(\r\n        uint32 currentTimestamp,\r\n        int24 bottomTick,\r\n        int24 topTick,\r\n        int128 liquidityDelta,\r\n        int24 currentTick\r\n    ) external;\r\n}\r\n"
      },
      "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitVirtualPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '../IAlgebraVirtualPoolBase.sol';\r\n\r\ninterface IAlgebraLimitVirtualPool is IAlgebraVirtualPoolBase {\r\n    // The timestamp when the active incentive is finished\r\n    function desiredEndTimestamp() external view returns (uint32);\r\n\r\n    // The first swap after this timestamp is going to initialize the virtual pool\r\n    function desiredStartTimestamp() external view returns (uint32);\r\n\r\n    // Is incentive already finished or not\r\n    function isFinished() external view returns (bool);\r\n\r\n    /**\r\n     * @notice Finishes incentive if it wasn't\r\n     * @dev This function is called by a AlgebraLimitFarming when someone calls #exitFarming() after the end timestamp\r\n     * @return wasFinished Was incentive finished before this call or not\r\n     * @return activeTime The summary amount of seconds inside active positions\r\n     */\r\n    function finish() external returns (bool wasFinished, uint32 activeTime);\r\n}\r\n"
      },
      "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalVirtualPool.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport '../IAlgebraVirtualPoolBase.sol';\r\n\r\ninterface IAlgebraEternalVirtualPool is IAlgebraVirtualPoolBase {\r\n    /// @notice Change reward rates\r\n    /// @param rate0 The new rate of main token distribution per sec\r\n    /// @param rate1 The new rate of bonus token distribution per sec\r\n    function setRates(uint128 rate0, uint128 rate1) external;\r\n\r\n    function addRewards(uint256 token0Amount, uint256 token1Amount) external;\r\n\r\n    function getInnerRewardsGrowth(int24 bottomTick, int24 topTick)\r\n        external\r\n        view\r\n        returns (uint256 rewardGrowthInside0, uint256 rewardGrowthInside1);\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 0
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
        "IERC721Enumerable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenOfOwnerByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "tokenByIndex(uint256)": "4f6ccce7",
              "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
              "totalSupply()": "18160ddd",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
        "IERC721Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "tokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "name()": "06fdde03",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "tokenURI(uint256)": "c87b56dd",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          }
        }
      },
      "contracts/core/IAlgebraPool.sol": {
        "IAlgebraPool": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee0New",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee1New",
                  "type": "uint8"
                }
              ],
              "name": "CommunityFee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "name": "Fee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid1",
                  "type": "uint256"
                }
              ],
              "name": "Flash",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "Incentive",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Initialize",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "liquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "LiquidityCooldown",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "activeIncentive",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dataStorageOperator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "flash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerCumulatives",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "innerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "innerSecondsSpent",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                }
              ],
              "name": "getTimepoints",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulatives",
                  "type": "uint160[]"
                },
                {
                  "internalType": "uint112[]",
                  "name": "volatilityCumulatives",
                  "type": "uint112[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "volumePerAvgLiquiditys",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalState",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidityCooldown",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "cooldownInSeconds",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxLiquidityPerTick",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidityActual",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastLiquidityAddTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "fees0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "fees1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "communityFee0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFee1",
                  "type": "uint8"
                }
              ],
              "name": "setCommunityFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "setIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "newLiquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "setLiquidityCooldown",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swapSupportingFeeOnInputTokens",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int16",
                  "name": "wordPosition",
                  "type": "int16"
                }
              ],
              "name": "tickTable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "timepoints",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth0Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth1Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "activeIncentive()": "facb0eb1",
              "burn(int24,int24,uint128)": "a34123a7",
              "collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
              "dataStorageOperator()": "29047dfa",
              "factory()": "c45a0155",
              "flash(address,uint256,uint256,bytes)": "490e6cbc",
              "getInnerCumulatives(int24,int24)": "920c34e5",
              "getTimepoints(uint32[])": "9d3a5241",
              "globalState()": "e76c01e4",
              "initialize(uint160)": "f637731d",
              "liquidity()": "1a686502",
              "liquidityCooldown()": "17e25b3c",
              "maxLiquidityPerTick()": "70cf754a",
              "mint(address,address,int24,int24,uint128,bytes)": "aafe29c0",
              "positions(bytes32)": "514ea4bf",
              "setCommunityFee(uint8,uint8)": "7c0112b7",
              "setIncentive(address)": "7c1fe0c8",
              "setLiquidityCooldown(uint32)": "289fe9b0",
              "swap(address,bool,int256,uint160,bytes)": "128acb08",
              "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)": "71334694",
              "tickSpacing()": "d0c93a7c",
              "tickTable(int16)": "c677e3e0",
              "ticks(int24)": "f30dba93",
              "timepoints(uint256)": "74eceae6",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalFeeGrowth0Token()": "6378ae44",
              "totalFeeGrowth1Token()": "ecdecf42"
            }
          }
        }
      },
      "contracts/core/IAlgebraPoolDeployer.sol": {
        "IAlgebraPoolDeployer": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                }
              ],
              "name": "Factory",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dataStorage",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                }
              ],
              "name": "deploy",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "parameters",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "dataStorage",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factory",
                  "type": "address"
                }
              ],
              "name": "setFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deploy(address,address,address,address)": "fd82b73a",
              "parameters()": "89035730",
              "setFactory(address)": "5bb47808"
            }
          }
        }
      },
      "contracts/core/IAlgebraVirtualPool.sol": {
        "IAlgebraVirtualPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "nextTick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                }
              ],
              "name": "cross",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                }
              ],
              "name": "increaseCumulative",
              "outputs": [
                {
                  "internalType": "enum IAlgebraVirtualPool.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "cross(int24,bool)": "01342b19",
              "increaseCumulative(uint32)": "7f376059"
            }
          }
        }
      },
      "contracts/core/IDataStorageOperator.sol": {
        "IDataStorageOperator": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "alpha1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "alpha2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta1",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta2",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "volumeBeta",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "volumeGamma",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "baseFee",
                      "type": "uint16"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IDataStorageOperator.FeeConfig",
                  "name": "feeConfig",
                  "type": "tuple"
                }
              ],
              "name": "FeeConfiguration",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "name": "calculateVolumePerLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "volumePerLiquidity",
                  "type": "uint128"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint16",
                      "name": "alpha1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "alpha2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta1",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "beta2",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma1",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "gamma2",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint32",
                      "name": "volumeBeta",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint16",
                      "name": "volumeGamma",
                      "type": "uint16"
                    },
                    {
                      "internalType": "uint16",
                      "name": "baseFee",
                      "type": "uint16"
                    }
                  ],
                  "internalType": "struct IDataStorageOperator.FeeConfig",
                  "name": "feeConfig",
                  "type": "tuple"
                }
              ],
              "name": "changeFeeConfiguration",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getAverages",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "TWVolatilityAverage",
                  "type": "uint112"
                },
                {
                  "internalType": "uint256",
                  "name": "TWVolumePerLiqAverage",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getFee",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "secondsAgo",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getSingleTimepoint",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint112",
                  "name": "volatilityCumulative",
                  "type": "uint112"
                },
                {
                  "internalType": "uint256",
                  "name": "volumePerAvgLiquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                }
              ],
              "name": "getTimepoints",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulatives",
                  "type": "uint160[]"
                },
                {
                  "internalType": "uint112[]",
                  "name": "volatilityCumulatives",
                  "type": "uint112[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "volumePerAvgLiquiditys",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "time",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "timepoints",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "window",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "windowLength",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "index",
                  "type": "uint16"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "volumePerLiquidity",
                  "type": "uint128"
                }
              ],
              "name": "write",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "indexUpdated",
                  "type": "uint16"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "calculateVolumePerLiquidity(uint128,int256,int256)": "36e52fee",
              "changeFeeConfiguration((uint16,uint16,uint32,uint32,uint16,uint16,uint32,uint16,uint16))": "1c7004cb",
              "getAverages(uint32,int24,uint16,uint128)": "bc2e0181",
              "getFee(uint32,int24,uint16,uint128)": "c53a182f",
              "getSingleTimepoint(uint32,uint32,int24,uint16,uint128)": "14c54079",
              "getTimepoints(uint32,uint32[],int24,uint16,uint128)": "fd31e988",
              "initialize(uint32,int24)": "475fb80c",
              "timepoints(uint256)": "74eceae6",
              "window()": "461645bf",
              "write(uint16,uint32,int24,uint128,uint128)": "1dd486f2"
            }
          }
        }
      },
      "contracts/core/IERC20Minimal.sol": {
        "IERC20Minimal": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolActions.sol": {
        "IAlgebraPoolActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Requested",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Requested",
                  "type": "uint128"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "flash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidityActual",
                  "type": "uint128"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "limitSqrtPrice",
                  "type": "uint160"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swapSupportingFeeOnInputTokens",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "burn(int24,int24,uint128)": "a34123a7",
              "collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
              "flash(address,uint256,uint256,bytes)": "490e6cbc",
              "initialize(uint160)": "f637731d",
              "mint(address,address,int24,int24,uint128,bytes)": "aafe29c0",
              "swap(address,bool,int256,uint160,bytes)": "128acb08",
              "swapSupportingFeeOnInputTokens(address,address,bool,int256,uint160,bytes)": "71334694"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolDerivedState.sol": {
        "IAlgebraPoolDerivedState": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerCumulatives",
              "outputs": [
                {
                  "internalType": "int56",
                  "name": "innerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "innerSecondsSpent",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32[]",
                  "name": "secondsAgos",
                  "type": "uint32[]"
                }
              ],
              "name": "getTimepoints",
              "outputs": [
                {
                  "internalType": "int56[]",
                  "name": "tickCumulatives",
                  "type": "int56[]"
                },
                {
                  "internalType": "uint160[]",
                  "name": "secondsPerLiquidityCumulatives",
                  "type": "uint160[]"
                },
                {
                  "internalType": "uint112[]",
                  "name": "volatilityCumulatives",
                  "type": "uint112[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "volumePerAvgLiquiditys",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getInnerCumulatives(int24,int24)": "920c34e5",
              "getTimepoints(uint32[])": "9d3a5241"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolEvents.sol": {
        "IAlgebraPoolEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount0",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount1",
                  "type": "uint128"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee0New",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "communityFee1New",
                  "type": "uint8"
                }
              ],
              "name": "CommunityFee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                }
              ],
              "name": "Fee",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "paid1",
                  "type": "uint256"
                }
              ],
              "name": "Flash",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "Incentive",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Initialize",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "liquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "LiquidityCooldown",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "indexed": true,
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount0",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "amount1",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "Swap",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolImmutables.sol": {
        "IAlgebraPoolImmutables": {
          "abi": [
            {
              "inputs": [],
              "name": "dataStorageOperator",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxLiquidityPerTick",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tickSpacing",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "dataStorageOperator()": "29047dfa",
              "factory()": "c45a0155",
              "maxLiquidityPerTick()": "70cf754a",
              "tickSpacing()": "d0c93a7c",
              "token0()": "0dfe1681",
              "token1()": "d21220a7"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolPermissionedActions.sol": {
        "IAlgebraPoolPermissionedActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "communityFee0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFee1",
                  "type": "uint8"
                }
              ],
              "name": "setCommunityFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                }
              ],
              "name": "setIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "newLiquidityCooldown",
                  "type": "uint32"
                }
              ],
              "name": "setLiquidityCooldown",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "setCommunityFee(uint8,uint8)": "7c0112b7",
              "setIncentive(address)": "7c1fe0c8",
              "setLiquidityCooldown(uint32)": "289fe9b0"
            }
          }
        }
      },
      "contracts/core/pool/IAlgebraPoolState.sol": {
        "IAlgebraPoolState": {
          "abi": [
            {
              "inputs": [],
              "name": "activeIncentive",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalState",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "price",
                  "type": "uint160"
                },
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                },
                {
                  "internalType": "uint16",
                  "name": "fee",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "timepointIndex",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken0",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "communityFeeToken1",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "unlocked",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "liquidityCooldown",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "cooldownInSeconds",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastLiquidityAddTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "innerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "fees0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "fees1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int16",
                  "name": "wordPosition",
                  "type": "int16"
                }
              ],
              "name": "tickTable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tick",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "timepoints",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int56",
                  "name": "tickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "secondsPerLiquidityCumulative",
                  "type": "uint160"
                },
                {
                  "internalType": "uint88",
                  "name": "volatilityCumulative",
                  "type": "uint88"
                },
                {
                  "internalType": "int24",
                  "name": "averageTick",
                  "type": "int24"
                },
                {
                  "internalType": "uint144",
                  "name": "volumePerLiquidityCumulative",
                  "type": "uint144"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth0Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFeeGrowth1Token",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "activeIncentive()": "facb0eb1",
              "globalState()": "e76c01e4",
              "liquidity()": "1a686502",
              "liquidityCooldown()": "17e25b3c",
              "positions(bytes32)": "514ea4bf",
              "tickTable(int16)": "c677e3e0",
              "ticks(int24)": "f30dba93",
              "timepoints(uint256)": "74eceae6",
              "totalFeeGrowth0Token()": "6378ae44",
              "totalFeeGrowth1Token()": "ecdecf42"
            }
          }
        }
      },
      "contracts/periphery/IERC721Permit.sol": {
        "IERC721Permit": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "contracts/periphery/IMulticall.sol": {
        "IMulticall": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "multicall(bytes[])": "ac9650d8"
            }
          }
        }
      },
      "contracts/periphery/INonfungiblePositionManager.sol": {
        "INonfungiblePositionManager": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Collect",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "DecreaseLiquidity",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "actualLiquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "IncreaseLiquidity",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WNativeToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount0Max",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount1Max",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.CollectParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "createAndInitializePoolIfNecessary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint128",
                      "name": "liquidity",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "decreaseLiquidity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "increaseLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Desired",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.MintParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "poolDeployer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "positions",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside0LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeGrowthInside1LastX128",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "tokensOwed1",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "refundNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "sweepToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "tokenOfOwnerByIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "tokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "WNativeToken()": "8af3ac85",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "collect((uint256,address,uint128,uint128))": "fc6f7865",
              "createAndInitializePoolIfNecessary(address,address,uint160)": "51246d6e",
              "decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
              "factory()": "c45a0155",
              "getApproved(uint256)": "081812fc",
              "increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
              "isApprovedForAll(address,address)": "e985e9c5",
              "mint((address,address,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "9cc1a283",
              "name()": "06fdde03",
              "ownerOf(uint256)": "6352211e",
              "permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
              "poolDeployer()": "3119049a",
              "positions(uint256)": "99fbab88",
              "refundNativeToken()": "41865270",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "sweepToken(address,uint256,address)": "df2ab5bb",
              "symbol()": "95d89b41",
              "tokenByIndex(uint256)": "4f6ccce7",
              "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
              "tokenURI(uint256)": "c87b56dd",
              "totalSupply()": "18160ddd",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unwrapWNativeToken(uint256,address)": "69bc35b2"
            }
          }
        }
      },
      "contracts/periphery/INonfungibleTokenPositionDescriptor.sol": {
        "INonfungibleTokenPositionDescriptor": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "tokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "tokenURI(address,uint256)": "e9dc6375"
            }
          }
        }
      },
      "contracts/periphery/IPeripheryImmutableState.sol": {
        "IPeripheryImmutableState": {
          "abi": [
            {
              "inputs": [],
              "name": "WNativeToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "poolDeployer",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "WNativeToken()": "8af3ac85",
              "factory()": "c45a0155",
              "poolDeployer()": "3119049a"
            }
          }
        }
      },
      "contracts/periphery/IPeripheryPayments.sol": {
        "IPeripheryPayments": {
          "abi": [
            {
              "inputs": [],
              "name": "refundNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "sweepToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "refundNativeToken()": "41865270",
              "sweepToken(address,uint256,address)": "df2ab5bb",
              "unwrapWNativeToken(uint256,address)": "69bc35b2"
            }
          }
        }
      },
      "contracts/periphery/IPeripheryPaymentsWithFee.sol": {
        "IPeripheryPaymentsWithFee": {
          "abi": [
            {
              "inputs": [],
              "name": "refundNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "sweepToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "feeBips",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ],
              "name": "sweepTokenWithFee",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "feeBips",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWNativeTokenWithFee",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "refundNativeToken()": "41865270",
              "sweepToken(address,uint256,address)": "df2ab5bb",
              "sweepTokenWithFee(address,uint256,address,uint256,address)": "e0e189a0",
              "unwrapWNativeToken(uint256,address)": "69bc35b2",
              "unwrapWNativeTokenWithFee(uint256,address,uint256,address)": "c60696ec"
            }
          }
        }
      },
      "contracts/periphery/IPoolInitializer.sol": {
        "IPoolInitializer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "createAndInitializePoolIfNecessary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createAndInitializePoolIfNecessary(address,address,uint160)": "51246d6e"
            }
          }
        }
      },
      "contracts/periphery/ISelfPermit.sol": {
        "ISelfPermit": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitAllowed",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitAllowedIfNecessary",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitIfNecessary",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
              "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
              "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
              "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a"
            }
          }
        }
      },
      "contracts/periphery/IV3Migrator.sol": {
        "IV3Migrator": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceX96",
                  "type": "uint160"
                }
              ],
              "name": "createAndInitializePoolIfNecessary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "pair",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityToMigrate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "percentageToMigrate",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount0Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount1Min",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "refundAsNative",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IV3Migrator.MigrateParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "migrate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitAllowed",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitAllowedIfNecessary",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "selfPermitIfNecessary",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createAndInitializePoolIfNecessary(address,address,uint160)": "51246d6e",
              "migrate((address,uint256,uint8,address,address,int24,int24,uint256,uint256,address,uint256,bool))": "8be74fb6",
              "multicall(bytes[])": "ac9650d8",
              "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
              "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
              "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
              "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a"
            }
          }
        }
      },
      "contracts/tokenomics/IAlgebraFarming.sol": {
        "IAlgebraFarming": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "name": "FarmEnded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                }
              ],
              "name": "FarmEntered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "farmingCenter",
                  "type": "address"
                }
              ],
              "name": "FarmingCenter",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveAttached",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveDetached",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "incentiveMaker",
                  "type": "address"
                }
              ],
              "name": "IncentiveMaker",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "RewardClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusRewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "RewardsAdded",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "attachIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimRewardFrom",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deployer",
              "outputs": [
                {
                  "internalType": "contract IAlgebraPoolDeployer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "detachIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                }
              ],
              "name": "enterFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "exitFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getRewardInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "incentives",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalReward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "minimalPositionWidth",
                  "type": "uint24"
                },
                {
                  "internalType": "uint224",
                  "name": "totalLiquidity",
                  "type": "uint224"
                },
                {
                  "internalType": "address",
                  "name": "multiplierToken",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonfungiblePositionManager",
              "outputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                }
              ],
              "name": "rewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rewardsOwed",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_farmingCenter",
                  "type": "address"
                }
              ],
              "name": "setFarmingCenterAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_incentiveMaker",
                  "type": "address"
                }
              ],
              "name": "setIncentiveMaker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "attachIncentive((address,address,address,uint256,uint256))": "6394adbb",
              "claimReward(address,address,uint256)": "2f2d783d",
              "claimRewardFrom(address,address,address,uint256)": "0a530754",
              "deployer()": "d5f39488",
              "detachIncentive((address,address,address,uint256,uint256))": "3ee0dd02",
              "enterFarming((address,address,address,uint256,uint256),uint256,uint256)": "f43930a3",
              "exitFarming((address,address,address,uint256,uint256),uint256,address)": "0705506b",
              "getRewardInfo((address,address,address,uint256,uint256),uint256)": "704972f4",
              "incentives(bytes32)": "60777795",
              "nonfungiblePositionManager()": "b44a2722",
              "rewards(address,address)": "e70b9e27",
              "setFarmingCenterAddress(address)": "df42efda",
              "setIncentiveMaker(address)": "779fa0c4"
            }
          }
        }
      },
      "contracts/tokenomics/IFarmingCenter.sol": {
        "IFarmingCenter": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "DepositTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequestedIncentive",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequestedEternal",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount0Max",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "amount1Max",
                      "type": "uint128"
                    }
                  ],
                  "internalType": "struct INonfungiblePositionManager.CollectParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "collect",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "collectRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "name": "connectVirtualPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "nextTick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                }
              ],
              "name": "cross",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "deposits",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "L2TokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "numberOfFarms",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "inLimitFarming",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isLimit",
                  "type": "bool"
                }
              ],
              "name": "enterFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "eternalFarming",
              "outputs": [
                {
                  "internalType": "contract IAlgebraEternalFarming",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isLimit",
                  "type": "bool"
                }
              ],
              "name": "exitFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "farmingCenterVault",
              "outputs": [
                {
                  "internalType": "contract IFarmingCenterVault",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                }
              ],
              "name": "increaseCumulative",
              "outputs": [
                {
                  "internalType": "enum IAlgebraVirtualPool.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "l2Nfts",
              "outputs": [
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "limitFarming",
              "outputs": [
                {
                  "internalType": "contract IAlgebraLimitFarming",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes[]",
                  "name": "data",
                  "type": "bytes[]"
                }
              ],
              "name": "multicall",
              "outputs": [
                {
                  "internalType": "bytes[]",
                  "name": "results",
                  "type": "bytes[]"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonfungiblePositionManager",
              "outputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "refundNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "sweepToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "unwrapWNativeToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "virtualPoolAddresses",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "withdrawToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "claimReward(address,address,uint256,uint256)": "fd188ca4",
              "collect((uint256,address,uint128,uint128))": "fc6f7865",
              "collectRewards((address,address,address,uint256,uint256),uint256)": "3e785878",
              "connectVirtualPool(address,address)": "d8a900b1",
              "cross(int24,bool)": "01342b19",
              "deposits(uint256)": "b02c43d0",
              "enterFarming((address,address,address,uint256,uint256),uint256,uint256,bool)": "22872ce2",
              "eternalFarming()": "de2356d1",
              "exitFarming((address,address,address,uint256,uint256),uint256,bool)": "34267cbc",
              "farmingCenterVault()": "9205ac2e",
              "getApproved(uint256)": "081812fc",
              "increaseCumulative(uint32)": "7f376059",
              "isApprovedForAll(address,address)": "e985e9c5",
              "l2Nfts(uint256)": "03a05df9",
              "limitFarming()": "a5f6072f",
              "multicall(bytes[])": "ac9650d8",
              "nonfungiblePositionManager()": "b44a2722",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "ownerOf(uint256)": "6352211e",
              "permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
              "refundNativeToken()": "41865270",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "sweepToken(address,uint256,address)": "df2ab5bb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unwrapWNativeToken(uint256,address)": "69bc35b2",
              "virtualPoolAddresses(address)": "32dc5a25",
              "withdrawToken(uint256,address,bytes)": "3c423f0b"
            }
          }
        }
      },
      "contracts/tokenomics/IFarmingCenterVault.sol": {
        "IFarmingCenterVault": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "balances",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "claimTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmount",
                  "type": "uint256"
                }
              ],
              "name": "lockTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "farming",
                  "type": "address"
                }
              ],
              "name": "setFarmingCenter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balances(uint256,bytes32)": "b84ffe39",
              "claimTokens(address,address,uint256,bytes32)": "92ae44e1",
              "lockTokens(uint256,bytes32,uint256)": "2113e817",
              "setFarmingCenter(address)": "4d10862d"
            }
          }
        }
      },
      "contracts/tokenomics/IIncentiveKey.sol": {
        "IIncentiveKey": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/tokenomics/farmings/IAlgebraVirtualPoolBase.sol": {
        "IAlgebraVirtualPoolBase": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "int24",
                  "name": "currentTick",
                  "type": "int24"
                }
              ],
              "name": "applyLiquidityDeltaToPosition",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "nextTick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                }
              ],
              "name": "cross",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerSecondsPerLiquidity",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalSecondsPerLiquidityCumulative",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalTick",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                }
              ],
              "name": "increaseCumulative",
              "outputs": [
                {
                  "internalType": "enum IAlgebraVirtualPool.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "prevTimestamp",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickId",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timeOutside",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "applyLiquidityDeltaToPosition(uint32,int24,int24,int128,int24)": "0f1019bc",
              "cross(int24,bool)": "01342b19",
              "currentLiquidity()": "46caf2ae",
              "getInnerSecondsPerLiquidity(int24,int24)": "1fcd27fd",
              "globalSecondsPerLiquidityCumulative()": "ae855939",
              "globalTick()": "8e76c332",
              "increaseCumulative(uint32)": "7f376059",
              "prevTimestamp()": "d576dfc0",
              "ticks(int24)": "f30dba93",
              "timeOutside()": "8eebc5d6"
            }
          }
        }
      },
      "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalFarming.sol": {
        "IAlgebraEternalFarming": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "multiplierToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint24",
                  "name": "minimalAllowedPositionWidth",
                  "type": "uint24"
                }
              ],
              "name": "EternalFarmingCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "name": "FarmEnded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                }
              ],
              "name": "FarmEntered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "farmingCenter",
                  "type": "address"
                }
              ],
              "name": "FarmingCenter",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveAttached",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveDetached",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "incentiveMaker",
                  "type": "address"
                }
              ],
              "name": "IncentiveMaker",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "RewardClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusRewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "RewardsAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusRewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "RewardsCollected",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "rewardRate",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "bonusRewardRate",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "RewardsRatesChanged",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusRewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "addRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "attachIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimRewardFrom",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "collectRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "reward",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bonusReward",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint128",
                      "name": "rewardRate",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "bonusRewardRate",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint24",
                      "name": "minimalPositionWidth",
                      "type": "uint24"
                    },
                    {
                      "internalType": "address",
                      "name": "multiplierToken",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAlgebraEternalFarming.IncentiveParams",
                  "name": "params",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                }
              ],
              "name": "createEternalFarming",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deployer",
              "outputs": [
                {
                  "internalType": "contract IAlgebraPoolDeployer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "detachIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                }
              ],
              "name": "enterFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "exitFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "farms",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint256",
                  "name": "innerRewardGrowth0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "innerRewardGrowth1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getRewardInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "incentives",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalReward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "minimalPositionWidth",
                  "type": "uint24"
                },
                {
                  "internalType": "uint224",
                  "name": "totalLiquidity",
                  "type": "uint224"
                },
                {
                  "internalType": "address",
                  "name": "multiplierToken",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonfungiblePositionManager",
              "outputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                }
              ],
              "name": "rewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rewardsOwed",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_farmingCenter",
                  "type": "address"
                }
              ],
              "name": "setFarmingCenterAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_incentiveMaker",
                  "type": "address"
                }
              ],
              "name": "setIncentiveMaker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint128",
                  "name": "rewardRate",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "bonusRewardRate",
                  "type": "uint128"
                }
              ],
              "name": "setRates",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addRewards((address,address,address,uint256,uint256),uint256,uint256)": "826cc0a1",
              "attachIncentive((address,address,address,uint256,uint256))": "6394adbb",
              "claimReward(address,address,uint256)": "2f2d783d",
              "claimRewardFrom(address,address,address,uint256)": "0a530754",
              "collectRewards((address,address,address,uint256,uint256),uint256,address)": "fe4282fb",
              "createEternalFarming((address,address,address,uint256,uint256),(uint256,uint256,uint128,uint128,uint24,address),(uint256,uint256,uint256,uint32,uint32,uint32))": "b58a7239",
              "deployer()": "d5f39488",
              "detachIncentive((address,address,address,uint256,uint256))": "3ee0dd02",
              "enterFarming((address,address,address,uint256,uint256),uint256,uint256)": "f43930a3",
              "exitFarming((address,address,address,uint256,uint256),uint256,address)": "0705506b",
              "farms(uint256,bytes32)": "27e6a99a",
              "getRewardInfo((address,address,address,uint256,uint256),uint256)": "704972f4",
              "incentives(bytes32)": "60777795",
              "nonfungiblePositionManager()": "b44a2722",
              "rewards(address,address)": "e70b9e27",
              "setFarmingCenterAddress(address)": "df42efda",
              "setIncentiveMaker(address)": "779fa0c4",
              "setRates((address,address,address,uint256,uint256),uint128,uint128)": "92aa2d89"
            }
          }
        }
      },
      "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalVirtualPool.sol": {
        "IAlgebraEternalVirtualPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "token0Amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "token1Amount",
                  "type": "uint256"
                }
              ],
              "name": "addRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "int24",
                  "name": "currentTick",
                  "type": "int24"
                }
              ],
              "name": "applyLiquidityDeltaToPosition",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "nextTick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                }
              ],
              "name": "cross",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerRewardsGrowth",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rewardGrowthInside0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardGrowthInside1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerSecondsPerLiquidity",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalSecondsPerLiquidityCumulative",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalTick",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                }
              ],
              "name": "increaseCumulative",
              "outputs": [
                {
                  "internalType": "enum IAlgebraVirtualPool.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "prevTimestamp",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "rate0",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate1",
                  "type": "uint128"
                }
              ],
              "name": "setRates",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickId",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timeOutside",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addRewards(uint256,uint256)": "fc41aa09",
              "applyLiquidityDeltaToPosition(uint32,int24,int24,int128,int24)": "0f1019bc",
              "cross(int24,bool)": "01342b19",
              "currentLiquidity()": "46caf2ae",
              "getInnerRewardsGrowth(int24,int24)": "0bd6f200",
              "getInnerSecondsPerLiquidity(int24,int24)": "1fcd27fd",
              "globalSecondsPerLiquidityCumulative()": "ae855939",
              "globalTick()": "8e76c332",
              "increaseCumulative(uint32)": "7f376059",
              "prevTimestamp()": "d576dfc0",
              "setRates(uint128,uint128)": "7f463bb8",
              "ticks(int24)": "f30dba93",
              "timeOutside()": "8eebc5d6"
            }
          }
        }
      },
      "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitFarming.sol": {
        "IAlgebraLimitFarming": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "name": "FarmEnded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                }
              ],
              "name": "FarmEntered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "farmingCenter",
                  "type": "address"
                }
              ],
              "name": "FarmingCenter",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveAttached",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "IncentiveDetached",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "incentiveMaker",
                  "type": "address"
                }
              ],
              "name": "IncentiveMaker",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "multiplierToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint24",
                  "name": "minimalAllowedPositionWidth",
                  "type": "uint24"
                },
                {
                  "indexed": false,
                  "internalType": "uint32",
                  "name": "enterStartTime",
                  "type": "uint32"
                }
              ],
              "name": "LimitFarmingCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "RewardAmountsDecreased",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "RewardClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bonusRewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "RewardsAdded",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "name": "addRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "attachIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountRequested",
                  "type": "uint256"
                }
              ],
              "name": "claimRewardFrom",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "reward",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bonusReward",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint24",
                      "name": "minimalPositionWidth",
                      "type": "uint24"
                    },
                    {
                      "internalType": "address",
                      "name": "multiplierToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint32",
                      "name": "enterStartTime",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IAlgebraLimitFarming.IncentiveParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "createLimitFarming",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "virtualPool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusRewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "decreaseRewardsAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deployer",
              "outputs": [
                {
                  "internalType": "contract IAlgebraPoolDeployer",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                }
              ],
              "name": "detachIncentive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokensLocked",
                  "type": "uint256"
                }
              ],
              "name": "enterFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "exitFarming",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "farms",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getRewardInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "incentiveId",
                  "type": "bytes32"
                }
              ],
              "name": "incentives",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalReward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bonusReward",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "virtualPoolAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "minimalPositionWidth",
                  "type": "uint24"
                },
                {
                  "internalType": "uint224",
                  "name": "totalLiquidity",
                  "type": "uint224"
                },
                {
                  "internalType": "address",
                  "name": "multiplierToken",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier2",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAmountForTier3",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier1Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier2Multiplier",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "tier3Multiplier",
                      "type": "uint32"
                    }
                  ],
                  "internalType": "struct IAlgebraFarming.Tiers",
                  "name": "tiers",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxIncentiveDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxIncentiveStartLeadTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nonfungiblePositionManager",
              "outputs": [
                {
                  "internalType": "contract INonfungiblePositionManager",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                }
              ],
              "name": "rewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "rewardsOwed",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_farmingCenter",
                  "type": "address"
                }
              ],
              "name": "setFarmingCenterAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_incentiveMaker",
                  "type": "address"
                }
              ],
              "name": "setIncentiveMaker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addRewards((address,address,address,uint256,uint256),uint256,uint256)": "826cc0a1",
              "attachIncentive((address,address,address,uint256,uint256))": "6394adbb",
              "claimReward(address,address,uint256)": "2f2d783d",
              "claimRewardFrom(address,address,address,uint256)": "0a530754",
              "createLimitFarming((address,address,address,uint256,uint256),(uint256,uint256,uint256,uint32,uint32,uint32),(uint256,uint256,uint24,address,uint32))": "91045831",
              "decreaseRewardsAmount((address,address,address,uint256,uint256),uint256,uint256)": "bf26a1d1",
              "deployer()": "d5f39488",
              "detachIncentive((address,address,address,uint256,uint256))": "3ee0dd02",
              "enterFarming((address,address,address,uint256,uint256),uint256,uint256)": "f43930a3",
              "exitFarming((address,address,address,uint256,uint256),uint256,address)": "0705506b",
              "farms(uint256,bytes32)": "27e6a99a",
              "getRewardInfo((address,address,address,uint256,uint256),uint256)": "704972f4",
              "incentives(bytes32)": "60777795",
              "maxIncentiveDuration()": "3dc0714b",
              "maxIncentiveStartLeadTime()": "01b75440",
              "nonfungiblePositionManager()": "b44a2722",
              "rewards(address,address)": "e70b9e27",
              "setFarmingCenterAddress(address)": "df42efda",
              "setIncentiveMaker(address)": "779fa0c4"
            }
          }
        }
      },
      "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitVirtualPool.sol": {
        "IAlgebraLimitVirtualPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "int24",
                  "name": "currentTick",
                  "type": "int24"
                }
              ],
              "name": "applyLiquidityDeltaToPosition",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "nextTick",
                  "type": "int24"
                },
                {
                  "internalType": "bool",
                  "name": "zeroToOne",
                  "type": "bool"
                }
              ],
              "name": "cross",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentLiquidity",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "desiredEndTimestamp",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "desiredStartTimestamp",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "finish",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "wasFinished",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "activeTime",
                  "type": "uint32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "bottomTick",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "topTick",
                  "type": "int24"
                }
              ],
              "name": "getInnerSecondsPerLiquidity",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "innerSecondsSpentPerLiquidity",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalSecondsPerLiquidityCumulative",
              "outputs": [
                {
                  "internalType": "uint160",
                  "name": "",
                  "type": "uint160"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "globalTick",
              "outputs": [
                {
                  "internalType": "int24",
                  "name": "",
                  "type": "int24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint32",
                  "name": "currentTimestamp",
                  "type": "uint32"
                }
              ],
              "name": "increaseCumulative",
              "outputs": [
                {
                  "internalType": "enum IAlgebraVirtualPool.Status",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "prevTimestamp",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "int24",
                  "name": "tickId",
                  "type": "int24"
                }
              ],
              "name": "ticks",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "liquidityTotal",
                  "type": "uint128"
                },
                {
                  "internalType": "int128",
                  "name": "liquidityDelta",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth0Token",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outerFeeGrowth1Token",
                  "type": "uint256"
                },
                {
                  "internalType": "int56",
                  "name": "outerTickCumulative",
                  "type": "int56"
                },
                {
                  "internalType": "uint160",
                  "name": "outerSecondsPerLiquidity",
                  "type": "uint160"
                },
                {
                  "internalType": "uint32",
                  "name": "outerSecondsSpent",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "initialized",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timeOutside",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "applyLiquidityDeltaToPosition(uint32,int24,int24,int128,int24)": "0f1019bc",
              "cross(int24,bool)": "01342b19",
              "currentLiquidity()": "46caf2ae",
              "desiredEndTimestamp()": "09670d0e",
              "desiredStartTimestamp()": "e96b8947",
              "finish()": "d56b2889",
              "getInnerSecondsPerLiquidity(int24,int24)": "1fcd27fd",
              "globalSecondsPerLiquidityCumulative()": "ae855939",
              "globalTick()": "8e76c332",
              "increaseCumulative(uint32)": "7f376059",
              "isFinished()": "7b352962",
              "prevTimestamp()": "d576dfc0",
              "ticks(int24)": "f30dba93",
              "timeOutside()": "8eebc5d6"
            }
          }
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ]
          },
          "id": 12,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:279:0",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 11,
              "linearizedBaseContracts": [
                11
              ],
              "name": "IERC165",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "362:340:0",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 10,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "734:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "734:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:20:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "777:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:6:0"
                  },
                  "scope": 11,
                  "src": "707:76:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 12,
              "src": "338:447:0"
            }
          ],
          "src": "33:753:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              127
            ]
          },
          "id": 128,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 13,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/introspection/IERC165.sol",
              "file": "../../introspection/IERC165.sol",
              "id": 14,
              "nodeType": "ImportDirective",
              "scope": 128,
              "sourceUnit": 12,
              "src": "58:41:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 16,
                    "name": "IERC165",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "190:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC165_$11",
                      "typeString": "contract IERC165"
                    }
                  },
                  "id": 17,
                  "nodeType": "InheritanceSpecifier",
                  "src": "190:7:1"
                }
              ],
              "contractDependencies": [
                11
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 15,
                "nodeType": "StructuredDocumentation",
                "src": "101:67:1",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 127,
              "linearizedBaseContracts": [
                127,
                11
              ],
              "name": "IERC721",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 18,
                    "nodeType": "StructuredDocumentation",
                    "src": "204:88:1",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "id": 26,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "312:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "334:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 24,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "354:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "354:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:67:1"
                  },
                  "src": "297:82:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "385:94:1",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "id": 35,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "499:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "499:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "522:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 33,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "548:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "548:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "498:74:1"
                  },
                  "src": "484:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "579:117:1",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "id": 44,
                  "name": "ApprovalForAll",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "722:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "745:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 42,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "771:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "721:64:1"
                  },
                  "src": "701:85:1"
                },
                {
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "792:76:1",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 52,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "892:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "892:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "891:15:1"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "930:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:1"
                  },
                  "scope": 127,
                  "src": "873:74:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 53,
                    "nodeType": "StructuredDocumentation",
                    "src": "953:131:1",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 60,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1106:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1106:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1105:17:1"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 60,
                        "src": "1146:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1146:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1145:15:1"
                  },
                  "scope": 127,
                  "src": "1089:72:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1167:690:1",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 70,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1888:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1888:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1902:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 70,
                        "src": "1914:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1914:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1887:43:1"
                  },
                  "returnParameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1939:0:1"
                  },
                  "scope": 127,
                  "src": "1862:78:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 71,
                    "nodeType": "StructuredDocumentation",
                    "src": "1946:504:1",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 80,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2477:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2477:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2491:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2491:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2503:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2503:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2476:43:1"
                  },
                  "returnParameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2528:0:1"
                  },
                  "scope": 127,
                  "src": "2455:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2535:452:1",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 88,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "3009:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3009:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "3021:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3021:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3008:29:1"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3046:0:1"
                  },
                  "scope": 127,
                  "src": "2992:55:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 89,
                    "nodeType": "StructuredDocumentation",
                    "src": "3053:139:1",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 96,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "3218:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3217:17:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "3258:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3258:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3257:18:1"
                  },
                  "scope": 127,
                  "src": "3197:79:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "3282:309:1",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "3623:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3623:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "3641:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3641:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3622:34:1"
                  },
                  "returnParameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3665:0:1"
                  },
                  "scope": 127,
                  "src": "3596:70:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "3672:138:1",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 114,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3841:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3841:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3856:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3856:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3840:33:1"
                  },
                  "returnParameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3897:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3896:6:1"
                  },
                  "scope": 127,
                  "src": "3815:88:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3909:568:1",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 126,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "4508:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4508:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "4522:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "4534:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4534:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "4551:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4551:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4507:64:1"
                  },
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4580:0:1"
                  },
                  "scope": 127,
                  "src": "4482:99:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 128,
              "src": "169:4414:1"
            }
          ],
          "src": "33:4551:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ]
          },
          "id": 159,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 129,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "./IERC721.sol",
              "id": 130,
              "nodeType": "ImportDirective",
              "scope": 159,
              "sourceUnit": 128,
              "src": "58:23:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 132,
                    "name": "IERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 127,
                    "src": "251:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$127",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 133,
                  "nodeType": "InheritanceSpecifier",
                  "src": "251:7:2"
                }
              ],
              "contractDependencies": [
                11,
                127
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 131,
                "nodeType": "StructuredDocumentation",
                "src": "83:136:2",
                "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
              },
              "fullyImplemented": false,
              "id": 158,
              "linearizedBaseContracts": [
                158,
                127,
                11
              ],
              "name": "IERC721Enumerable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 134,
                    "nodeType": "StructuredDocumentation",
                    "src": "266:82:2",
                    "text": " @dev Returns the total amount of tokens stored by the contract."
                  },
                  "functionSelector": "18160ddd",
                  "id": 139,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "373:2:2"
                  },
                  "returnParameters": {
                    "id": 138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "399:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "399:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "398:9:2"
                  },
                  "scope": 158,
                  "src": "353:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 140,
                    "nodeType": "StructuredDocumentation",
                    "src": "414:171:2",
                    "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
                  },
                  "functionSelector": "2f745c59",
                  "id": 149,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenOfOwnerByIndex",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "619:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "634:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "618:30:2"
                  },
                  "returnParameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "672:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "672:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "671:17:2"
                  },
                  "scope": 158,
                  "src": "590:99:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 150,
                    "nodeType": "StructuredDocumentation",
                    "src": "695:164:2",
                    "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
                  },
                  "functionSelector": "4f6ccce7",
                  "id": 157,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenByIndex",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "886:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "886:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "885:15:2"
                  },
                  "returnParameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "924:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "923:9:2"
                  },
                  "scope": 158,
                  "src": "864:69:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 159,
              "src": "220:715:2"
            }
          ],
          "src": "33:903:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              127
            ],
            "IERC721Metadata": [
              185
            ]
          },
          "id": 186,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 160,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "./IERC721.sol",
              "id": 161,
              "nodeType": "ImportDirective",
              "scope": 186,
              "sourceUnit": 128,
              "src": "58:23:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 163,
                    "name": "IERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 127,
                    "src": "246:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$127",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 164,
                  "nodeType": "InheritanceSpecifier",
                  "src": "246:7:3"
                }
              ],
              "contractDependencies": [
                11,
                127
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 162,
                "nodeType": "StructuredDocumentation",
                "src": "83:133:3",
                "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
              },
              "fullyImplemented": false,
              "id": 185,
              "linearizedBaseContracts": [
                185,
                127,
                11
              ],
              "name": "IERC721Metadata",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "261:58:3",
                    "text": " @dev Returns the token collection name."
                  },
                  "functionSelector": "06fdde03",
                  "id": 170,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "337:2:3"
                  },
                  "returnParameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "363:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "363:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "362:15:3"
                  },
                  "scope": 185,
                  "src": "324:54:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 171,
                    "nodeType": "StructuredDocumentation",
                    "src": "384:60:3",
                    "text": " @dev Returns the token collection symbol."
                  },
                  "functionSelector": "95d89b41",
                  "id": 176,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "464:2:3"
                  },
                  "returnParameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "490:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "489:15:3"
                  },
                  "scope": 185,
                  "src": "449:56:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "511:90:3",
                    "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
                  },
                  "functionSelector": "c87b56dd",
                  "id": 184,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenURI",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "624:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "623:17:3"
                  },
                  "returnParameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "664:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:15:3"
                  },
                  "scope": 185,
                  "src": "606:73:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 186,
              "src": "217:464:3"
            }
          ],
          "src": "33:649:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
          "exportedSymbols": {
            "IERC721Receiver": [
              203
            ]
          },
          "id": 204,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 187,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 188,
                "nodeType": "StructuredDocumentation",
                "src": "58:152:4",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 203,
              "linearizedBaseContracts": [
                203
              ],
              "name": "IERC721Receiver",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "243:485:4",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "759:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "777:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "791:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "808:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:70:4"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "847:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "846:8:4"
                  },
                  "scope": 203,
                  "src": "733:122:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 204,
              "src": "211:646:4"
            }
          ],
          "src": "33:825:4"
        },
        "id": 4
      },
      "contracts/core/IAlgebraPool.sol": {
        "ast": {
          "absolutePath": "contracts/core/IAlgebraPool.sol",
          "exportedSymbols": {
            "IAlgebraPool": [
              225
            ],
            "IAlgebraPoolActions": [
              649
            ],
            "IAlgebraPoolDerivedState": [
              686
            ],
            "IAlgebraPoolEvents": [
              798
            ],
            "IAlgebraPoolImmutables": [
              839
            ],
            "IAlgebraPoolPermissionedActions": [
              863
            ],
            "IAlgebraPoolState": [
              983
            ],
            "IDataStorageOperator": [
              463
            ]
          },
          "id": 226,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 205,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:5"
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolImmutables.sol",
              "file": "./pool/IAlgebraPoolImmutables.sol",
              "id": 206,
              "nodeType": "ImportDirective",
              "scope": 226,
              "sourceUnit": 840,
              "src": "74:43:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolState.sol",
              "file": "./pool/IAlgebraPoolState.sol",
              "id": 207,
              "nodeType": "ImportDirective",
              "scope": 226,
              "sourceUnit": 984,
              "src": "119:38:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolDerivedState.sol",
              "file": "./pool/IAlgebraPoolDerivedState.sol",
              "id": 208,
              "nodeType": "ImportDirective",
              "scope": 226,
              "sourceUnit": 687,
              "src": "159:45:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolActions.sol",
              "file": "./pool/IAlgebraPoolActions.sol",
              "id": 209,
              "nodeType": "ImportDirective",
              "scope": 226,
              "sourceUnit": 650,
              "src": "206:40:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolPermissionedActions.sol",
              "file": "./pool/IAlgebraPoolPermissionedActions.sol",
              "id": 210,
              "nodeType": "ImportDirective",
              "scope": 226,
              "sourceUnit": 864,
              "src": "248:52:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/pool/IAlgebraPoolEvents.sol",
              "file": "./pool/IAlgebraPoolEvents.sol",
              "id": 211,
              "nodeType": "ImportDirective",
              "scope": 226,
              "sourceUnit": 799,
              "src": "302:39:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 213,
                    "name": "IAlgebraPoolImmutables",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 839,
                    "src": "624:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolImmutables_$839",
                      "typeString": "contract IAlgebraPoolImmutables"
                    }
                  },
                  "id": 214,
                  "nodeType": "InheritanceSpecifier",
                  "src": "624:22:5"
                },
                {
                  "baseName": {
                    "id": 215,
                    "name": "IAlgebraPoolState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 983,
                    "src": "651:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolState_$983",
                      "typeString": "contract IAlgebraPoolState"
                    }
                  },
                  "id": 216,
                  "nodeType": "InheritanceSpecifier",
                  "src": "651:17:5"
                },
                {
                  "baseName": {
                    "id": 217,
                    "name": "IAlgebraPoolDerivedState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 686,
                    "src": "673:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolDerivedState_$686",
                      "typeString": "contract IAlgebraPoolDerivedState"
                    }
                  },
                  "id": 218,
                  "nodeType": "InheritanceSpecifier",
                  "src": "673:24:5"
                },
                {
                  "baseName": {
                    "id": 219,
                    "name": "IAlgebraPoolActions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 649,
                    "src": "702:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolActions_$649",
                      "typeString": "contract IAlgebraPoolActions"
                    }
                  },
                  "id": 220,
                  "nodeType": "InheritanceSpecifier",
                  "src": "702:19:5"
                },
                {
                  "baseName": {
                    "id": 221,
                    "name": "IAlgebraPoolPermissionedActions",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 863,
                    "src": "726:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolPermissionedActions_$863",
                      "typeString": "contract IAlgebraPoolPermissionedActions"
                    }
                  },
                  "id": 222,
                  "nodeType": "InheritanceSpecifier",
                  "src": "726:31:5"
                },
                {
                  "baseName": {
                    "id": 223,
                    "name": "IAlgebraPoolEvents",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 798,
                    "src": "762:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPoolEvents_$798",
                      "typeString": "contract IAlgebraPoolEvents"
                    }
                  },
                  "id": 224,
                  "nodeType": "InheritanceSpecifier",
                  "src": "762:18:5"
                }
              ],
              "contractDependencies": [
                649,
                686,
                798,
                839,
                863,
                983
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 212,
                "nodeType": "StructuredDocumentation",
                "src": "345:248:5",
                "text": " @title The interface for a Algebra Pool\n @dev The pool interface is broken up into many smaller pieces.\n Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 225,
              "linearizedBaseContracts": [
                225,
                798,
                863,
                649,
                686,
                983,
                839
              ],
              "name": "IAlgebraPool",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 226,
              "src": "595:232:5"
            }
          ],
          "src": "46:783:5"
        },
        "id": 5
      },
      "contracts/core/IAlgebraPoolDeployer.sol": {
        "ast": {
          "absolutePath": "contracts/core/IAlgebraPoolDeployer.sol",
          "exportedSymbols": {
            "IAlgebraPoolDeployer": [
              266
            ]
          },
          "id": 267,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 227,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 228,
                "nodeType": "StructuredDocumentation",
                "src": "74:538:6",
                "text": " @title An interface for a contract that is capable of deploying Algebra Pools\n @notice A contract that constructs a pool must implement this to pass arguments to the pool\n @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain.\n Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 266,
              "linearizedBaseContracts": [
                266
              ],
              "name": "IAlgebraPoolDeployer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 229,
                    "nodeType": "StructuredDocumentation",
                    "src": "650:141:6",
                    "text": "  @notice Emitted when the factory address is changed\n  @param factory The factory address after the address was changed"
                  },
                  "id": 233,
                  "name": "Factory",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "809:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:25:6"
                  },
                  "src": "795:39:6"
                },
                {
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "840:440:6",
                    "text": " @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n @dev Called by the pool constructor to fetch the parameters of the pool\n Returns dataStorage The pools associated dataStorage\n Returns factory The factory address\n Returns token0 The first token of the pool by address sort order\n Returns token1 The second token of the pool by address sort order"
                  },
                  "functionSelector": "89035730",
                  "id": 245,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "parameters",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1303:2:6"
                  },
                  "returnParameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 237,
                        "mutability": "mutable",
                        "name": "dataStorage",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1352:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1352:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1380:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1380:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1404:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1404:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "1427:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1427:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1343:105:6"
                  },
                  "scope": 266,
                  "src": "1284:165:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 246,
                    "nodeType": "StructuredDocumentation",
                    "src": "1455:477:6",
                    "text": " @dev Deploys a pool with the given parameters by transiently setting the parameters storage slot and then\n clearing it after deploying the pool.\n @param dataStorage The pools associated dataStorage\n @param factory The contract address of the Algebra factory\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @return pool The deployed pool's address"
                  },
                  "functionSelector": "fd82b73a",
                  "id": 259,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "dataStorage",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "1958:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1958:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "1984:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1984:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "2006:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2006:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "2027:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1951:95:6"
                  },
                  "returnParameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "2065:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2065:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2064:14:6"
                  },
                  "scope": 266,
                  "src": "1936:143:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "2085:147:6",
                    "text": " @dev Sets the factory address to the poolDeployer for permissioned actions\n @param factory The address of the Algebra factory"
                  },
                  "functionSelector": "5bb47808",
                  "id": 265,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "2256:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2255:17:6"
                  },
                  "returnParameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2281:0:6"
                  },
                  "scope": 266,
                  "src": "2236:46:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 267,
              "src": "614:1671:6"
            }
          ],
          "src": "46:2241:6"
        },
        "id": 6
      },
      "contracts/core/IAlgebraVirtualPool.sol": {
        "ast": {
          "absolutePath": "contracts/core/IAlgebraVirtualPool.sol",
          "exportedSymbols": {
            "IAlgebraVirtualPool": [
              289
            ]
          },
          "id": 290,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 268,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 289,
              "linearizedBaseContracts": [
                289
              ],
              "name": "IAlgebraVirtualPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IAlgebraVirtualPool.Status",
                  "id": 272,
                  "members": [
                    {
                      "id": 269,
                      "name": "NOT_EXIST",
                      "nodeType": "EnumValue",
                      "src": "128:9:7"
                    },
                    {
                      "id": 270,
                      "name": "ACTIVE",
                      "nodeType": "EnumValue",
                      "src": "144:6:7"
                    },
                    {
                      "id": 271,
                      "name": "NOT_STARTED",
                      "nodeType": "EnumValue",
                      "src": "157:11:7"
                    }
                  ],
                  "name": "Status",
                  "nodeType": "EnumDefinition",
                  "src": "109:64:7"
                },
                {
                  "documentation": {
                    "id": 273,
                    "nodeType": "StructuredDocumentation",
                    "src": "179:262:7",
                    "text": " @dev This function is called by the main pool when an initialized tick is crossed there.\n If the tick is also initialized in a virtual pool it should be crossed too\n @param nextTick The crossed tick\n @param zeroToOne The direction"
                  },
                  "functionSelector": "01342b19",
                  "id": 280,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cross",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "nextTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "460:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "zeroToOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "476:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "476:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:32:7"
                  },
                  "returnParameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "500:0:7"
                  },
                  "scope": 289,
                  "src": "445:56:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 281,
                    "nodeType": "StructuredDocumentation",
                    "src": "507:333:7",
                    "text": " @dev This function is called from the main pool before every swap To increase seconds per liquidity\n cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool\n @param currentTimestamp The timestamp of the current swap\n @return Status The status of virtual pool"
                  },
                  "functionSelector": "7f376059",
                  "id": 288,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseCumulative",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "currentTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "872:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "872:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "871:25:7"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "915:6:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Status_$272",
                          "typeString": "enum IAlgebraVirtualPool.Status"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "Status",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 272,
                          "src": "915:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$272",
                            "typeString": "enum IAlgebraVirtualPool.Status"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "914:8:7"
                  },
                  "scope": 289,
                  "src": "844:79:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 290,
              "src": "74:852:7"
            }
          ],
          "src": "46:882:7"
        },
        "id": 7
      },
      "contracts/core/IDataStorageOperator.sol": {
        "ast": {
          "absolutePath": "contracts/core/IDataStorageOperator.sol",
          "exportedSymbols": {
            "IDataStorageOperator": [
              463
            ]
          },
          "id": 464,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 291,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:8"
            },
            {
              "id": 292,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:19:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 463,
              "linearizedBaseContracts": [
                463
              ],
              "name": "IDataStorageOperator",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IDataStorageOperator.FeeConfig",
                  "id": 311,
                  "members": [
                    {
                      "constant": false,
                      "id": 294,
                      "mutability": "mutable",
                      "name": "alpha1",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "215:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 293,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "215:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 296,
                      "mutability": "mutable",
                      "name": "alpha2",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "269:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "269:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "beta1",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "324:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "324:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 300,
                      "mutability": "mutable",
                      "name": "beta2",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "391:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 299,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "391:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "gamma1",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "459:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "gamma2",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "530:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "530:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "volumeBeta",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "602:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 308,
                      "mutability": "mutable",
                      "name": "volumeGamma",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "681:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 307,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "681:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "baseFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "760:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "760:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FeeConfig",
                  "nodeType": "StructDefinition",
                  "scope": 463,
                  "src": "191:613:8",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 315,
                  "name": "FeeConfiguration",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeConfig",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "833:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeConfig_$311_memory_ptr",
                          "typeString": "struct IDataStorageOperator.FeeConfig"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "FeeConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 311,
                          "src": "833:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeConfig_$311_storage_ptr",
                            "typeString": "struct IDataStorageOperator.FeeConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "832:21:8"
                  },
                  "src": "810:44:8"
                },
                {
                  "documentation": {
                    "id": 316,
                    "nodeType": "StructuredDocumentation",
                    "src": "860:928:8",
                    "text": " @notice Returns data belonging to a certain timepoint\n @param index The index of timepoint in the array\n @dev There is more convenient function to fetch a timepoint: observe(). Which requires not an index but seconds\n @return initialized Whether the timepoint has been initialized and the values are safe to use,\n blockTimestamp The timestamp of the observation,\n tickCumulative The tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp,\n secondsPerLiquidityCumulative The seconds per in range liquidity for the life of the pool as of the timepoint timestamp,\n volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp,\n averageTick Time-weighted average tick,\n volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp"
                  },
                  "functionSelector": "74eceae6",
                  "id": 335,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "timepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1812:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1812:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1811:15:8"
                  },
                  "returnParameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1873:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1873:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1898:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1898:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1928:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "1928:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 327,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1957:37:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 326,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1957:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 329,
                        "mutability": "mutable",
                        "name": "volatilityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "2003:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "uint88",
                          "nodeType": "ElementaryTypeName",
                          "src": "2003:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "averageTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "2039:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2039:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "volumePerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "2065:36:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "2065:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1864:244:8"
                  },
                  "scope": 463,
                  "src": "1792:317:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "2115:260:8",
                    "text": "@notice Initialize the dataStorage array by writing the first slot. Called once for the lifecycle of the timepoints array\n @param time The time of the dataStorage initialization, via block.timestamp truncated to uint32\n @param tick Initial tick"
                  },
                  "functionSelector": "475fb80c",
                  "id": 343,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2399:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2399:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2412:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2412:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:25:8"
                  },
                  "returnParameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2432:0:8"
                  },
                  "scope": 463,
                  "src": "2379:54:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "2439:1211:8",
                    "text": "@dev Reverts if an timepoint at or before the desired timepoint timestamp does not exist.\n 0 may be passed as `secondsAgo' to return the current cumulative values.\n If called with a timestamp falling between two timepoints, returns the counterfactual accumulator values\n at exactly the timestamp between the two timepoints.\n @param time The current block timestamp\n @param secondsAgo The amount of time to look back, in seconds, at which point to return an timepoint\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return tickCumulative The cumulative tick since the pool was first initialized, as of `secondsAgo`\n @return secondsPerLiquidityCumulative The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\n @return volatilityCumulative The cumulative volatility value since the pool was first initialized, as of `secondsAgo`\n @return volumePerAvgLiquidity The cumulative volume per liquidity value since the pool was first initialized, as of `secondsAgo`"
                  },
                  "functionSelector": "14c54079",
                  "id": 365,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSingleTimepoint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3688:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3688:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "secondsAgo",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3706:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3706:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3730:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3730:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3747:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 351,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "3747:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 354,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3766:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 353,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3766:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3681:107:8"
                  },
                  "returnParameters": {
                    "id": 364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3835:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "3835:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3864:37:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3864:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "volatilityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3910:28:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "3910:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "volumePerAvgLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3947:29:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3947:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3826:157:8"
                  },
                  "scope": 463,
                  "src": "3654:330:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 366,
                    "nodeType": "StructuredDocumentation",
                    "src": "3990:1070:8",
                    "text": "@notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n @dev Reverts if `secondsAgos` > oldest timepoint\n @param time The current block.timestamp\n @param secondsAgos Each amount of time to look back, in seconds, at which point to return an timepoint\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return tickCumulatives The cumulative tick since the pool was first initialized, as of each `secondsAgo`\n @return secondsPerLiquidityCumulatives The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\n @return volatilityCumulatives The cumulative volatility values since the pool was first initialized, as of each `secondsAgo`\n @return volumePerAvgLiquiditys The cumulative volume per liquidity values since the pool was first initialized, as of each `secondsAgo`"
                  },
                  "functionSelector": "fd31e988",
                  "id": 392,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5093:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5093:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "secondsAgos",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5111:27:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 369,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5111:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 370,
                          "nodeType": "ArrayTypeName",
                          "src": "5111:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5145:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "5145:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5162:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5162:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5181:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5181:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5086:117:8"
                  },
                  "returnParameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 381,
                        "mutability": "mutable",
                        "name": "tickCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5250:30:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 379,
                            "name": "int56",
                            "nodeType": "ElementaryTypeName",
                            "src": "5250:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "id": 380,
                          "nodeType": "ArrayTypeName",
                          "src": "5250:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                            "typeString": "int56[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5289:47:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                          "typeString": "uint160[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 382,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "5289:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "id": 383,
                          "nodeType": "ArrayTypeName",
                          "src": "5289:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                            "typeString": "uint160[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "volatilityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5345:38:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint112_$dyn_memory_ptr",
                          "typeString": "uint112[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 385,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "5345:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "id": 386,
                          "nodeType": "ArrayTypeName",
                          "src": "5345:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint112_$dyn_storage_ptr",
                            "typeString": "uint112[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "volumePerAvgLiquiditys",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "5392:39:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 388,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5392:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 389,
                          "nodeType": "ArrayTypeName",
                          "src": "5392:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5241:197:8"
                  },
                  "scope": 463,
                  "src": "5064:375:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "5445:489:8",
                    "text": "@notice Returns average volatility in the range from time-WINDOW to time\n @param time The current block.timestamp\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return TWVolatilityAverage The average volatility in the recent range\n @return TWVolumePerLiqAverage The average volume per liquidity in the recent range"
                  },
                  "functionSelector": "bc2e0181",
                  "id": 408,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAverages",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "5965:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5965:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "5983:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "5983:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 399,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "6000:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "6000:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "6019:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6019:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5958:83:8"
                  },
                  "returnParameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "TWVolatilityAverage",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "6065:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "TWVolumePerLiqAverage",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "6094:29:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6094:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6064:60:8"
                  },
                  "scope": 463,
                  "src": "5938:187:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 409,
                    "nodeType": "StructuredDocumentation",
                    "src": "6131:706:8",
                    "text": "@notice Writes an dataStorage timepoint to the array\n @dev Writable at most once per block. Index represents the most recently written element. index must be tracked externally.\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param blockTimestamp The timestamp of the new timepoint\n @param tick The active tick at the time of the new timepoint\n @param liquidity The total in-range liquidity at the time of the new timepoint\n @param volumePerLiquidity The gmean(volumes)/liquidity at the time of the new timepoint\n @return indexUpdated The new index of the most recently written element in the dataStorage array"
                  },
                  "functionSelector": "1dd486f2",
                  "id": 424,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "write",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "6862:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "6862:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "6881:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6881:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "6909:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "6909:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "6926:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6926:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "volumePerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "6950:26:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6950:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6855:126:8"
                  },
                  "returnParameters": {
                    "id": 423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 422,
                        "mutability": "mutable",
                        "name": "indexUpdated",
                        "nodeType": "VariableDeclaration",
                        "scope": 424,
                        "src": "7000:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 421,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "7000:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6999:21:8"
                  },
                  "scope": 463,
                  "src": "6841:180:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 425,
                    "nodeType": "StructuredDocumentation",
                    "src": "7027:50:8",
                    "text": "@notice Changes fee configuration for the pool"
                  },
                  "functionSelector": "1c7004cb",
                  "id": 430,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeFeeConfiguration",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "feeConfig",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "7113:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeConfig_$311_calldata_ptr",
                          "typeString": "struct IDataStorageOperator.FeeConfig"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "FeeConfig",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 311,
                          "src": "7113:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeConfig_$311_storage_ptr",
                            "typeString": "struct IDataStorageOperator.FeeConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7112:30:8"
                  },
                  "returnParameters": {
                    "id": 429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7151:0:8"
                  },
                  "scope": 463,
                  "src": "7081:71:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 431,
                    "nodeType": "StructuredDocumentation",
                    "src": "7158:303:8",
                    "text": "@notice Calculates gmean(volume/liquidity) for block\n @param liquidity The current in-range pool liquidity\n @param amount0 Total amount of swapped token0\n @param amount1 Total amount of swapped token1\n @return volumePerLiquidity gmean(volume/liquidity) capped by 100000 << 64"
                  },
                  "functionSelector": "36e52fee",
                  "id": 442,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateVolumePerLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "7508:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7508:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "7532:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7532:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "7553:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7553:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7501:71:8"
                  },
                  "returnParameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 440,
                        "mutability": "mutable",
                        "name": "volumePerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "7596:26:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7595:28:8"
                  },
                  "scope": 463,
                  "src": "7465:159:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 443,
                    "nodeType": "StructuredDocumentation",
                    "src": "7630:68:8",
                    "text": "@return windowLength Length of window used to calculate averages"
                  },
                  "functionSelector": "461645bf",
                  "id": 448,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "window",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7717:2:8"
                  },
                  "returnParameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "windowLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "7743:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7743:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7742:21:8"
                  },
                  "scope": 463,
                  "src": "7702:62:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 449,
                    "nodeType": "StructuredDocumentation",
                    "src": "7770:365:8",
                    "text": "@notice Calculates fee based on combination of sigmoids\n @param time The current block.timestamp\n @param tick The current tick\n @param index The index of the timepoint that was most recently written to the timepoints array\n @param liquidity The current in-range pool liquidity\n @return fee The fee in hundredths of a bip, i.e. 1e-6"
                  },
                  "functionSelector": "c53a182f",
                  "id": 462,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "8161:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8161:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "8179:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "8179:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "8196:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "8196:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "8215:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "8215:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8154:83:8"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "8261:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "8261:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8260:12:8"
                  },
                  "scope": 463,
                  "src": "8139:134:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 464,
              "src": "95:8181:8"
            }
          ],
          "src": "46:8232:8"
        },
        "id": 8
      },
      "contracts/core/IERC20Minimal.sol": {
        "ast": {
          "absolutePath": "contracts/core/IERC20Minimal.sol",
          "exportedSymbols": {
            "IERC20Minimal": [
              535
            ]
          },
          "id": 536,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 465,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 466,
                "nodeType": "StructuredDocumentation",
                "src": "74:267:9",
                "text": "@title Minimal ERC20 interface for Algebra\n @notice Contains a subset of the full ERC20 interface that is used in Algebra\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 535,
              "linearizedBaseContracts": [
                535
              ],
              "name": "IERC20Minimal",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 467,
                    "nodeType": "StructuredDocumentation",
                    "src": "370:199:9",
                    "text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
                  },
                  "functionSelector": "70a08231",
                  "id": 474,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "592:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "592:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "591:17:9"
                  },
                  "returnParameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "632:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:9:9"
                  },
                  "scope": 535,
                  "src": "573:68:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 475,
                    "nodeType": "StructuredDocumentation",
                    "src": "647:330:9",
                    "text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
                  },
                  "functionSelector": "a9059cbb",
                  "id": 484,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "999:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "999:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "1018:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "998:35:9"
                  },
                  "returnParameters": {
                    "id": 483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "1052:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1052:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1051:6:9"
                  },
                  "scope": 535,
                  "src": "981:77:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 485,
                    "nodeType": "StructuredDocumentation",
                    "src": "1064:247:9",
                    "text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 494,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1334:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1334:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1349:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1349:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1333:32:9"
                  },
                  "returnParameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 492,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1389:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1389:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1388:9:9"
                  },
                  "scope": 535,
                  "src": "1315:83:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 495,
                    "nodeType": "StructuredDocumentation",
                    "src": "1404:340:9",
                    "text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
                  },
                  "functionSelector": "095ea7b3",
                  "id": 504,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 497,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 504,
                        "src": "1765:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1765:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 504,
                        "src": "1782:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1782:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1764:33:9"
                  },
                  "returnParameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 504,
                        "src": "1816:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1816:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1815:6:9"
                  },
                  "scope": 535,
                  "src": "1748:74:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 505,
                    "nodeType": "StructuredDocumentation",
                    "src": "1828:367:9",
                    "text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
                  },
                  "functionSelector": "23b872dd",
                  "id": 516,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 512,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2227:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2227:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 509,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2248:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2248:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 511,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2272:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 510,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2272:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2220:71:9"
                  },
                  "returnParameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "2310:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2310:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2309:6:9"
                  },
                  "scope": 535,
                  "src": "2199:117:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 517,
                    "nodeType": "StructuredDocumentation",
                    "src": "2322:366:9",
                    "text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
                  },
                  "id": 525,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 519,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2707:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2707:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 521,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2729:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2729:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 523,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2749:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2749:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2706:57:9"
                  },
                  "src": "2692:72:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 526,
                    "nodeType": "StructuredDocumentation",
                    "src": "2770:318:9",
                    "text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
                  },
                  "id": 534,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 528,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "3107:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3107:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 530,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "3130:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3130:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "3155:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3155:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3106:63:9"
                  },
                  "src": "3092:78:9"
                }
              ],
              "scope": 536,
              "src": "341:2832:9"
            }
          ],
          "src": "46:3129:9"
        },
        "id": 9
      },
      "contracts/core/pool/IAlgebraPoolActions.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolActions.sol",
          "exportedSymbols": {
            "IAlgebraPoolActions": [
              649
            ]
          },
          "id": 650,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 537,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 538,
                "nodeType": "StructuredDocumentation",
                "src": "74:176:10",
                "text": "@title Permissionless pool actions\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 649,
              "linearizedBaseContracts": [
                649
              ],
              "name": "IAlgebraPoolActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 539,
                    "nodeType": "StructuredDocumentation",
                    "src": "285:208:10",
                    "text": " @notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param price the initial sqrt price of the pool as a Q64.96"
                  },
                  "functionSelector": "f637731d",
                  "id": 544,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "517:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "516:15:10"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "540:0:10"
                  },
                  "scope": 649,
                  "src": "497:44:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 545,
                    "nodeType": "StructuredDocumentation",
                    "src": "547:1176:10",
                    "text": " @notice Adds liquidity for the given recipient/bottomTick/topTick position\n @dev The caller of this method receives a callback in the form of IAlgebraMintCallback# AlgebraMintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on bottomTick, topTick, the amount of liquidity, and the current price.\n @param sender The address which will receive potential surplus of paid tokens\n @param recipient The address for which the liquidity will be created\n @param bottomTick The lower tick of the position in which to add liquidity\n @param topTick The upper tick of the position in which to add liquidity\n @param amount The desired amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return liquidityActual The actual minted amount of liquidity"
                  },
                  "functionSelector": "aafe29c0",
                  "id": 566,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1747:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1747:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1768:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1768:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1792:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1792:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1815:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1815:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1835:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1835:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1856:19:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1856:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1740:140:10"
                  },
                  "returnParameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1917:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1917:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 562,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1941:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 561,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1941:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 564,
                        "mutability": "mutable",
                        "name": "liquidityActual",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "1965:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 563,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1908:87:10"
                  },
                  "scope": 649,
                  "src": "1727:269:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 567,
                    "nodeType": "StructuredDocumentation",
                    "src": "2002:1043:10",
                    "text": " @notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param bottomTick The lower tick of the position for which to collect fees\n @param topTick The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "4f1eb3d8",
                  "id": 584,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3072:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3096:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3096:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3119:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3119:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "amount0Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3139:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 574,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3139:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "amount1Requested",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3170:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3065:134:10"
                  },
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3218:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "3235:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3235:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3217:34:10"
                  },
                  "scope": 649,
                  "src": "3049:203:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 585,
                    "nodeType": "StructuredDocumentation",
                    "src": "3258:629:10",
                    "text": " @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param bottomTick The lower tick of the position for which to burn liquidity\n @param topTick The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
                  },
                  "functionSelector": "a34123a7",
                  "id": 598,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "3911:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "3934:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3934:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "3954:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3954:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3904:69:10"
                  },
                  "returnParameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "3992:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3992:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "4009:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4009:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3991:34:10"
                  },
                  "scope": 649,
                  "src": "3891:135:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 599,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:1076:10",
                    "text": " @notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IAlgebraSwapCallback# AlgebraSwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback. If using the Router it should contain\n SwapRouter#SwapCallbackData\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
                  },
                  "functionSelector": "128acb08",
                  "id": 616,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5132:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5132:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "zeroToOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5156:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5156:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "amountSpecified",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5177:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5177:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "limitSqrtPrice",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5206:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "5206:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5235:19:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5235:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5125:134:10"
                  },
                  "returnParameters": {
                    "id": 615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5278:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5278:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 614,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "5294:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 613,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5294:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5277:32:10"
                  },
                  "scope": 649,
                  "src": "5112:198:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "5316:1189:10",
                    "text": " @notice Swap token0 for token1, or token1 for token0 (tokens that have fee on transfer)\n @dev The caller of this method receives a callback in the form of I AlgebraSwapCallback# AlgebraSwapCallback\n @param sender The address called this function (Comes from the Router)\n @param recipient The address to receive the output of the swap\n @param zeroToOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param limitSqrtPrice The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback. If using the Router it should contain\n SwapRouter#SwapCallbackData\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
                  },
                  "functionSelector": "71334694",
                  "id": 636,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapSupportingFeeOnInputTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6555:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6555:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6576:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "zeroToOne",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6600:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6600:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "amountSpecified",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6621:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6621:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "limitSqrtPrice",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6650:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "6650:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6679:19:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6679:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6548:155:10"
                  },
                  "returnParameters": {
                    "id": 635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6722:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6722:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 636,
                        "src": "6738:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6738:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6721:32:10"
                  },
                  "scope": 649,
                  "src": "6509:245:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 637,
                    "nodeType": "StructuredDocumentation",
                    "src": "6760:765:10",
                    "text": " @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IAlgebraFlashCallback# AlgebraFlashCallback\n @dev All excess tokens paid in the callback are distributed to liquidity providers as an additional fee. So this method can be used\n to donate underlying tokens to currently in-range liquidity providers by calling with 0 amount{0,1} and sending\n the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
                  },
                  "functionSelector": "490e6cbc",
                  "id": 648,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "flash",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "7550:17:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7550:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "7574:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7574:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "7596:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7596:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "7618:19:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7618:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7543:99:10"
                  },
                  "returnParameters": {
                    "id": 647,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7651:0:10"
                  },
                  "scope": 649,
                  "src": "7529:123:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 650,
              "src": "250:7405:10"
            }
          ],
          "src": "46:7611:10"
        },
        "id": 10
      },
      "contracts/core/pool/IAlgebraPoolDerivedState.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolDerivedState.sol",
          "exportedSymbols": {
            "IAlgebraPoolDerivedState": [
              686
            ]
          },
          "id": 687,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 651,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 652,
                "nodeType": "StructuredDocumentation",
                "src": "74:364:11",
                "text": " @title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs.\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 686,
              "linearizedBaseContracts": [
                686
              ],
              "name": "IAlgebraPoolDerivedState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "480:1226:11",
                    "text": " @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulatives Cumulative seconds per liquidity-in-range value as of each `secondsAgos`\n from the current block timestamp\n @return volatilityCumulatives Cumulative standard deviation as of each `secondsAgos`\n @return volumePerAvgLiquiditys Cumulative swap volume per liquidity as of each `secondsAgos`"
                  },
                  "functionSelector": "9d3a5241",
                  "id": 671,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 656,
                        "mutability": "mutable",
                        "name": "secondsAgos",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "1733:29:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 654,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1733:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 655,
                          "nodeType": "ArrayTypeName",
                          "src": "1733:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1732:31:11"
                  },
                  "returnParameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "tickCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "1810:30:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 658,
                            "name": "int56",
                            "nodeType": "ElementaryTypeName",
                            "src": "1810:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "id": 659,
                          "nodeType": "ArrayTypeName",
                          "src": "1810:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                            "typeString": "int56[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "1849:47:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
                          "typeString": "uint160[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 661,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1849:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "id": 662,
                          "nodeType": "ArrayTypeName",
                          "src": "1849:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
                            "typeString": "uint160[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "volatilityCumulatives",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "1905:38:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint112_$dyn_memory_ptr",
                          "typeString": "uint112[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 664,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "1905:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "id": 665,
                          "nodeType": "ArrayTypeName",
                          "src": "1905:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint112_$dyn_storage_ptr",
                            "typeString": "uint112[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "volumePerAvgLiquiditys",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "1952:39:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 667,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1952:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 668,
                          "nodeType": "ArrayTypeName",
                          "src": "1952:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1801:197:11"
                  },
                  "scope": 686,
                  "src": "1710:289:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 672,
                    "nodeType": "StructuredDocumentation",
                    "src": "2005:797:11",
                    "text": " @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param bottomTick The lower tick of the range\n @param topTick The upper tick of the range\n @return innerTickCumulative The snapshot of the tick accumulator for the range\n @return innerSecondsSpentPerLiquidity The snapshot of seconds per liquidity for the range\n @return innerSecondsSpent The snapshot of the number of seconds during which the price was in this range"
                  },
                  "functionSelector": "920c34e5",
                  "id": 685,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInnerCumulatives",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "2835:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2835:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "2853:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2853:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2834:33:11"
                  },
                  "returnParameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "innerTickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "2914:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "2914:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "innerSecondsSpentPerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "2948:37:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "2948:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "innerSecondsSpent",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "2994:24:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2994:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2905:120:11"
                  },
                  "scope": 686,
                  "src": "2806:220:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 687,
              "src": "440:2589:11"
            }
          ],
          "src": "46:2985:11"
        },
        "id": 11
      },
      "contracts/core/pool/IAlgebraPoolEvents.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolEvents.sol",
          "exportedSymbols": {
            "IAlgebraPoolEvents": [
              798
            ]
          },
          "id": 799,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 688,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 689,
                "nodeType": "StructuredDocumentation",
                "src": "74:173:12",
                "text": "@title Events emitted by a pool\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": true,
              "id": 798,
              "linearizedBaseContracts": [
                798
              ],
              "name": "IAlgebraPoolEvents",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 690,
                    "nodeType": "StructuredDocumentation",
                    "src": "281:344:12",
                    "text": " @notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param price The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
                  },
                  "id": 696,
                  "name": "Initialize",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 692,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "646:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 694,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "661:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "645:27:12"
                  },
                  "src": "629:44:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "679:558:12",
                    "text": " @notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param liquidityAmount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
                  },
                  "id": 713,
                  "name": "Mint",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1258:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1258:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1279:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1279:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1307:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1307:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 705,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1338:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 704,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1338:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 707,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidityAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1366:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 709,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1396:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1396:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 711,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "1418:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1418:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1251:187:12"
                  },
                  "src": "1241:198:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "1445:547:12",
                    "text": " @notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param recipient The address that received fees\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
                  },
                  "id": 728,
                  "name": "Collect",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2010:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2033:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2033:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2052:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2052:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 722,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2078:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2078:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 724,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2101:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2101:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 726,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2118:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2009:125:12"
                  },
                  "src": "1996:139:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 729,
                    "nodeType": "StructuredDocumentation",
                    "src": "2141:530:12",
                    "text": " @notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param bottomTick The lower tick of the position\n @param topTick The upper tick of the position\n @param liquidityAmount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
                  },
                  "id": 743,
                  "name": "Burn",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2686:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2686:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 733,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2709:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2709:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 735,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2735:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2735:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 737,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidityAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2758:23:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2758:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 739,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2783:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 741,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 743,
                        "src": "2800:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2685:131:12"
                  },
                  "src": "2675:142:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 744,
                    "nodeType": "StructuredDocumentation",
                    "src": "2823:592:12",
                    "text": " @notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param price The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
                  },
                  "id": 760,
                  "name": "Swap",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3430:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3430:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 748,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3454:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3454:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3481:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3481:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 752,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3497:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3497:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 754,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3513:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3513:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 756,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3528:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3528:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 758,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "3547:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3547:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3429:129:12"
                  },
                  "src": "3419:140:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "3565:563:12",
                    "text": " @notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
                  },
                  "id": 775,
                  "name": "Flash",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "4144:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4144:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 765,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "4168:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4168:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "4195:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4195:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "4212:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4212:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 771,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paid0",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "4229:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4229:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "paid1",
                        "nodeType": "VariableDeclaration",
                        "scope": 775,
                        "src": "4244:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4244:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4143:115:12"
                  },
                  "src": "4132:127:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 776,
                    "nodeType": "StructuredDocumentation",
                    "src": "4265:246:12",
                    "text": " @notice Emitted when the community fee is changed by the pool\n @param communityFee0New The updated value of the token0 community fee percent\n @param communityFee1New The updated value of the token1 community fee percent"
                  },
                  "id": 782,
                  "name": "CommunityFee",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 778,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "communityFee0New",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "4534:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4534:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "communityFee1New",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "4558:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4558:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4533:48:12"
                  },
                  "src": "4515:67:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 783,
                    "nodeType": "StructuredDocumentation",
                    "src": "4588:171:12",
                    "text": " @notice Emitted when new activeIncentive is set\n @param virtualPoolAddress The address of a virtual pool associated with the current active incentive"
                  },
                  "id": 787,
                  "name": "Incentive",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 785,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "virtualPoolAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "4779:34:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:36:12"
                  },
                  "src": "4763:52:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 788,
                    "nodeType": "StructuredDocumentation",
                    "src": "4821:97:12",
                    "text": " @notice Emitted when the fee changes\n @param fee The value of the token fee"
                  },
                  "id": 792,
                  "name": "Fee",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 791,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 790,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "4932:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 789,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4932:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4931:12:12"
                  },
                  "src": "4922:22:12"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 793,
                    "nodeType": "StructuredDocumentation",
                    "src": "4950:140:12",
                    "text": " @notice Emitted when the LiquidityCooldown changes\n @param liquidityCooldown The value of locktime for added liquidity"
                  },
                  "id": 797,
                  "name": "LiquidityCooldown",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 796,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 795,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidityCooldown",
                        "nodeType": "VariableDeclaration",
                        "scope": 797,
                        "src": "5118:24:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 794,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5118:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5117:26:12"
                  },
                  "src": "5094:50:12"
                }
              ],
              "scope": 799,
              "src": "247:4900:12"
            }
          ],
          "src": "46:5103:12"
        },
        "id": 12
      },
      "contracts/core/pool/IAlgebraPoolImmutables.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolImmutables.sol",
          "exportedSymbols": {
            "IAlgebraPoolImmutables": [
              839
            ],
            "IDataStorageOperator": [
              463
            ]
          },
          "id": 840,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 800,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:13"
            },
            {
              "absolutePath": "contracts/core/IDataStorageOperator.sol",
              "file": "../IDataStorageOperator.sol",
              "id": 801,
              "nodeType": "ImportDirective",
              "scope": 840,
              "sourceUnit": 464,
              "src": "74:37:13",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "115:178:13",
                "text": "@title Pool state that never changes\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 839,
              "linearizedBaseContracts": [
                839
              ],
              "name": "IAlgebraPoolImmutables",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "331:137:13",
                    "text": " @notice The contract that stores all the timepoints and can perform actions with them\n @return The operator address"
                  },
                  "functionSelector": "29047dfa",
                  "id": 808,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "dataStorageOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "500:2:13"
                  },
                  "returnParameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 808,
                        "src": "526:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "526:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "525:9:13"
                  },
                  "scope": 839,
                  "src": "472:63:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 809,
                    "nodeType": "StructuredDocumentation",
                    "src": "541:147:13",
                    "text": " @notice The contract that deployed the pool, which must adhere to the IAlgebraFactory interface\n @return The contract address"
                  },
                  "functionSelector": "c45a0155",
                  "id": 814,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "708:2:13"
                  },
                  "returnParameters": {
                    "id": 813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "734:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "734:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:9:13"
                  },
                  "scope": 839,
                  "src": "692:51:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 815,
                    "nodeType": "StructuredDocumentation",
                    "src": "749:124:13",
                    "text": " @notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "0dfe1681",
                  "id": 820,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:13"
                  },
                  "returnParameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "918:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "918:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "917:9:13"
                  },
                  "scope": 839,
                  "src": "877:50:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "933:125:13",
                    "text": " @notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
                  },
                  "functionSelector": "d21220a7",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1077:2:13"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "1103:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1103:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1102:9:13"
                  },
                  "scope": 839,
                  "src": "1062:50:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "1118:337:13",
                    "text": " @notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value\n e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
                  },
                  "functionSelector": "d0c93a7c",
                  "id": 832,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tickSpacing",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1479:2:13"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "1505:5:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1505:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1504:7:13"
                  },
                  "scope": 839,
                  "src": "1459:53:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 833,
                    "nodeType": "StructuredDocumentation",
                    "src": "1518:370:13",
                    "text": " @notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
                  },
                  "functionSelector": "70cf754a",
                  "id": 838,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxLiquidityPerTick",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1920:2:13"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "1946:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1945:9:13"
                  },
                  "scope": 839,
                  "src": "1892:63:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 840,
              "src": "293:1665:13"
            }
          ],
          "src": "46:1914:13"
        },
        "id": 13
      },
      "contracts/core/pool/IAlgebraPoolPermissionedActions.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolPermissionedActions.sol",
          "exportedSymbols": {
            "IAlgebraPoolPermissionedActions": [
              863
            ]
          },
          "id": 864,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 841,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 842,
                "nodeType": "StructuredDocumentation",
                "src": "74:272:14",
                "text": " @title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner or tokenomics\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 863,
              "linearizedBaseContracts": [
                863
              ],
              "name": "IAlgebraPoolPermissionedActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 843,
                    "nodeType": "StructuredDocumentation",
                    "src": "395:285:14",
                    "text": " @notice Set the community's % share of the fees. Cannot exceed 25% (250)\n @param communityFee0 new community fee percent for token0 of the pool in thousandths (1e-3)\n @param communityFee1 new community fee percent for token1 of the pool in thousandths (1e-3)"
                  },
                  "functionSelector": "7c0112b7",
                  "id": 850,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCommunityFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "communityFee0",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "709:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "communityFee1",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "730:19:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "730:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:42:14"
                  },
                  "returnParameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:0:14"
                  },
                  "scope": 863,
                  "src": "684:76:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 851,
                    "nodeType": "StructuredDocumentation",
                    "src": "766:141:14",
                    "text": " @notice Sets an active incentive\n @param virtualPoolAddress The address of a virtual pool associated with the incentive"
                  },
                  "functionSelector": "7c1fe0c8",
                  "id": 856,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "virtualPoolAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 856,
                        "src": "933:26:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "932:28:14"
                  },
                  "returnParameters": {
                    "id": 855,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "969:0:14"
                  },
                  "scope": 863,
                  "src": "911:59:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 857,
                    "nodeType": "StructuredDocumentation",
                    "src": "976:117:14",
                    "text": " @notice Sets new lock time for added liquidity\n @param newLiquidityCooldown The time in seconds"
                  },
                  "functionSelector": "289fe9b0",
                  "id": 862,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setLiquidityCooldown",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "newLiquidityCooldown",
                        "nodeType": "VariableDeclaration",
                        "scope": 862,
                        "src": "1127:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1127:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1126:29:14"
                  },
                  "returnParameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1164:0:14"
                  },
                  "scope": 863,
                  "src": "1097:68:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 864,
              "src": "348:820:14"
            }
          ],
          "src": "46:1124:14"
        },
        "id": 14
      },
      "contracts/core/pool/IAlgebraPoolState.sol": {
        "ast": {
          "absolutePath": "contracts/core/pool/IAlgebraPoolState.sol",
          "exportedSymbols": {
            "IAlgebraPoolState": [
              983
            ]
          },
          "id": 984,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 865,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:15"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 866,
                "nodeType": "StructuredDocumentation",
                "src": "74:175:15",
                "text": "@title Pool state that can change\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
              },
              "fullyImplemented": false,
              "id": 983,
              "linearizedBaseContracts": [
                983
              ],
              "name": "IAlgebraPoolState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 867,
                    "nodeType": "StructuredDocumentation",
                    "src": "282:960:15",
                    "text": " @notice The globalState structure in the pool stores many values but requires only one slot\n and is exposed as a single method to save gas when accessed externally.\n @return price The current price of the pool as a sqrt(token1/token0) Q64.96 value;\n Returns tick The current tick of the pool, i.e. according to the last tick transition that was run;\n Returns This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick\n boundary;\n Returns fee The last pool fee value in hundredths of a bip, i.e. 1e-6;\n Returns timepointIndex The index of the last written timepoint;\n Returns communityFeeToken0 The community fee percentage of the swap fee in thousandths (1e-3) for token0;\n Returns communityFeeToken1 The community fee percentage of the swap fee in thousandths (1e-3) for token1;\n Returns unlocked Whether the pool is currently locked to reentrancy;"
                  },
                  "functionSelector": "e76c01e4",
                  "id": 884,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "globalState",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 868,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1266:2:15"
                  },
                  "returnParameters": {
                    "id": 883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "price",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1315:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 869,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1315:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1337:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1356:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1356:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "timepointIndex",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1375:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1375:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "communityFeeToken0",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1405:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1405:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 880,
                        "mutability": "mutable",
                        "name": "communityFeeToken1",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1438:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 882,
                        "mutability": "mutable",
                        "name": "unlocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 884,
                        "src": "1471:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 881,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1306:185:15"
                  },
                  "scope": 983,
                  "src": "1246:246:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "1498:179:15",
                    "text": " @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
                  },
                  "functionSelector": "6378ae44",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalFeeGrowth0Token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1710:2:15"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "1736:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1736:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1735:9:15"
                  },
                  "scope": 983,
                  "src": "1681:64:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "1751:179:15",
                    "text": " @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
                  },
                  "functionSelector": "ecdecf42",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalFeeGrowth1Token",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1963:2:15"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "1989:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1989:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1988:9:15"
                  },
                  "scope": 983,
                  "src": "1934:64:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "2004:215:15",
                    "text": " @notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks.\n Returned value cannot exceed type(uint128).max"
                  },
                  "functionSelector": "1a686502",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "liquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2241:2:15"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "2267:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2267:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2266:9:15"
                  },
                  "scope": 983,
                  "src": "2223:53:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 903,
                    "nodeType": "StructuredDocumentation",
                    "src": "2282:1320:15",
                    "text": " @notice Look up information about a specific tick in the pool\n @dev This is a public structure, so the `return` natspec tags are omitted.\n @param tick The tick to look up\n @return liquidityTotal the total amount of position liquidity that uses the pool either as tick lower or\n tick upper\n @return liquidityDelta how much liquidity changes when the pool price crosses the tick;\n Returns outerFeeGrowth0Token the fee growth on the other side of the tick from the current tick in token0;\n Returns outerFeeGrowth1Token the fee growth on the other side of the tick from the current tick in token1;\n Returns outerTickCumulative the cumulative tick value on the other side of the tick from the current tick;\n Returns outerSecondsPerLiquidity the seconds spent per liquidity on the other side of the tick from the current tick;\n Returns outerSecondsSpent the seconds spent on the other side of the tick from the current tick;\n Returns initialized Set to true if the tick is initialized, i.e. liquidityTotal is greater than 0\n otherwise equal to false. Outside values can only be used if the tick is initialized.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
                  },
                  "functionSelector": "f30dba93",
                  "id": 924,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ticks",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 906,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 905,
                        "mutability": "mutable",
                        "name": "tick",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3621:10:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 904,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3621:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3620:12:15"
                  },
                  "returnParameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "liquidityTotal",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3679:22:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3679:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "liquidityDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3710:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3710:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "outerFeeGrowth0Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3740:28:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3740:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "outerFeeGrowth1Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3777:28:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3777:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 916,
                        "mutability": "mutable",
                        "name": "outerTickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3814:25:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "3814:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "outerSecondsPerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3848:32:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "3848:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 920,
                        "mutability": "mutable",
                        "name": "outerSecondsSpent",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3889:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 919,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3889:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "3922:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3922:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3670:275:15"
                  },
                  "scope": 983,
                  "src": "3606:340:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 925,
                    "nodeType": "StructuredDocumentation",
                    "src": "3952:101:15",
                    "text": "@notice Returns 256 packed tick initialized boolean values. See TickTable for more information "
                  },
                  "functionSelector": "c677e3e0",
                  "id": 932,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tickTable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "wordPosition",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "4076:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int16",
                          "typeString": "int16"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "int16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4076:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int16",
                            "typeString": "int16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4075:20:15"
                  },
                  "returnParameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "4119:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4119:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4118:9:15"
                  },
                  "scope": 983,
                  "src": "4057:71:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 933,
                    "nodeType": "StructuredDocumentation",
                    "src": "4134:857:15",
                    "text": " @notice Returns the information about a position by the position's key\n @dev This is a public mapping of structures, so the `return` natspec tags are omitted.\n @param key The position's key is a hash of a preimage composed by the owner, bottomTick and topTick\n @return liquidityAmount The amount of liquidity in the position;\n Returns lastLiquidityAddTimestamp Timestamp of last adding of liquidity;\n Returns innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke;\n Returns innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke;\n Returns fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke;\n Returns fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke"
                  },
                  "functionSelector": "514ea4bf",
                  "id": 950,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "positions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5014:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5014:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5013:13:15"
                  },
                  "returnParameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "liquidityAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5073:23:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5073:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "lastLiquidityAddTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5105:32:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5105:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "innerFeeGrowth0Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5146:28:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5146:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 944,
                        "mutability": "mutable",
                        "name": "innerFeeGrowth1Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5183:28:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 943,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5183:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "fees0",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5220:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5220:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "fees1",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "5242:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5242:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5064:198:15"
                  },
                  "scope": 983,
                  "src": "4995:268:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 951,
                    "nodeType": "StructuredDocumentation",
                    "src": "5269:1136:15",
                    "text": " @notice Returns data about a specific timepoint index\n @param index The element of the timepoints array to fetch\n @dev You most likely want to use #getTimepoints() instead of this method to get an timepoint as of some amount of time\n ago, rather than at a specific index in the array.\n This is a public mapping of structures, so the `return` natspec tags are omitted.\n @return initialized whether the timepoint has been initialized and the values are safe to use;\n Returns blockTimestamp The timestamp of the timepoint;\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the timepoint timestamp;\n Returns secondsPerLiquidityCumulative the seconds per in range liquidity for the life of the pool as of the timepoint timestamp;\n Returns volatilityCumulative Cumulative standard deviation for the life of the pool as of the timepoint timestamp;\n Returns averageTick Time-weighted average tick;\n Returns volumePerLiquidityCumulative Cumulative swap volume per liquidity for the life of the pool as of the timepoint timestamp;"
                  },
                  "functionSelector": "74eceae6",
                  "id": 970,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "timepoints",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 953,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6429:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6429:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6428:15:15"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6490:16:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6490:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6515:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6515:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 960,
                        "mutability": "mutable",
                        "name": "tickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6545:20:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 959,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "6545:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 962,
                        "mutability": "mutable",
                        "name": "secondsPerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6574:37:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 961,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "6574:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "volatilityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6620:27:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "uint88",
                          "nodeType": "ElementaryTypeName",
                          "src": "6620:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 966,
                        "mutability": "mutable",
                        "name": "averageTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6656:17:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 965,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "6656:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "volumePerLiquidityCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "6682:36:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "6682:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6481:244:15"
                  },
                  "scope": 983,
                  "src": "6409:317:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 971,
                    "nodeType": "StructuredDocumentation",
                    "src": "6732:290:15",
                    "text": " @notice Returns the information about active incentive\n @dev if there is no active incentive at the moment, virtualPool,endTimestamp,startTimestamp would be equal to 0\n @return virtualPool The address of a virtual pool associated with the current active incentive"
                  },
                  "functionSelector": "facb0eb1",
                  "id": 976,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "activeIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7050:2:15"
                  },
                  "returnParameters": {
                    "id": 975,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 974,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 976,
                        "src": "7076:19:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 973,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7076:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7075:21:15"
                  },
                  "scope": 983,
                  "src": "7026:71:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 977,
                    "nodeType": "StructuredDocumentation",
                    "src": "7103:66:15",
                    "text": " @notice Returns the lock time for added liquidity"
                  },
                  "functionSelector": "17e25b3c",
                  "id": 982,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "liquidityCooldown",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7199:2:15"
                  },
                  "returnParameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "cooldownInSeconds",
                        "nodeType": "VariableDeclaration",
                        "scope": 982,
                        "src": "7225:24:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7225:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7224:26:15"
                  },
                  "scope": 983,
                  "src": "7173:78:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 984,
              "src": "249:7005:15"
            }
          ],
          "src": "46:7210:15"
        },
        "id": 15
      },
      "contracts/periphery/IERC721Permit.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IERC721Permit.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              127
            ],
            "IERC721Permit": [
              1018
            ]
          },
          "id": 1019,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 985,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:16"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 986,
              "nodeType": "ImportDirective",
              "scope": 1019,
              "sourceUnit": 128,
              "src": "74:58:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 988,
                    "name": "IERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 127,
                    "src": "289:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$127",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 989,
                  "nodeType": "InheritanceSpecifier",
                  "src": "289:7:16"
                }
              ],
              "contractDependencies": [
                11,
                127
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 987,
                "nodeType": "StructuredDocumentation",
                "src": "136:126:16",
                "text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
              },
              "fullyImplemented": false,
              "id": 1018,
              "linearizedBaseContracts": [
                1018,
                127,
                11
              ],
              "name": "IERC721Permit",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 990,
                    "nodeType": "StructuredDocumentation",
                    "src": "304:105:16",
                    "text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
                  },
                  "functionSelector": "30adf81f",
                  "id": 995,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "439:2:16"
                  },
                  "returnParameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 993,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "465:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "465:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "464:9:16"
                  },
                  "scope": 1018,
                  "src": "415:59:16",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 996,
                    "nodeType": "StructuredDocumentation",
                    "src": "482:136:16",
                    "text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
                  },
                  "functionSelector": "3644e515",
                  "id": 1001,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "649:2:16"
                  },
                  "returnParameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1001,
                        "src": "675:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:9:16"
                  },
                  "scope": 1018,
                  "src": "624:60:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1002,
                    "nodeType": "StructuredDocumentation",
                    "src": "692:611:16",
                    "text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
                  },
                  "functionSelector": "7ac2ff7b",
                  "id": 1017,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1335:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1335:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1006,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1361:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1005,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1361:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1008,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1387:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1007,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1387:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1414:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1414:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1432:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1432:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1452:9:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1452:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1324:144:16"
                  },
                  "returnParameters": {
                    "id": 1016,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1485:0:16"
                  },
                  "scope": 1018,
                  "src": "1309:177:16",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1019,
              "src": "262:1227:16"
            }
          ],
          "src": "46:1445:16"
        },
        "id": 16
      },
      "contracts/periphery/IMulticall.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IMulticall.sol",
          "exportedSymbols": {
            "IMulticall": [
              1033
            ]
          },
          "id": 1034,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1020,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:17"
            },
            {
              "id": 1021,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:19:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1022,
                "nodeType": "StructuredDocumentation",
                "src": "95:111:17",
                "text": "@title Multicall interface\n @notice Enables calling multiple methods in a single call to the contract"
              },
              "fullyImplemented": false,
              "id": 1033,
              "linearizedBaseContracts": [
                1033
              ],
              "name": "IMulticall",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1023,
                    "nodeType": "StructuredDocumentation",
                    "src": "234:381:17",
                    "text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
                  },
                  "functionSelector": "ac9650d8",
                  "id": 1032,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "multicall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "640:21:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1024,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "640:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1025,
                          "nodeType": "ArrayTypeName",
                          "src": "640:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "639:23:17"
                  },
                  "returnParameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "results",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "689:22:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1028,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "689:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 1029,
                          "nodeType": "ArrayTypeName",
                          "src": "689:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "688:24:17"
                  },
                  "scope": 1033,
                  "src": "621:92:17",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1034,
              "src": "206:510:17"
            }
          ],
          "src": "46:672:17"
        },
        "id": 17
      },
      "contracts/periphery/INonfungiblePositionManager.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/INonfungiblePositionManager.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ],
            "IERC721Metadata": [
              185
            ],
            "IERC721Permit": [
              1018
            ],
            "INonfungiblePositionManager": [
              1227
            ],
            "IPeripheryImmutableState": [
              1264
            ],
            "IPeripheryPayments": [
              1290
            ],
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 1228,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1035,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:18"
            },
            {
              "id": 1036,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:19:18"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
              "id": 1037,
              "nodeType": "ImportDirective",
              "scope": 1228,
              "sourceUnit": 186,
              "src": "95:66:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
              "id": 1038,
              "nodeType": "ImportDirective",
              "scope": 1228,
              "sourceUnit": 159,
              "src": "163:68:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IPoolInitializer.sol",
              "file": "./IPoolInitializer.sol",
              "id": 1039,
              "nodeType": "ImportDirective",
              "scope": 1228,
              "sourceUnit": 1341,
              "src": "235:32:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IERC721Permit.sol",
              "file": "./IERC721Permit.sol",
              "id": 1040,
              "nodeType": "ImportDirective",
              "scope": 1228,
              "sourceUnit": 1019,
              "src": "269:29:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IPeripheryPayments.sol",
              "file": "./IPeripheryPayments.sol",
              "id": 1041,
              "nodeType": "ImportDirective",
              "scope": 1228,
              "sourceUnit": 1291,
              "src": "300:34:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IPeripheryImmutableState.sol",
              "file": "./IPeripheryImmutableState.sol",
              "id": 1042,
              "nodeType": "ImportDirective",
              "scope": 1228,
              "sourceUnit": 1265,
              "src": "336:40:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1044,
                    "name": "IPoolInitializer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1340,
                    "src": "713:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolInitializer_$1340",
                      "typeString": "contract IPoolInitializer"
                    }
                  },
                  "id": 1045,
                  "nodeType": "InheritanceSpecifier",
                  "src": "713:16:18"
                },
                {
                  "baseName": {
                    "id": 1046,
                    "name": "IPeripheryPayments",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1290,
                    "src": "736:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPeripheryPayments_$1290",
                      "typeString": "contract IPeripheryPayments"
                    }
                  },
                  "id": 1047,
                  "nodeType": "InheritanceSpecifier",
                  "src": "736:18:18"
                },
                {
                  "baseName": {
                    "id": 1048,
                    "name": "IPeripheryImmutableState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1264,
                    "src": "761:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPeripheryImmutableState_$1264",
                      "typeString": "contract IPeripheryImmutableState"
                    }
                  },
                  "id": 1049,
                  "nodeType": "InheritanceSpecifier",
                  "src": "761:24:18"
                },
                {
                  "baseName": {
                    "id": 1050,
                    "name": "IERC721Metadata",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 185,
                    "src": "792:15:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Metadata_$185",
                      "typeString": "contract IERC721Metadata"
                    }
                  },
                  "id": 1051,
                  "nodeType": "InheritanceSpecifier",
                  "src": "792:15:18"
                },
                {
                  "baseName": {
                    "id": 1052,
                    "name": "IERC721Enumerable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 158,
                    "src": "814:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$158",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 1053,
                  "nodeType": "InheritanceSpecifier",
                  "src": "814:17:18"
                },
                {
                  "baseName": {
                    "id": 1054,
                    "name": "IERC721Permit",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1018,
                    "src": "838:13:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Permit_$1018",
                      "typeString": "contract IERC721Permit"
                    }
                  },
                  "id": 1055,
                  "nodeType": "InheritanceSpecifier",
                  "src": "838:13:18"
                }
              ],
              "contractDependencies": [
                11,
                127,
                158,
                185,
                1018,
                1264,
                1290,
                1340
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1043,
                "nodeType": "StructuredDocumentation",
                "src": "380:287:18",
                "text": "@title Non-fungible token for positions\n @notice Wraps Algebra positions in a non-fungible token interface which allows for them to be transferred\n and authorized.\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1227,
              "linearizedBaseContracts": [
                1227,
                1018,
                158,
                185,
                127,
                11,
                1264,
                1290,
                1340
              ],
              "name": "INonfungiblePositionManager",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1056,
                    "nodeType": "StructuredDocumentation",
                    "src": "860:615:18",
                    "text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param actualLiquidity the actual liquidity that was added into a pool. Could differ from\n _liquidity_ when using FeeOnTransfer tokens\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
                  },
                  "id": 1070,
                  "name": "IncreaseLiquidity",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1058,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1070,
                        "src": "1515:23:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1515:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1060,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1070,
                        "src": "1549:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1062,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "actualLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1070,
                        "src": "1577:23:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1577:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1064,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1070,
                        "src": "1611:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1611:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1070,
                        "src": "1637:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1065,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1637:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1068,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1070,
                        "src": "1663:12:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1663:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1504:178:18"
                  },
                  "src": "1481:202:18"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1071,
                    "nodeType": "StructuredDocumentation",
                    "src": "1689:423:18",
                    "text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
                  },
                  "id": 1081,
                  "name": "DecreaseLiquidity",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2142:23:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1075,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2167:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2167:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1077,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2186:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1076,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2186:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1079,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "2203:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1078,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2141:78:18"
                  },
                  "src": "2118:102:18"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1082,
                    "nodeType": "StructuredDocumentation",
                    "src": "2226:527:18",
                    "text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
                  },
                  "id": 1092,
                  "name": "Collect",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1084,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "2773:23:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2773:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1086,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "2798:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2798:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1088,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "2817:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2817:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "2834:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2834:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2772:78:18"
                  },
                  "src": "2759:92:18"
                },
                {
                  "documentation": {
                    "id": 1093,
                    "nodeType": "StructuredDocumentation",
                    "src": "2859:1117:18",
                    "text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
                  },
                  "functionSelector": "99fbab88",
                  "id": 1120,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "positions",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4001:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4001:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4000:17:18"
                  },
                  "returnParameters": {
                    "id": 1119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4082:12:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4082:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4109:16:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4109:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4140:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4140:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4169:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4169:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4198:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "4198:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4228:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "4228:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4258:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "feeGrowthInside0LastX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4290:32:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4290:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "feeGrowthInside1LastX128",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4337:32:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4337:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "tokensOwed0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4384:19:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4384:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "tokensOwed1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1120,
                        "src": "4418:19:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4418:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4067:381:18"
                  },
                  "scope": 1227,
                  "src": "3982:467:18",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.MintParams",
                  "id": 1141,
                  "members": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4486:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4486:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1124,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4511:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1123,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4511:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1126,
                      "mutability": "mutable",
                      "name": "tickLower",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4536:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1125,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4536:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1128,
                      "mutability": "mutable",
                      "name": "tickUpper",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4562:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1127,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4562:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1130,
                      "mutability": "mutable",
                      "name": "amount0Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4588:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1129,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4588:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "amount1Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4621:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4621:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1134,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4654:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4654:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1136,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4683:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1135,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4683:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1138,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4712:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4712:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1140,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1141,
                      "src": "4740:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4740:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "MintParams",
                  "nodeType": "StructDefinition",
                  "scope": 1227,
                  "src": "4457:307:18",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1142,
                    "nodeType": "StructuredDocumentation",
                    "src": "4772:593:18",
                    "text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
                  },
                  "functionSelector": "9cc1a283",
                  "id": 1155,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "5385:26:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintParams_$1141_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.MintParams"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "MintParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1141,
                          "src": "5385:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintParams_$1141_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.MintParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5384:28:18"
                  },
                  "returnParameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "5480:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5480:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "5510:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5510:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "5542:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5542:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1153,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "5572:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5572:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5465:133:18"
                  },
                  "scope": 1227,
                  "src": "5371:228:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
                  "id": 1168,
                  "members": [
                    {
                      "constant": false,
                      "id": 1157,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "5649:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5649:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1159,
                      "mutability": "mutable",
                      "name": "amount0Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "5675:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5675:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "amount1Desired",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "5708:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5708:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1163,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "5741:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5741:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1165,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "5770:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5770:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1167,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1168,
                      "src": "5799:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5799:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IncreaseLiquidityParams",
                  "nodeType": "StructDefinition",
                  "scope": 1227,
                  "src": "5607:216:18",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1169,
                    "nodeType": "StructuredDocumentation",
                    "src": "5831:830:18",
                    "text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to achieve resulting liquidity\n @return amount1 The amount of token1 to achieve resulting liquidity"
                  },
                  "functionSelector": "219f5d17",
                  "id": 1180,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "6694:39:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1168_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "IncreaseLiquidityParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1168,
                          "src": "6694:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1168_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6693:41:18"
                  },
                  "returnParameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1174,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "6802:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "6802:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "6834:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6834:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "6864:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6864:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6787:103:18"
                  },
                  "scope": 1227,
                  "src": "6667:224:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
                  "id": 1191,
                  "members": [
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "6941:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6941:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "6967:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6967:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "6995:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6995:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1188,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "7024:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7024:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1190,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "7053:16:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1189,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7053:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DecreaseLiquidityParams",
                  "nodeType": "StructDefinition",
                  "scope": 1227,
                  "src": "6899:178:18",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1192,
                    "nodeType": "StructuredDocumentation",
                    "src": "7085:709:18",
                    "text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
                  },
                  "functionSelector": "0c49ccbe",
                  "id": 1201,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "7827:39:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1191_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "DecreaseLiquidityParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1191,
                          "src": "7827:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1191_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7826:41:18"
                  },
                  "returnParameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "7921:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7921:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "7938:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7938:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7920:34:18"
                  },
                  "scope": 1227,
                  "src": "7800:155:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "INonfungiblePositionManager.CollectParams",
                  "id": 1210,
                  "members": [
                    {
                      "constant": false,
                      "id": 1203,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "7995:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7995:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1205,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "8021:17:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1204,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8021:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "amount0Max",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "8049:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8049:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1209,
                      "mutability": "mutable",
                      "name": "amount1Max",
                      "nodeType": "VariableDeclaration",
                      "scope": 1210,
                      "src": "8078:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1208,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8078:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "CollectParams",
                  "nodeType": "StructDefinition",
                  "scope": 1227,
                  "src": "7963:141:18",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "8112:495:18",
                    "text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "fc6f7865",
                  "id": 1220,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "8630:29:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$1210_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "CollectParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1210,
                          "src": "8630:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectParams_$1210_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.CollectParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8629:31:18"
                  },
                  "returnParameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "8687:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8687:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "8704:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8704:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8686:34:18"
                  },
                  "scope": 1227,
                  "src": "8613:108:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1221,
                    "nodeType": "StructuredDocumentation",
                    "src": "8729:215:18",
                    "text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
                  },
                  "functionSelector": "42966c68",
                  "id": 1226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "8964:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8964:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8963:17:18"
                  },
                  "returnParameters": {
                    "id": 1225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8997:0:18"
                  },
                  "scope": 1227,
                  "src": "8950:48:18",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1228,
              "src": "667:8334:18"
            }
          ],
          "src": "46:8957:18"
        },
        "id": 18
      },
      "contracts/periphery/INonfungibleTokenPositionDescriptor.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/INonfungibleTokenPositionDescriptor.sol",
          "exportedSymbols": {
            "IERC165": [
              11
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ],
            "IERC721Metadata": [
              185
            ],
            "IERC721Permit": [
              1018
            ],
            "INonfungiblePositionManager": [
              1227
            ],
            "INonfungibleTokenPositionDescriptor": [
              1242
            ],
            "IPeripheryImmutableState": [
              1264
            ],
            "IPeripheryPayments": [
              1290
            ],
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 1243,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1229,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:19"
            },
            {
              "absolutePath": "contracts/periphery/INonfungiblePositionManager.sol",
              "file": "./INonfungiblePositionManager.sol",
              "id": 1230,
              "nodeType": "ImportDirective",
              "scope": 1243,
              "sourceUnit": 1228,
              "src": "74:43:19",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1231,
                "nodeType": "StructuredDocumentation",
                "src": "121:160:19",
                "text": "@title Describes position NFT tokens via URI\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1242,
              "linearizedBaseContracts": [
                1242
              ],
              "name": "INonfungibleTokenPositionDescriptor",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1232,
                    "nodeType": "StructuredDocumentation",
                    "src": "334:417:19",
                    "text": "@notice Produces the URI describing a particular token ID for a position manager\n @dev Note this URI may be a data: URI with the JSON contents directly inlined\n @param positionManager The position manager for which to describe the token\n @param tokenId The ID of the token for which to produce a description, which may not be valid\n @return The URI of the ERC721-compliant metadata"
                  },
                  "functionSelector": "e9dc6375",
                  "id": 1241,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tokenURI",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "positionManager",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "775:43:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1227",
                          "typeString": "contract INonfungiblePositionManager"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "INonfungiblePositionManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1227,
                          "src": "775:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1227",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1236,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "820:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "774:62:19"
                  },
                  "returnParameters": {
                    "id": 1240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1239,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "887:13:19",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1238,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "887:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "886:15:19"
                  },
                  "scope": 1242,
                  "src": "757:145:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1243,
              "src": "281:624:19"
            }
          ],
          "src": "46:861:19"
        },
        "id": 19
      },
      "contracts/periphery/IPeripheryImmutableState.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IPeripheryImmutableState.sol",
          "exportedSymbols": {
            "IPeripheryImmutableState": [
              1264
            ]
          },
          "id": 1265,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1244,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:20"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1245,
                "nodeType": "StructuredDocumentation",
                "src": "74:203:20",
                "text": "@title Immutable state\n @notice Functions that return immutable state of the router\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1264,
              "linearizedBaseContracts": [
                1264
              ],
              "name": "IPeripheryImmutableState",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1246,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:20",
                    "text": "@return Returns the address of the Algebra factory"
                  },
                  "functionSelector": "c45a0155",
                  "id": 1251,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1247,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "395:2:20"
                  },
                  "returnParameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1249,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1251,
                        "src": "421:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "421:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "420:9:20"
                  },
                  "scope": 1264,
                  "src": "379:51:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:52:20",
                    "text": "@return Returns the address of the pool Deployer"
                  },
                  "functionSelector": "3119049a",
                  "id": 1257,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "poolDeployer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "517:2:20"
                  },
                  "returnParameters": {
                    "id": 1256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1257,
                        "src": "543:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "543:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "542:9:20"
                  },
                  "scope": 1264,
                  "src": "496:56:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1258,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:47:20",
                    "text": "@return Returns the address of WNativeToken"
                  },
                  "functionSelector": "8af3ac85",
                  "id": 1263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "WNativeToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "634:2:20"
                  },
                  "returnParameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1261,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "660:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "659:9:20"
                  },
                  "scope": 1264,
                  "src": "613:56:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1265,
              "src": "277:395:20"
            }
          ],
          "src": "46:628:20"
        },
        "id": 20
      },
      "contracts/periphery/IPeripheryPayments.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IPeripheryPayments.sol",
          "exportedSymbols": {
            "IPeripheryPayments": [
              1290
            ]
          },
          "id": 1291,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1266,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:21"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1267,
                "nodeType": "StructuredDocumentation",
                "src": "74:212:21",
                "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of NativeToken\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1290,
              "linearizedBaseContracts": [
                1290
              ],
              "name": "IPeripheryPayments",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1268,
                    "nodeType": "StructuredDocumentation",
                    "src": "322:342:21",
                    "text": "@notice Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users.\n @param amountMinimum The minimum amount of WNativeToken to unwrap\n @param recipient The address receiving NativeToken"
                  },
                  "functionSelector": "69bc35b2",
                  "id": 1275,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unwrapWNativeToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1270,
                        "mutability": "mutable",
                        "name": "amountMinimum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "698:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1272,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "721:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "721:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "697:42:21"
                  },
                  "returnParameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "756:0:21"
                  },
                  "scope": 1290,
                  "src": "670:87:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1276,
                    "nodeType": "StructuredDocumentation",
                    "src": "765:235:21",
                    "text": "@notice Refunds any NativeToken balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
                  },
                  "functionSelector": "41865270",
                  "id": 1279,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refundNativeToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1032:2:21"
                  },
                  "returnParameters": {
                    "id": 1278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1051:0:21"
                  },
                  "scope": 1290,
                  "src": "1006:46:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1280,
                    "nodeType": "StructuredDocumentation",
                    "src": "1060:431:21",
                    "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
                  },
                  "functionSelector": "df2ab5bb",
                  "id": 1289,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sweepToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "1527:13:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1527:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "amountMinimum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "1551:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1551:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1286,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1289,
                        "src": "1583:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1516:91:21"
                  },
                  "returnParameters": {
                    "id": 1288,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1624:0:21"
                  },
                  "scope": 1290,
                  "src": "1497:128:21",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1291,
              "src": "286:1342:21"
            }
          ],
          "src": "46:1584:21"
        },
        "id": 21
      },
      "contracts/periphery/IPeripheryPaymentsWithFee.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IPeripheryPaymentsWithFee.sol",
          "exportedSymbols": {
            "IPeripheryPayments": [
              1290
            ],
            "IPeripheryPaymentsWithFee": [
              1323
            ]
          },
          "id": 1324,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1292,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:22"
            },
            {
              "absolutePath": "contracts/periphery/IPeripheryPayments.sol",
              "file": "./IPeripheryPayments.sol",
              "id": 1293,
              "nodeType": "ImportDirective",
              "scope": 1324,
              "sourceUnit": 1291,
              "src": "74:34:22",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1295,
                    "name": "IPeripheryPayments",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1290,
                    "src": "363:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPeripheryPayments_$1290",
                      "typeString": "contract IPeripheryPayments"
                    }
                  },
                  "id": 1296,
                  "nodeType": "InheritanceSpecifier",
                  "src": "363:18:22"
                }
              ],
              "contractDependencies": [
                1290
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1294,
                "nodeType": "StructuredDocumentation",
                "src": "112:212:22",
                "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of NativeToken\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1323,
              "linearizedBaseContracts": [
                1323,
                1290
              ],
              "name": "IPeripheryPaymentsWithFee",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1297,
                    "nodeType": "StructuredDocumentation",
                    "src": "389:297:22",
                    "text": "@notice Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken, with a percentage between\n 0 (exclusive), and 1 (inclusive) going to feeRecipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users."
                  },
                  "functionSelector": "c60696ec",
                  "id": 1308,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unwrapWNativeTokenWithFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1299,
                        "mutability": "mutable",
                        "name": "amountMinimum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "737:21:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1298,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1301,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "769:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1303,
                        "mutability": "mutable",
                        "name": "feeBips",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "797:15:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1305,
                        "mutability": "mutable",
                        "name": "feeRecipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "823:20:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "726:124:22"
                  },
                  "returnParameters": {
                    "id": 1307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "867:0:22"
                  },
                  "scope": 1323,
                  "src": "692:176:22",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1309,
                    "nodeType": "StructuredDocumentation",
                    "src": "876:279:22",
                    "text": "@notice Transfers the full amount of a token held by this contract to recipient, with a percentage between\n 0 (exclusive) and 1 (inclusive) going to feeRecipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users"
                  },
                  "functionSelector": "e0e189a0",
                  "id": 1322,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sweepTokenWithFee",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "1198:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1198:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "amountMinimum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "1222:21:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "1254:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1254:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1317,
                        "mutability": "mutable",
                        "name": "feeBips",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "1282:15:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1316,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1282:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1319,
                        "mutability": "mutable",
                        "name": "feeRecipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1322,
                        "src": "1308:20:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1308:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1187:148:22"
                  },
                  "returnParameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1352:0:22"
                  },
                  "scope": 1323,
                  "src": "1161:192:22",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1324,
              "src": "324:1032:22"
            }
          ],
          "src": "46:1312:22"
        },
        "id": 22
      },
      "contracts/periphery/IPoolInitializer.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IPoolInitializer.sol",
          "exportedSymbols": {
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 1341,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1325,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:23"
            },
            {
              "id": 1326,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:19:23"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1327,
                "nodeType": "StructuredDocumentation",
                "src": "95:307:23",
                "text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist.\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1340,
              "linearizedBaseContracts": [
                1340
              ],
              "name": "IPoolInitializer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1328,
                    "nodeType": "StructuredDocumentation",
                    "src": "436:575:23",
                    "text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
                  },
                  "functionSelector": "51246d6e",
                  "id": 1339,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createAndInitializePoolIfNecessary",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1330,
                        "mutability": "mutable",
                        "name": "token0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1071:14:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1071:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "token1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1096:14:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1096:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "sqrtPriceX96",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1121:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1121:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1060:88:23"
                  },
                  "returnParameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1337,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1339,
                        "src": "1175:12:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1175:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1174:14:23"
                  },
                  "scope": 1340,
                  "src": "1017:172:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1341,
              "src": "402:790:23"
            }
          ],
          "src": "46:1148:23"
        },
        "id": 23
      },
      "contracts/periphery/ISelfPermit.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/ISelfPermit.sol",
          "exportedSymbols": {
            "ISelfPermit": [
              1408
            ]
          },
          "id": 1409,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1342,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:24"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1343,
                "nodeType": "StructuredDocumentation",
                "src": "74:119:24",
                "text": "@title Self Permit\n @notice Functionality to call permit on any EIP-2612-compliant token for use in the route"
              },
              "fullyImplemented": false,
              "id": 1408,
              "linearizedBaseContracts": [
                1408
              ],
              "name": "ISelfPermit",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1344,
                    "nodeType": "StructuredDocumentation",
                    "src": "222:670:24",
                    "text": "@notice Permits this contract to spend a given token from `msg.sender`\n @dev The `owner` is always msg.sender and the `spender` is always address(this).\n @param token The address of the token spent\n @param value The amount that can be spent of token\n @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
                  },
                  "functionSelector": "f3995c67",
                  "id": 1359,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfPermit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1346,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "928:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "928:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "952:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "976:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1352,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "1003:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1003:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1354,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "1021:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1353,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1356,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1359,
                        "src": "1041:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1041:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "917:140:24"
                  },
                  "returnParameters": {
                    "id": 1358,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1074:0:24"
                  },
                  "scope": 1408,
                  "src": "898:177:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1360,
                    "nodeType": "StructuredDocumentation",
                    "src": "1083:787:24",
                    "text": "@notice Permits this contract to spend a given token from `msg.sender`\n @dev The `owner` is always msg.sender and the `spender` is always address(this).\n Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\n @param token The address of the token spent\n @param value The amount that can be spent of token\n @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
                  },
                  "functionSelector": "c2e3140a",
                  "id": 1375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfPermitIfNecessary",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1362,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1917:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1917:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1364,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1941:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1941:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1366,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1965:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1992:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1992:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1370,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "2010:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1372,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "2030:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2030:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1906:140:24"
                  },
                  "returnParameters": {
                    "id": 1374,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2063:0:24"
                  },
                  "scope": 1408,
                  "src": "1876:188:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1376,
                    "nodeType": "StructuredDocumentation",
                    "src": "2072:677:24",
                    "text": "@notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\n @dev The `owner` is always msg.sender and the `spender` is always address(this)\n @param token The address of the token spent\n @param nonce The current nonce of the owner\n @param expiry The timestamp at which the permit is no longer valid\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
                  },
                  "functionSelector": "4659a494",
                  "id": 1391,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfPermitAllowed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1378,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2792:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1377,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2792:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2816:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2816:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1382,
                        "mutability": "mutable",
                        "name": "expiry",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2840:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1381,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2840:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1384,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2865:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1383,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2865:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2883:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2883:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1388,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2903:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2903:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2781:138:24"
                  },
                  "returnParameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2936:0:24"
                  },
                  "scope": 1408,
                  "src": "2755:182:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1392,
                    "nodeType": "StructuredDocumentation",
                    "src": "2945:809:24",
                    "text": "@notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\n @dev The `owner` is always msg.sender and the `spender` is always address(this)\n Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\n @param token The address of the token spent\n @param nonce The current nonce of the owner\n @param expiry The timestamp at which the permit is no longer valid\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
                  },
                  "functionSelector": "a4a78f0c",
                  "id": 1407,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfPermitAllowedIfNecessary",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3808:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3808:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3832:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1398,
                        "mutability": "mutable",
                        "name": "expiry",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3856:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1397,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3856:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1400,
                        "mutability": "mutable",
                        "name": "v",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3881:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1399,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3881:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1402,
                        "mutability": "mutable",
                        "name": "r",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3899:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1401,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3899:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1404,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "3919:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1403,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3797:138:24"
                  },
                  "returnParameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3952:0:24"
                  },
                  "scope": 1408,
                  "src": "3760:193:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1409,
              "src": "193:3763:24"
            }
          ],
          "src": "46:3912:24"
        },
        "id": 24
      },
      "contracts/periphery/IV3Migrator.sol": {
        "ast": {
          "absolutePath": "contracts/periphery/IV3Migrator.sol",
          "exportedSymbols": {
            "IMulticall": [
              1033
            ],
            "IPoolInitializer": [
              1340
            ],
            "ISelfPermit": [
              1408
            ],
            "IV3Migrator": [
              1453
            ]
          },
          "id": 1454,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1410,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:24:25"
            },
            {
              "id": 1411,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "72:19:25"
            },
            {
              "absolutePath": "contracts/periphery/IMulticall.sol",
              "file": "./IMulticall.sol",
              "id": 1412,
              "nodeType": "ImportDirective",
              "scope": 1454,
              "sourceUnit": 1034,
              "src": "95:26:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/ISelfPermit.sol",
              "file": "./ISelfPermit.sol",
              "id": 1413,
              "nodeType": "ImportDirective",
              "scope": 1454,
              "sourceUnit": 1409,
              "src": "123:27:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IPoolInitializer.sol",
              "file": "./IPoolInitializer.sol",
              "id": 1414,
              "nodeType": "ImportDirective",
              "scope": 1454,
              "sourceUnit": 1341,
              "src": "152:32:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1416,
                    "name": "IMulticall",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1033,
                    "src": "447:10:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMulticall_$1033",
                      "typeString": "contract IMulticall"
                    }
                  },
                  "id": 1417,
                  "nodeType": "InheritanceSpecifier",
                  "src": "447:10:25"
                },
                {
                  "baseName": {
                    "id": 1418,
                    "name": "ISelfPermit",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1408,
                    "src": "459:11:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISelfPermit_$1408",
                      "typeString": "contract ISelfPermit"
                    }
                  },
                  "id": 1419,
                  "nodeType": "InheritanceSpecifier",
                  "src": "459:11:25"
                },
                {
                  "baseName": {
                    "id": 1420,
                    "name": "IPoolInitializer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1340,
                    "src": "472:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolInitializer_$1340",
                      "typeString": "contract IPoolInitializer"
                    }
                  },
                  "id": 1421,
                  "nodeType": "InheritanceSpecifier",
                  "src": "472:16:25"
                }
              ],
              "contractDependencies": [
                1033,
                1340,
                1408
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1415,
                "nodeType": "StructuredDocumentation",
                "src": "188:234:25",
                "text": "@title Algebra Migrator\n @notice Enables migration of liqudity from Uniswap v2-compatible pairs into Algebra pools\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
              },
              "fullyImplemented": false,
              "id": 1453,
              "linearizedBaseContracts": [
                1453,
                1340,
                1408,
                1033
              ],
              "name": "IV3Migrator",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IV3Migrator.MigrateParams",
                  "id": 1446,
                  "members": [
                    {
                      "constant": false,
                      "id": 1423,
                      "mutability": "mutable",
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "528:12:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1422,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "528:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1425,
                      "mutability": "mutable",
                      "name": "liquidityToMigrate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "585:26:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "585:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1427,
                      "mutability": "mutable",
                      "name": "percentageToMigrate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "662:25:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1426,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "662:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1429,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "737:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1428,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "737:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1431,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "762:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "762:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "tickLower",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "787:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1432,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "787:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1435,
                      "mutability": "mutable",
                      "name": "tickUpper",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "813:15:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1434,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1437,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "839:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1439,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "913:18:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "913:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1441,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "987:17:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1440,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "987:7:25",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1443,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "1015:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1015:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1445,
                      "mutability": "mutable",
                      "name": "refundAsNative",
                      "nodeType": "VariableDeclaration",
                      "scope": 1446,
                      "src": "1042:19:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1444,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "MigrateParams",
                  "nodeType": "StructDefinition",
                  "scope": 1453,
                  "src": "496:573:25",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1447,
                    "nodeType": "StructuredDocumentation",
                    "src": "1077:568:25",
                    "text": "@notice Migrates liquidity to Algebra by burning v2 liquidity and minting a new position for Algebra\n @dev Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of\n the maximum amount of Algebra liquidity that the v2 liquidity can get. For the special case of migrating to an\n out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range\n @param params The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata"
                  },
                  "functionSelector": "8be74fb6",
                  "id": 1452,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "migrate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1449,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "1668:29:25",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MigrateParams_$1446_calldata_ptr",
                          "typeString": "struct IV3Migrator.MigrateParams"
                        },
                        "typeName": {
                          "id": 1448,
                          "name": "MigrateParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1446,
                          "src": "1668:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MigrateParams_$1446_storage_ptr",
                            "typeString": "struct IV3Migrator.MigrateParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1667:31:25"
                  },
                  "returnParameters": {
                    "id": 1451,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1707:0:25"
                  },
                  "scope": 1453,
                  "src": "1651:57:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1454,
              "src": "422:1289:25"
            }
          ],
          "src": "46:1667:25"
        },
        "id": 25
      },
      "contracts/tokenomics/IAlgebraFarming.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/IAlgebraFarming.sol",
          "exportedSymbols": {
            "IAlgebraFarming": [
              1690
            ],
            "IAlgebraPool": [
              225
            ],
            "IAlgebraPoolActions": [
              649
            ],
            "IAlgebraPoolDeployer": [
              266
            ],
            "IAlgebraPoolDerivedState": [
              686
            ],
            "IAlgebraPoolEvents": [
              798
            ],
            "IAlgebraPoolImmutables": [
              839
            ],
            "IAlgebraPoolPermissionedActions": [
              863
            ],
            "IAlgebraPoolState": [
              983
            ],
            "IDataStorageOperator": [
              463
            ],
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              535
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ],
            "IERC721Metadata": [
              185
            ],
            "IERC721Permit": [
              1018
            ],
            "IIncentiveKey": [
              1915
            ],
            "INonfungiblePositionManager": [
              1227
            ],
            "IPeripheryImmutableState": [
              1264
            ],
            "IPeripheryPayments": [
              1290
            ],
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 1691,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1455,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:26"
            },
            {
              "id": 1456,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "71:19:26"
            },
            {
              "absolutePath": "contracts/core/IAlgebraPoolDeployer.sol",
              "file": "../core/IAlgebraPoolDeployer.sol",
              "id": 1457,
              "nodeType": "ImportDirective",
              "scope": 1691,
              "sourceUnit": 267,
              "src": "94:42:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/IAlgebraPool.sol",
              "file": "../core/IAlgebraPool.sol",
              "id": 1458,
              "nodeType": "ImportDirective",
              "scope": 1691,
              "sourceUnit": 226,
              "src": "138:34:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/IERC20Minimal.sol",
              "file": "../core/IERC20Minimal.sol",
              "id": 1459,
              "nodeType": "ImportDirective",
              "scope": 1691,
              "sourceUnit": 536,
              "src": "174:35:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/INonfungiblePositionManager.sol",
              "file": "../periphery/INonfungiblePositionManager.sol",
              "id": 1460,
              "nodeType": "ImportDirective",
              "scope": 1691,
              "sourceUnit": 1228,
              "src": "211:54:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/tokenomics/IIncentiveKey.sol",
              "file": "./IIncentiveKey.sol",
              "id": 1461,
              "nodeType": "ImportDirective",
              "scope": 1691,
              "sourceUnit": 1916,
              "src": "269:29:26",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1463,
                    "name": "IIncentiveKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1915,
                    "src": "456:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIncentiveKey_$1915",
                      "typeString": "contract IIncentiveKey"
                    }
                  },
                  "id": 1464,
                  "nodeType": "InheritanceSpecifier",
                  "src": "456:13:26"
                }
              ],
              "contractDependencies": [
                1915
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1462,
                "nodeType": "StructuredDocumentation",
                "src": "302:125:26",
                "text": "@title Algebra Farming Interface\n @notice Allows farming nonfungible liquidity tokens in exchange for reward tokens"
              },
              "fullyImplemented": false,
              "id": 1690,
              "linearizedBaseContracts": [
                1690,
                1915
              ],
              "name": "IAlgebraFarming",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1465,
                    "nodeType": "StructuredDocumentation",
                    "src": "477:91:26",
                    "text": "@notice The nonfungible position manager with which this farming contract is compatible"
                  },
                  "functionSelector": "b44a2722",
                  "id": 1470,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonfungiblePositionManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "609:2:26"
                  },
                  "returnParameters": {
                    "id": 1469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1468,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "635:27:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1227",
                          "typeString": "contract INonfungiblePositionManager"
                        },
                        "typeName": {
                          "id": 1467,
                          "name": "INonfungiblePositionManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1227,
                          "src": "635:27:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1227",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:29:26"
                  },
                  "scope": 1690,
                  "src": "574:90:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1471,
                    "nodeType": "StructuredDocumentation",
                    "src": "674:29:26",
                    "text": "@notice The pool deployer"
                  },
                  "functionSelector": "d5f39488",
                  "id": 1476,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1472,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "726:2:26"
                  },
                  "returnParameters": {
                    "id": 1475,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1474,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1476,
                        "src": "747:20:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPoolDeployer_$266",
                          "typeString": "contract IAlgebraPoolDeployer"
                        },
                        "typeName": {
                          "id": 1473,
                          "name": "IAlgebraPoolDeployer",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 266,
                          "src": "747:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraPoolDeployer_$266",
                            "typeString": "contract IAlgebraPoolDeployer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "746:22:26"
                  },
                  "scope": 1690,
                  "src": "709:60:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1477,
                    "nodeType": "StructuredDocumentation",
                    "src": "777:103:26",
                    "text": "@notice Updates the incentive maker\n @param _incentiveMaker The new incentive maker address"
                  },
                  "functionSelector": "779fa0c4",
                  "id": 1482,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setIncentiveMaker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "_incentiveMaker",
                        "nodeType": "VariableDeclaration",
                        "scope": 1482,
                        "src": "913:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "913:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "912:25:26"
                  },
                  "returnParameters": {
                    "id": 1481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "946:0:26"
                  },
                  "scope": 1690,
                  "src": "886:61:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "IAlgebraFarming.Tiers",
                  "id": 1495,
                  "members": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "tokenAmountForTier1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "1025:27:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1025:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1486,
                      "mutability": "mutable",
                      "name": "tokenAmountForTier2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "1063:27:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1063:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1488,
                      "mutability": "mutable",
                      "name": "tokenAmountForTier3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "1101:27:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1101:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1490,
                      "mutability": "mutable",
                      "name": "tier1Multiplier",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "1161:22:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1489,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1161:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1492,
                      "mutability": "mutable",
                      "name": "tier2Multiplier",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "1194:22:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1491,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1194:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1494,
                      "mutability": "mutable",
                      "name": "tier3Multiplier",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "1227:22:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1493,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1227:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Tiers",
                  "nodeType": "StructDefinition",
                  "scope": 1690,
                  "src": "955:302:26",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 1496,
                    "nodeType": "StructuredDocumentation",
                    "src": "1265:123:26",
                    "text": "@notice Represents a farming incentive\n @param incentiveId The ID of the incentive computed from its parameters"
                  },
                  "functionSelector": "60777795",
                  "id": 1515,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "incentives",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1414:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1414:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1413:21:26"
                  },
                  "returnParameters": {
                    "id": 1514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1501,
                        "mutability": "mutable",
                        "name": "totalReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1499:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1500,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1503,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1533:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1533:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1505,
                        "mutability": "mutable",
                        "name": "virtualPoolAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1567:26:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1507,
                        "mutability": "mutable",
                        "name": "minimalPositionWidth",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1608:27:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 1506,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1608:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1509,
                        "mutability": "mutable",
                        "name": "totalLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1650:22:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 1508,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "1650:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1511,
                        "mutability": "mutable",
                        "name": "multiplierToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1687:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1510,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1687:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1513,
                        "mutability": "mutable",
                        "name": "tiers",
                        "nodeType": "VariableDeclaration",
                        "scope": 1515,
                        "src": "1725:18:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tiers_$1495_memory_ptr",
                          "typeString": "struct IAlgebraFarming.Tiers"
                        },
                        "typeName": {
                          "id": 1512,
                          "name": "Tiers",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1495,
                          "src": "1725:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tiers_$1495_storage_ptr",
                            "typeString": "struct IAlgebraFarming.Tiers"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1484:270:26"
                  },
                  "scope": 1690,
                  "src": "1394:361:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1516,
                    "nodeType": "StructuredDocumentation",
                    "src": "1763:87:26",
                    "text": "@notice Detach incentive from the pool\n @param key The key of the incentive"
                  },
                  "functionSelector": "3ee0dd02",
                  "id": 1521,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "detachIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1518,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1521,
                        "src": "1881:23:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1517,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "1881:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1880:25:26"
                  },
                  "returnParameters": {
                    "id": 1520,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1914:0:26"
                  },
                  "scope": 1690,
                  "src": "1856:59:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1522,
                    "nodeType": "StructuredDocumentation",
                    "src": "1923:85:26",
                    "text": "@notice Attach incentive to the pool\n @param key The key of the incentive"
                  },
                  "functionSelector": "6394adbb",
                  "id": 1527,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "attachIncentive",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1524,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1527,
                        "src": "2039:23:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1523,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "2039:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2038:25:26"
                  },
                  "returnParameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2072:0:26"
                  },
                  "scope": 1690,
                  "src": "2014:59:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1528,
                    "nodeType": "StructuredDocumentation",
                    "src": "2081:337:26",
                    "text": "@notice Returns amounts of reward tokens owed to a given address according to the last time all farms were updated\n @param owner The owner for which the rewards owed are checked\n @param rewardToken The token for which to check rewards\n @return rewardsOwed The amount of the reward token claimable by the owner"
                  },
                  "functionSelector": "e70b9e27",
                  "id": 1537,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1530,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "2441:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1532,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "2456:25:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "2456:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2440:42:26"
                  },
                  "returnParameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "rewardsOwed",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "2506:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2506:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2505:21:26"
                  },
                  "scope": 1690,
                  "src": "2424:103:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1538,
                    "nodeType": "StructuredDocumentation",
                    "src": "2535:113:26",
                    "text": "@notice Updates farming center address\n @param _farmingCenter The new farming center contract address"
                  },
                  "functionSelector": "df42efda",
                  "id": 1543,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFarmingCenterAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1540,
                        "mutability": "mutable",
                        "name": "_farmingCenter",
                        "nodeType": "VariableDeclaration",
                        "scope": 1543,
                        "src": "2687:22:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2687:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2686:24:26"
                  },
                  "returnParameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2719:0:26"
                  },
                  "scope": 1690,
                  "src": "2654:66:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1544,
                    "nodeType": "StructuredDocumentation",
                    "src": "2728:251:26",
                    "text": "@notice enter farming for Algebra LP token\n @param key The key of the incentive for which to enterFarming the NFT\n @param tokenId The ID of the token to exitFarming\n @param tokensLocked The amount of tokens locked for boost"
                  },
                  "functionSelector": "f43930a3",
                  "id": 1553,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "enterFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1553,
                        "src": "3017:23:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "3017:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1553,
                        "src": "3051:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3051:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1550,
                        "mutability": "mutable",
                        "name": "tokensLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 1553,
                        "src": "3077:20:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3077:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3006:98:26"
                  },
                  "returnParameters": {
                    "id": 1552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3113:0:26"
                  },
                  "scope": 1690,
                  "src": "2985:129:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1554,
                    "nodeType": "StructuredDocumentation",
                    "src": "3122:224:26",
                    "text": "@notice exitFarmings for Algebra LP token\n @param key The key of the incentive for which to exitFarming the NFT\n @param tokenId The ID of the token to exitFarming\n @param _owner Owner of the token"
                  },
                  "functionSelector": "0705506b",
                  "id": 1563,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exitFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1556,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1563,
                        "src": "3383:23:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1555,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "3383:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1558,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1563,
                        "src": "3417:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3417:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1560,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1563,
                        "src": "3443:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3443:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3372:92:26"
                  },
                  "returnParameters": {
                    "id": 1562,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3473:0:26"
                  },
                  "scope": 1690,
                  "src": "3352:122:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1564,
                    "nodeType": "StructuredDocumentation",
                    "src": "3482:420:26",
                    "text": "@notice Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\n @param rewardToken The token being distributed as a reward\n @param to The address where claimed rewards will be sent to\n @param amountRequested The amount of reward tokens to claim. Claims entire reward amount if set to 0.\n @return reward The amount of reward tokens claimed"
                  },
                  "functionSelector": "2f2d783d",
                  "id": 1575,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1571,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1566,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "3939:25:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1565,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "3939:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1568,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "3975:10:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1570,
                        "mutability": "mutable",
                        "name": "amountRequested",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "3996:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1569,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3928:98:26"
                  },
                  "returnParameters": {
                    "id": 1574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1573,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1575,
                        "src": "4045:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1572,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4045:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4044:16:26"
                  },
                  "scope": 1690,
                  "src": "3908:153:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1576,
                    "nodeType": "StructuredDocumentation",
                    "src": "4069:511:26",
                    "text": "@notice Transfers `amountRequested` of accrued `rewardToken` rewards from the contract to the recipient `to`\n @notice only for FarmingCenter\n @param rewardToken The token being distributed as a reward\n @param from The address of position owner\n @param to The address where claimed rewards will be sent to\n @param amountRequested The amount of reward tokens to claim. Claims entire reward amount if set to 0.\n @return reward The amount of reward tokens claimed"
                  },
                  "functionSelector": "0a530754",
                  "id": 1589,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimRewardFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1578,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "4621:25:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1577,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "4621:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "4657:12:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4657:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1582,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "4680:10:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4680:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1584,
                        "mutability": "mutable",
                        "name": "amountRequested",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "4701:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4701:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4610:121:26"
                  },
                  "returnParameters": {
                    "id": 1588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1587,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1589,
                        "src": "4750:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4750:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4749:16:26"
                  },
                  "scope": 1690,
                  "src": "4586:180:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1590,
                    "nodeType": "StructuredDocumentation",
                    "src": "4774:355:26",
                    "text": "@notice Calculates the reward amount that will be received for the given farm\n @param key The key of the incentive\n @param tokenId The ID of the token\n @return reward The reward accrued to the NFT for the given incentive thus far\n @return bonusReward The bonus reward accrued to the NFT for the given incentive thus far"
                  },
                  "functionSelector": "704972f4",
                  "id": 1601,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRewardInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1601,
                        "src": "5158:23:26",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "5158:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1594,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1601,
                        "src": "5183:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5183:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5157:42:26"
                  },
                  "returnParameters": {
                    "id": 1600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1597,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1601,
                        "src": "5236:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1596,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5236:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1599,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1601,
                        "src": "5252:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5252:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5235:37:26"
                  },
                  "scope": 1690,
                  "src": "5135:138:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1602,
                    "nodeType": "StructuredDocumentation",
                    "src": "5281:469:26",
                    "text": "@notice Event emitted when a liquidity mining incentive has been stopped from the outside\n @param rewardToken The token being distributed as a reward\n @param bonusRewardToken The token being distributed as a bonus reward\n @param pool The Algebra pool\n @param virtualPool The detached virtual pool address\n @param startTime The time when the incentive program begins\n @param endTime The time when rewards stop accruing"
                  },
                  "id": 1616,
                  "name": "IncentiveDetached",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1604,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "5790:33:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1603,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "5790:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1606,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bonusRewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "5834:38:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1605,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "5834:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1608,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "5883:25:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                          "typeString": "contract IAlgebraPool"
                        },
                        "typeName": {
                          "id": 1607,
                          "name": "IAlgebraPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 225,
                          "src": "5883:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                            "typeString": "contract IAlgebraPool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1610,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "5919:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5919:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1612,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "5949:17:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5949:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1614,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "5977:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5977:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5779:220:26"
                  },
                  "src": "5756:244:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1617,
                    "nodeType": "StructuredDocumentation",
                    "src": "6008:474:26",
                    "text": "@notice Event emitted when a liquidity mining incentive has been runned again from the outside\n @param rewardToken The token being distributed as a reward\n @param bonusRewardToken The token being distributed as a bonus reward\n @param pool The Algebra pool\n @param virtualPool The attached virtual pool address\n @param startTime The time when the incentive program begins\n @param endTime The time when rewards stop accruing"
                  },
                  "id": 1631,
                  "name": "IncentiveAttached",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6522:33:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "6522:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1621,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bonusRewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6566:38:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1620,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "6566:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1623,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6615:25:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                          "typeString": "contract IAlgebraPool"
                        },
                        "typeName": {
                          "id": 1622,
                          "name": "IAlgebraPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 225,
                          "src": "6615:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                            "typeString": "contract IAlgebraPool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1625,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6651:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6651:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6681:17:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6681:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1629,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6709:15:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6709:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6511:220:26"
                  },
                  "src": "6488:244:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1632,
                    "nodeType": "StructuredDocumentation",
                    "src": "6740:333:26",
                    "text": "@notice Event emitted when a Algebra LP token has been farmd\n @param tokenId The unique identifier of an Algebra LP token\n @param incentiveId The incentive in which the token is farming\n @param liquidity The amount of liquidity farmd\n @param tokensLocked The amount of tokens locked for multiplier"
                  },
                  "id": 1642,
                  "name": "FarmEntered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1634,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1642,
                        "src": "7097:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1633,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7097:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1636,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1642,
                        "src": "7122:27:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1635,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7122:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1638,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1642,
                        "src": "7151:17:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1637,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7151:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1640,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokensLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 1642,
                        "src": "7170:20:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7170:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7096:95:26"
                  },
                  "src": "7079:113:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1643,
                    "nodeType": "StructuredDocumentation",
                    "src": "7200:579:26",
                    "text": "@notice Event emitted when a Algebra LP token has been exitFarmingd\n @param tokenId The unique identifier of an Algebra LP token\n @param incentiveId The incentive in which the token is farming\n @param rewardAddress The token being distributed as a reward\n @param bonusRewardToken The token being distributed as a bonus reward\n @param owner The address where claimed rewards were sent to\n @param reward The amount of reward tokens to be distributed\n @param bonusReward The amount of bonus reward tokens to be distributed"
                  },
                  "id": 1659,
                  "name": "FarmEnded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1645,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "7811:23:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7811:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1647,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "7845:27:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1646,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7845:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1649,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "7883:29:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7883:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1651,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusRewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "7923:24:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1650,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7923:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1653,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "7958:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7958:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1655,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "7982:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7982:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1657,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "8007:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8007:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7800:233:26"
                  },
                  "src": "7785:249:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1660,
                    "nodeType": "StructuredDocumentation",
                    "src": "8042:136:26",
                    "text": "@notice Emitted when the incentive maker is changed\n @param incentiveMaker The incentive maker after the address was changed"
                  },
                  "id": 1664,
                  "name": "IncentiveMaker",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1662,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "incentiveMaker",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "8205:30:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1661,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8205:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8204:32:26"
                  },
                  "src": "8184:53:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1665,
                    "nodeType": "StructuredDocumentation",
                    "src": "8245:133:26",
                    "text": "@notice Emitted when the farming center is changed\n @param farmingCenter The farming center after the address was changed"
                  },
                  "id": 1669,
                  "name": "FarmingCenter",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1667,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "farmingCenter",
                        "nodeType": "VariableDeclaration",
                        "scope": 1669,
                        "src": "8404:29:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8404:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8403:31:26"
                  },
                  "src": "8384:51:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1670,
                    "nodeType": "StructuredDocumentation",
                    "src": "8443:266:26",
                    "text": "@notice Event emitted when rewards were added\n @param rewardAmount The additional amount of main token\n @param bonusRewardAmount The additional amount of bonus token\n @param incentiveId The ID of the incentive for which rewards were added"
                  },
                  "id": 1678,
                  "name": "RewardsAdded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1672,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "8734:20:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8734:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1674,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusRewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "8756:25:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8756:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1676,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "8783:19:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1675,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8783:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8733:70:26"
                  },
                  "src": "8715:89:26"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1679,
                    "nodeType": "StructuredDocumentation",
                    "src": "8812:311:26",
                    "text": "@notice Event emitted when a reward token has been claimed\n @param to The address where claimed rewards were sent to\n @param reward The amount of reward tokens claimed\n @param rewardAddress The token reward address\n @param owner The address where claimed rewards were sent to"
                  },
                  "id": 1689,
                  "name": "RewardClaimed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1681,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "9149:18:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9149:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1683,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "9169:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9169:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1685,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "9185:29:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9185:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1687,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "9216:21:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9216:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9148:90:26"
                  },
                  "src": "9129:110:26"
                }
              ],
              "scope": 1691,
              "src": "427:8815:26"
            }
          ],
          "src": "46:9198:26"
        },
        "id": 26
      },
      "contracts/tokenomics/IFarmingCenter.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/IFarmingCenter.sol",
          "exportedSymbols": {
            "IAlgebraEternalFarming": [
              2120
            ],
            "IAlgebraFarming": [
              1690
            ],
            "IAlgebraLimitFarming": [
              2260
            ],
            "IAlgebraPool": [
              225
            ],
            "IAlgebraPoolActions": [
              649
            ],
            "IAlgebraPoolDeployer": [
              266
            ],
            "IAlgebraPoolDerivedState": [
              686
            ],
            "IAlgebraPoolEvents": [
              798
            ],
            "IAlgebraPoolImmutables": [
              839
            ],
            "IAlgebraPoolPermissionedActions": [
              863
            ],
            "IAlgebraPoolState": [
              983
            ],
            "IAlgebraVirtualPool": [
              289
            ],
            "IDataStorageOperator": [
              463
            ],
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              535
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ],
            "IERC721Metadata": [
              185
            ],
            "IERC721Permit": [
              1018
            ],
            "IERC721Receiver": [
              203
            ],
            "IFarmingCenter": [
              1862
            ],
            "IFarmingCenterVault": [
              1899
            ],
            "IIncentiveKey": [
              1915
            ],
            "IMulticall": [
              1033
            ],
            "INonfungiblePositionManager": [
              1227
            ],
            "IPeripheryImmutableState": [
              1264
            ],
            "IPeripheryPayments": [
              1290
            ],
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 1863,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1692,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:27"
            },
            {
              "id": 1693,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "58:19:27"
            },
            {
              "absolutePath": "contracts/core/IAlgebraPool.sol",
              "file": "../core/IAlgebraPool.sol",
              "id": 1694,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 226,
              "src": "81:34:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/IAlgebraVirtualPool.sol",
              "file": "../core/IAlgebraVirtualPool.sol",
              "id": 1695,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 290,
              "src": "117:41:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/IERC20Minimal.sol",
              "file": "../core/IERC20Minimal.sol",
              "id": 1696,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 536,
              "src": "160:35:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IMulticall.sol",
              "file": "../periphery/IMulticall.sol",
              "id": 1697,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 1034,
              "src": "199:37:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/INonfungiblePositionManager.sol",
              "file": "../periphery/INonfungiblePositionManager.sol",
              "id": 1698,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 1228,
              "src": "238:54:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/periphery/IPeripheryPayments.sol",
              "file": "../periphery/IPeripheryPayments.sol",
              "id": 1699,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 1291,
              "src": "296:45:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "id": 1700,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 204,
              "src": "345:66:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitFarming.sol",
              "file": "./farmings/limitFarming/IAlgebraLimitFarming.sol",
              "id": 1701,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 2261,
              "src": "415:58:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalFarming.sol",
              "file": "./farmings/eternalFarming/IAlgebraEternalFarming.sol",
              "id": 1702,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 2121,
              "src": "475:62:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/tokenomics/IFarmingCenterVault.sol",
              "file": "./IFarmingCenterVault.sol",
              "id": 1703,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 1900,
              "src": "539:35:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/tokenomics/IIncentiveKey.sol",
              "file": "./IIncentiveKey.sol",
              "id": 1704,
              "nodeType": "ImportDirective",
              "scope": 1863,
              "sourceUnit": 1916,
              "src": "576:29:27",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1705,
                    "name": "IAlgebraVirtualPool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 289,
                    "src": "642:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraVirtualPool_$289",
                      "typeString": "contract IAlgebraVirtualPool"
                    }
                  },
                  "id": 1706,
                  "nodeType": "InheritanceSpecifier",
                  "src": "642:19:27"
                },
                {
                  "baseName": {
                    "id": 1707,
                    "name": "IERC721Receiver",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 203,
                    "src": "668:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Receiver_$203",
                      "typeString": "contract IERC721Receiver"
                    }
                  },
                  "id": 1708,
                  "nodeType": "InheritanceSpecifier",
                  "src": "668:15:27"
                },
                {
                  "baseName": {
                    "id": 1709,
                    "name": "IIncentiveKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1915,
                    "src": "690:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIncentiveKey_$1915",
                      "typeString": "contract IIncentiveKey"
                    }
                  },
                  "id": 1710,
                  "nodeType": "InheritanceSpecifier",
                  "src": "690:13:27"
                },
                {
                  "baseName": {
                    "id": 1711,
                    "name": "IMulticall",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1033,
                    "src": "710:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMulticall_$1033",
                      "typeString": "contract IMulticall"
                    }
                  },
                  "id": 1712,
                  "nodeType": "InheritanceSpecifier",
                  "src": "710:10:27"
                },
                {
                  "baseName": {
                    "id": 1713,
                    "name": "IERC721Permit",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1018,
                    "src": "727:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Permit_$1018",
                      "typeString": "contract IERC721Permit"
                    }
                  },
                  "id": 1714,
                  "nodeType": "InheritanceSpecifier",
                  "src": "727:13:27"
                },
                {
                  "baseName": {
                    "id": 1715,
                    "name": "IPeripheryPayments",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1290,
                    "src": "747:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPeripheryPayments_$1290",
                      "typeString": "contract IPeripheryPayments"
                    }
                  },
                  "id": 1716,
                  "nodeType": "InheritanceSpecifier",
                  "src": "747:18:27"
                }
              ],
              "contractDependencies": [
                11,
                127,
                203,
                289,
                1018,
                1033,
                1290,
                1915
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1862,
              "linearizedBaseContracts": [
                1862,
                1290,
                1018,
                127,
                11,
                1033,
                1915,
                203,
                289
              ],
              "name": "IFarmingCenter",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IFarmingCenter.VirtualPoolAddresses",
                  "id": 1721,
                  "members": [
                    {
                      "constant": false,
                      "id": 1718,
                      "mutability": "mutable",
                      "name": "eternalVirtualPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 1721,
                      "src": "813:26:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1717,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1720,
                      "mutability": "mutable",
                      "name": "limitVirtualPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 1721,
                      "src": "850:24:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1719,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "VirtualPoolAddresses",
                  "nodeType": "StructDefinition",
                  "scope": 1862,
                  "src": "774:108:27",
                  "visibility": "public"
                },
                {
                  "functionSelector": "32dc5a25",
                  "id": 1730,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "virtualPoolAddresses",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1723,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1730,
                        "src": "920:7:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "920:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "919:9:27"
                  },
                  "returnParameters": {
                    "id": 1729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1726,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1730,
                        "src": "952:7:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1728,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1730,
                        "src": "961:7:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1727,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "961:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "951:18:27"
                  },
                  "scope": 1862,
                  "src": "890:80:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1731,
                    "nodeType": "StructuredDocumentation",
                    "src": "978:91:27",
                    "text": "@notice The nonfungible position manager with which this farming contract is compatible"
                  },
                  "functionSelector": "b44a2722",
                  "id": 1736,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonfungiblePositionManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1732,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1110:2:27"
                  },
                  "returnParameters": {
                    "id": 1735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1734,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1736,
                        "src": "1136:27:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1227",
                          "typeString": "contract INonfungiblePositionManager"
                        },
                        "typeName": {
                          "id": 1733,
                          "name": "INonfungiblePositionManager",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1227,
                          "src": "1136:27:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INonfungiblePositionManager_$1227",
                            "typeString": "contract INonfungiblePositionManager"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1135:29:27"
                  },
                  "scope": 1862,
                  "src": "1075:90:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a5f6072f",
                  "id": 1741,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "limitFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1737,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1194:2:27"
                  },
                  "returnParameters": {
                    "id": 1740,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1741,
                        "src": "1220:20:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraLimitFarming_$2260",
                          "typeString": "contract IAlgebraLimitFarming"
                        },
                        "typeName": {
                          "id": 1738,
                          "name": "IAlgebraLimitFarming",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2260,
                          "src": "1220:20:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraLimitFarming_$2260",
                            "typeString": "contract IAlgebraLimitFarming"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1219:22:27"
                  },
                  "scope": 1862,
                  "src": "1173:69:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "de2356d1",
                  "id": 1746,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "eternalFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1273:2:27"
                  },
                  "returnParameters": {
                    "id": 1745,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1744,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1746,
                        "src": "1299:22:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraEternalFarming_$2120",
                          "typeString": "contract IAlgebraEternalFarming"
                        },
                        "typeName": {
                          "id": 1743,
                          "name": "IAlgebraEternalFarming",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2120,
                          "src": "1299:22:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraEternalFarming_$2120",
                            "typeString": "contract IAlgebraEternalFarming"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1298:24:27"
                  },
                  "scope": 1862,
                  "src": "1250:73:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9205ac2e",
                  "id": 1751,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "farmingCenterVault",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1358:2:27"
                  },
                  "returnParameters": {
                    "id": 1750,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1749,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1751,
                        "src": "1384:19:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFarmingCenterVault_$1899",
                          "typeString": "contract IFarmingCenterVault"
                        },
                        "typeName": {
                          "id": 1748,
                          "name": "IFarmingCenterVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1899,
                          "src": "1384:19:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFarmingCenterVault_$1899",
                            "typeString": "contract IFarmingCenterVault"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1383:21:27"
                  },
                  "scope": 1862,
                  "src": "1331:74:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "03a05df9",
                  "id": 1762,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "l2Nfts",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1754,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1753,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "1429:7:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1752,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1429:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1428:9:27"
                  },
                  "returnParameters": {
                    "id": 1761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1756,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "1502:12:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "typeName": {
                          "id": 1755,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1502:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1758,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "1529:16:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1529:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1760,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "1560:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1560:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1487:99:27"
                  },
                  "scope": 1862,
                  "src": "1413:174:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1763,
                    "nodeType": "StructuredDocumentation",
                    "src": "1595:344:27",
                    "text": "@notice Returns information about a deposited NFT\n @param tokenId The ID of the deposit (and token) that is being transferred\n @return L2TokenId The nft layer2 id,\n numberOfFarms The number of farms,\n inLimitFarming The parameter showing if the token is in the limit farm,\n owner The owner of deposit"
                  },
                  "functionSelector": "b02c43d0",
                  "id": 1776,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposits",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1766,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1765,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "1963:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1764,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1963:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1962:17:27"
                  },
                  "returnParameters": {
                    "id": 1775,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1768,
                        "mutability": "mutable",
                        "name": "L2TokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "2044:17:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2044:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1770,
                        "mutability": "mutable",
                        "name": "numberOfFarms",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "2076:20:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1769,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2076:6:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1772,
                        "mutability": "mutable",
                        "name": "inLimitFarming",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "2111:19:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1771,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1774,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1776,
                        "src": "2145:13:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1773,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2145:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2029:140:27"
                  },
                  "scope": 1862,
                  "src": "1945:225:27",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1777,
                    "nodeType": "StructuredDocumentation",
                    "src": "2178:215:27",
                    "text": "@notice Updates activeIncentive in AlgebraPool\n @dev only farming can do it\n @param pool The AlgebraPool for which farming was created\n @param virtualPool The virtual pool to be connected"
                  },
                  "functionSelector": "d8a900b1",
                  "id": 1784,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "connectVirtualPool",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1779,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "2427:17:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                          "typeString": "contract IAlgebraPool"
                        },
                        "typeName": {
                          "id": 1778,
                          "name": "IAlgebraPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 225,
                          "src": "2427:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                            "typeString": "contract IAlgebraPool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "2446:19:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2426:40:27"
                  },
                  "returnParameters": {
                    "id": 1783,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2475:0:27"
                  },
                  "scope": 1862,
                  "src": "2399:77:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1785,
                    "nodeType": "StructuredDocumentation",
                    "src": "2484:395:27",
                    "text": "@notice Enters in incentive (time-limited or eternal farming) with NFT-position token\n @dev token must be deposited in FarmingCenter\n @param key The incentive event key\n @param tokenId The id of position NFT\n @param tokensLocked Amount of tokens to lock for liquidity multiplier (if tiers are used)\n @param isLimit Is incentive time-limited or eternal"
                  },
                  "functionSelector": "22872ce2",
                  "id": 1796,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "enterFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1787,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1796,
                        "src": "2917:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1786,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "2917:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1789,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1796,
                        "src": "2951:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1788,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2951:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1791,
                        "mutability": "mutable",
                        "name": "tokensLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 1796,
                        "src": "2977:20:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1790,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2977:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1793,
                        "mutability": "mutable",
                        "name": "isLimit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1796,
                        "src": "3008:12:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1792,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3008:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2906:121:27"
                  },
                  "returnParameters": {
                    "id": 1795,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3036:0:27"
                  },
                  "scope": 1862,
                  "src": "2885:152:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1797,
                    "nodeType": "StructuredDocumentation",
                    "src": "3045:242:27",
                    "text": "@notice Exits from incentive (time-limited or eternal farming) with NFT-position token\n @param key The incentive event key\n @param tokenId The id of position NFT\n @param isLimit Is incentive time-limited or eternal"
                  },
                  "functionSelector": "34267cbc",
                  "id": 1806,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exitFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1799,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1806,
                        "src": "3324:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "3324:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1801,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1806,
                        "src": "3358:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3358:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "isLimit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1806,
                        "src": "3384:12:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1802,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:90:27"
                  },
                  "returnParameters": {
                    "id": 1805,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3412:0:27"
                  },
                  "scope": 1862,
                  "src": "3293:120:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1807,
                    "nodeType": "StructuredDocumentation",
                    "src": "3421:549:27",
                    "text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @dev \"proxies\" to NonfungiblePositionManager\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
                  },
                  "functionSelector": "fc6f7865",
                  "id": 1816,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collect",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1809,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "3993:57:27",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$1210_calldata_ptr",
                          "typeString": "struct INonfungiblePositionManager.CollectParams"
                        },
                        "typeName": {
                          "id": 1808,
                          "name": "INonfungiblePositionManager.CollectParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1210,
                          "src": "3993:41:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectParams_$1210_storage_ptr",
                            "typeString": "struct INonfungiblePositionManager.CollectParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3992:59:27"
                  },
                  "returnParameters": {
                    "id": 1815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1812,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "4088:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4088:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1814,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "4105:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4105:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4087:34:27"
                  },
                  "scope": 1862,
                  "src": "3976:146:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1817,
                    "nodeType": "StructuredDocumentation",
                    "src": "4130:297:27",
                    "text": "@notice Used to collect reward from eternal farming. Then reward can be claimed.\n @param key The incentive event key\n @param tokenId The id of position NFT\n @return reward The amount of collected reward\n @return bonusReward The amount of collected  bonus reward"
                  },
                  "functionSelector": "3e785878",
                  "id": 1828,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collectRewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1822,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1819,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 1828,
                        "src": "4457:23:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "4457:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1821,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1828,
                        "src": "4482:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4482:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4456:42:27"
                  },
                  "returnParameters": {
                    "id": 1827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1824,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1828,
                        "src": "4535:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4535:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1826,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1828,
                        "src": "4551:19:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1825,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4551:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4534:37:27"
                  },
                  "scope": 1862,
                  "src": "4433:139:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1829,
                    "nodeType": "StructuredDocumentation",
                    "src": "4580:455:27",
                    "text": "@notice Used to claim and send rewards from farming(s)\n @dev can be used via static call to get current rewards for user\n @param rewardToken The token that is a reward\n @param to The address to be rewarded\n @param amountRequestedIncentive Amount to claim in incentive (limit) farming\n @param amountRequestedEternal Amount to claim in eternal farming\n @return reward The summary amount of claimed rewards"
                  },
                  "functionSelector": "fd188ca4",
                  "id": 1842,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimReward",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1838,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1831,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5072:25:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 1830,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "5072:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1833,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5108:10:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5108:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1835,
                        "mutability": "mutable",
                        "name": "amountRequestedIncentive",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5129:32:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1834,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5129:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1837,
                        "mutability": "mutable",
                        "name": "amountRequestedEternal",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5172:30:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1836,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5172:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5061:148:27"
                  },
                  "returnParameters": {
                    "id": 1841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1840,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5228:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5228:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5227:16:27"
                  },
                  "scope": 1862,
                  "src": "5041:203:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1843,
                    "nodeType": "StructuredDocumentation",
                    "src": "5252:285:27",
                    "text": "@notice Withdraw Algebra NFT-position token\n @dev can be used via static call to get current rewards for user\n @param tokenId The id of position NFT\n @param to New owner of position NFT\n @param data The additional data for NonfungiblePositionManager"
                  },
                  "functionSelector": "3c423f0b",
                  "id": 1852,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1852,
                        "src": "5576:15:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1844,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5576:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1847,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1852,
                        "src": "5602:10:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5602:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1849,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1852,
                        "src": "5623:17:27",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5623:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5565:82:27"
                  },
                  "returnParameters": {
                    "id": 1851,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5656:0:27"
                  },
                  "scope": 1862,
                  "src": "5543:114:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1853,
                    "nodeType": "StructuredDocumentation",
                    "src": "5665:278:27",
                    "text": "@notice Emitted when ownership of a deposit changes\n @param tokenId The ID of the deposit (and token) that is being transferred\n @param oldOwner The owner before the deposit was transferred\n @param newOwner The owner after the deposit was transferred"
                  },
                  "id": 1861,
                  "name": "DepositTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1855,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "5974:23:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5974:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1857,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "5999:24:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5999:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1859,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1861,
                        "src": "6025:24:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1858,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6025:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5973:77:27"
                  },
                  "src": "5949:102:27"
                }
              ],
              "scope": 1863,
              "src": "609:5445:27"
            }
          ],
          "src": "33:6023:27"
        },
        "id": 27
      },
      "contracts/tokenomics/IFarmingCenterVault.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/IFarmingCenterVault.sol",
          "exportedSymbols": {
            "IFarmingCenterVault": [
              1899
            ]
          },
          "id": 1900,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1864,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:22:28"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1899,
              "linearizedBaseContracts": [
                1899
              ],
              "name": "IFarmingCenterVault",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "92ae44e1",
                  "id": 1875,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1866,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "140:13:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1868,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "164:10:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1867,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "164:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1870,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "185:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1869,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1872,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "211:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1871,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "211:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "129:108:28"
                  },
                  "returnParameters": {
                    "id": 1874,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "246:0:28"
                  },
                  "scope": 1899,
                  "src": "109:138:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4d10862d",
                  "id": 1880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFarmingCenter",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1877,
                        "mutability": "mutable",
                        "name": "farming",
                        "nodeType": "VariableDeclaration",
                        "scope": 1880,
                        "src": "281:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1876,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "281:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "280:17:28"
                  },
                  "returnParameters": {
                    "id": 1879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "306:0:28"
                  },
                  "scope": 1899,
                  "src": "255:52:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2113e817",
                  "id": 1889,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lockTokens",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1882,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1889,
                        "src": "345:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "345:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1884,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1889,
                        "src": "371:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1883,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "371:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1886,
                        "mutability": "mutable",
                        "name": "tokenAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1889,
                        "src": "401:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "401:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "334:93:28"
                  },
                  "returnParameters": {
                    "id": 1888,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "436:0:28"
                  },
                  "scope": 1899,
                  "src": "315:122:28",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b84ffe39",
                  "id": 1898,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balances",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1891,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1898,
                        "src": "463:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1890,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1893,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1898,
                        "src": "480:19:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1892,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "480:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "462:38:28"
                  },
                  "returnParameters": {
                    "id": 1897,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1896,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1898,
                        "src": "524:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "524:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "523:17:28"
                  },
                  "scope": 1899,
                  "src": "445:96:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1900,
              "src": "72:472:28"
            }
          ],
          "src": "46:500:28"
        },
        "id": 28
      },
      "contracts/tokenomics/IIncentiveKey.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/IIncentiveKey.sol",
          "exportedSymbols": {
            "IAlgebraPool": [
              225
            ],
            "IAlgebraPoolActions": [
              649
            ],
            "IAlgebraPoolDerivedState": [
              686
            ],
            "IAlgebraPoolEvents": [
              798
            ],
            "IAlgebraPoolImmutables": [
              839
            ],
            "IAlgebraPoolPermissionedActions": [
              863
            ],
            "IAlgebraPoolState": [
              983
            ],
            "IDataStorageOperator": [
              463
            ],
            "IERC20Minimal": [
              535
            ],
            "IIncentiveKey": [
              1915
            ]
          },
          "id": 1916,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1901,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:29"
            },
            {
              "absolutePath": "contracts/core/IERC20Minimal.sol",
              "file": "../core/IERC20Minimal.sol",
              "id": 1902,
              "nodeType": "ImportDirective",
              "scope": 1916,
              "sourceUnit": 536,
              "src": "73:35:29",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/IAlgebraPool.sol",
              "file": "../core/IAlgebraPool.sol",
              "id": 1903,
              "nodeType": "ImportDirective",
              "scope": 1916,
              "sourceUnit": 226,
              "src": "110:34:29",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1915,
              "linearizedBaseContracts": [
                1915
              ],
              "name": "IIncentiveKey",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IIncentiveKey.IncentiveKey",
                  "id": 1914,
                  "members": [
                    {
                      "constant": false,
                      "id": 1905,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1914,
                      "src": "524:25:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                        "typeString": "contract IERC20Minimal"
                      },
                      "typeName": {
                        "id": 1904,
                        "name": "IERC20Minimal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 535,
                        "src": "524:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1907,
                      "mutability": "mutable",
                      "name": "bonusRewardToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1914,
                      "src": "560:30:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                        "typeString": "contract IERC20Minimal"
                      },
                      "typeName": {
                        "id": 1906,
                        "name": "IERC20Minimal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 535,
                        "src": "560:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1909,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 1914,
                      "src": "601:17:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                        "typeString": "contract IAlgebraPool"
                      },
                      "typeName": {
                        "id": 1908,
                        "name": "IAlgebraPool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 225,
                        "src": "601:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                          "typeString": "contract IAlgebraPool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1911,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 1914,
                      "src": "629:17:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1910,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "629:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1913,
                      "mutability": "mutable",
                      "name": "endTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 1914,
                      "src": "657:15:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "657:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IncentiveKey",
                  "nodeType": "StructDefinition",
                  "scope": 1915,
                  "src": "493:187:29",
                  "visibility": "public"
                }
              ],
              "scope": 1916,
              "src": "148:535:29"
            }
          ],
          "src": "46:639:29"
        },
        "id": 29
      },
      "contracts/tokenomics/farmings/IAlgebraVirtualPoolBase.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/farmings/IAlgebraVirtualPoolBase.sol",
          "exportedSymbols": {
            "IAlgebraVirtualPool": [
              289
            ],
            "IAlgebraVirtualPoolBase": [
              1993
            ]
          },
          "id": 1994,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1917,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:30"
            },
            {
              "id": 1918,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "71:19:30"
            },
            {
              "absolutePath": "contracts/core/IAlgebraVirtualPool.sol",
              "file": "../../core/IAlgebraVirtualPool.sol",
              "id": 1919,
              "nodeType": "ImportDirective",
              "scope": 1994,
              "sourceUnit": 290,
              "src": "94:44:30",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1921,
                    "name": "IAlgebraVirtualPool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 289,
                    "src": "224:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraVirtualPool_$289",
                      "typeString": "contract IAlgebraVirtualPool"
                    }
                  },
                  "id": 1922,
                  "nodeType": "InheritanceSpecifier",
                  "src": "224:19:30"
                }
              ],
              "contractDependencies": [
                289
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1920,
                "nodeType": "StructuredDocumentation",
                "src": "142:45:30",
                "text": "@title Base interface for virtual pools"
              },
              "fullyImplemented": false,
              "id": 1993,
              "linearizedBaseContracts": [
                1993,
                289
              ],
              "name": "IAlgebraVirtualPoolBase",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8eebc5d6",
                  "id": 1927,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "timeOutside",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1923,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "342:2:30"
                  },
                  "returnParameters": {
                    "id": 1926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1925,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1927,
                        "src": "368:6:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1924,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "368:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "367:8:30"
                  },
                  "scope": 1993,
                  "src": "322:54:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f30dba93",
                  "id": 1948,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ticks",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1929,
                        "mutability": "mutable",
                        "name": "tickId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "443:12:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1928,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "443:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "442:14:30"
                  },
                  "returnParameters": {
                    "id": 1947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1932,
                        "mutability": "mutable",
                        "name": "liquidityTotal",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "521:22:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1931,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1934,
                        "mutability": "mutable",
                        "name": "liquidityDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "558:21:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 1933,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1936,
                        "mutability": "mutable",
                        "name": "outerFeeGrowth0Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "594:28:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1935,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "594:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1938,
                        "mutability": "mutable",
                        "name": "outerFeeGrowth1Token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "637:28:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1940,
                        "mutability": "mutable",
                        "name": "outerTickCumulative",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "680:25:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "typeName": {
                          "id": 1939,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1942,
                        "mutability": "mutable",
                        "name": "outerSecondsPerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "720:32:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1941,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1944,
                        "mutability": "mutable",
                        "name": "outerSecondsSpent",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "767:24:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1943,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "767:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1946,
                        "mutability": "mutable",
                        "name": "initialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 1948,
                        "src": "806:16:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1945,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "806:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "506:327:30"
                  },
                  "scope": 1993,
                  "src": "428:406:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "46caf2ae",
                  "id": 1953,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "921:2:30"
                  },
                  "returnParameters": {
                    "id": 1952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1951,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1953,
                        "src": "947:7:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1950,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "946:9:30"
                  },
                  "scope": 1993,
                  "src": "896:60:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8e76c332",
                  "id": 1958,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "globalTick",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1954,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1032:2:30"
                  },
                  "returnParameters": {
                    "id": 1957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1956,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1958,
                        "src": "1058:5:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1955,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1058:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1057:7:30"
                  },
                  "scope": 1993,
                  "src": "1013:52:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ae855939",
                  "id": 1963,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "globalSecondsPerLiquidityCumulative",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1959,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1221:2:30"
                  },
                  "returnParameters": {
                    "id": 1962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1961,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1963,
                        "src": "1247:7:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1960,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:9:30"
                  },
                  "scope": 1993,
                  "src": "1177:79:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d576dfc0",
                  "id": 1968,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "prevTimestamp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1380:2:30"
                  },
                  "returnParameters": {
                    "id": 1967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1968,
                        "src": "1406:6:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1405:8:30"
                  },
                  "scope": 1993,
                  "src": "1358:56:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1969,
                    "nodeType": "StructuredDocumentation",
                    "src": "1422:299:30",
                    "text": "@notice This function is used to calculate the seconds per liquidity inside a certain position\n @param bottomTick The bottom tick of a position\n @param topTick The top tick of a position\n @return innerSecondsSpentPerLiquidity The seconds per liquidity inside the position"
                  },
                  "functionSelector": "1fcd27fd",
                  "id": 1978,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInnerSecondsPerLiquidity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1971,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "1764:16:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1970,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1764:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1973,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "1782:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1972,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1782:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1763:33:30"
                  },
                  "returnParameters": {
                    "id": 1977,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1976,
                        "mutability": "mutable",
                        "name": "innerSecondsSpentPerLiquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "1847:37:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 1975,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "1847:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1846:39:30"
                  },
                  "scope": 1993,
                  "src": "1727:159:30",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1979,
                    "nodeType": "StructuredDocumentation",
                    "src": "1894:451:30",
                    "text": " @dev This function is called when anyone farms their liquidity. The position in a virtual pool\n should be changed accordingly\n @param currentTimestamp The timestamp of current block\n @param bottomTick The bottom tick of a position\n @param topTick The top tick of a position\n @param liquidityDelta The amount of liquidity in a position\n @param currentTick The current tick in the main pool"
                  },
                  "functionSelector": "0f1019bc",
                  "id": 1992,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "applyLiquidityDeltaToPosition",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1981,
                        "mutability": "mutable",
                        "name": "currentTimestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "2400:23:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1980,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2400:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1983,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "2434:16:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1982,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2434:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1985,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "2461:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1984,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2461:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1987,
                        "mutability": "mutable",
                        "name": "liquidityDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "2485:21:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 1986,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2485:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1989,
                        "mutability": "mutable",
                        "name": "currentTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "2517:17:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 1988,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2517:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2389:152:30"
                  },
                  "returnParameters": {
                    "id": 1991,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2550:0:30"
                  },
                  "scope": 1993,
                  "src": "2351:200:30",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1994,
              "src": "187:2367:30"
            }
          ],
          "src": "46:2510:30"
        },
        "id": 30
      },
      "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalFarming.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalFarming.sol",
          "exportedSymbols": {
            "IAlgebraEternalFarming": [
              2120
            ],
            "IAlgebraFarming": [
              1690
            ],
            "IAlgebraPool": [
              225
            ],
            "IAlgebraPoolActions": [
              649
            ],
            "IAlgebraPoolDeployer": [
              266
            ],
            "IAlgebraPoolDerivedState": [
              686
            ],
            "IAlgebraPoolEvents": [
              798
            ],
            "IAlgebraPoolImmutables": [
              839
            ],
            "IAlgebraPoolPermissionedActions": [
              863
            ],
            "IAlgebraPoolState": [
              983
            ],
            "IDataStorageOperator": [
              463
            ],
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              535
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ],
            "IERC721Metadata": [
              185
            ],
            "IERC721Permit": [
              1018
            ],
            "IIncentiveKey": [
              1915
            ],
            "INonfungiblePositionManager": [
              1227
            ],
            "IPeripheryImmutableState": [
              1264
            ],
            "IPeripheryPayments": [
              1290
            ],
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 2121,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1995,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:31"
            },
            {
              "id": 1996,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "71:19:31"
            },
            {
              "absolutePath": "contracts/tokenomics/IAlgebraFarming.sol",
              "file": "../../IAlgebraFarming.sol",
              "id": 1997,
              "nodeType": "ImportDirective",
              "scope": 2121,
              "sourceUnit": 1691,
              "src": "92:35:31",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1999,
                    "name": "IAlgebraFarming",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1690,
                    "src": "339:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraFarming_$1690",
                      "typeString": "contract IAlgebraFarming"
                    }
                  },
                  "id": 2000,
                  "nodeType": "InheritanceSpecifier",
                  "src": "339:15:31"
                }
              ],
              "contractDependencies": [
                1690,
                1915
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1998,
                "nodeType": "StructuredDocumentation",
                "src": "131:172:31",
                "text": "@title Algebra Eternal Farming Interface\n @notice Allows farming nonfungible liquidity tokens in exchange for reward tokens without locking NFT for incentive time"
              },
              "fullyImplemented": false,
              "id": 2120,
              "linearizedBaseContracts": [
                2120,
                1690,
                1915
              ],
              "name": "IAlgebraEternalFarming",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IAlgebraEternalFarming.IncentiveParams",
                  "id": 2013,
                  "members": [
                    {
                      "constant": false,
                      "id": 2002,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 2013,
                      "src": "396:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2001,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "396:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2004,
                      "mutability": "mutable",
                      "name": "bonusReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 2013,
                      "src": "470:19:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2003,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "470:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2006,
                      "mutability": "mutable",
                      "name": "rewardRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2013,
                      "src": "555:18:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2005,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "555:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2008,
                      "mutability": "mutable",
                      "name": "bonusRewardRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2013,
                      "src": "630:23:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 2007,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "630:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2010,
                      "mutability": "mutable",
                      "name": "minimalPositionWidth",
                      "nodeType": "VariableDeclaration",
                      "scope": 2013,
                      "src": "716:27:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 2009,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "716:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2012,
                      "mutability": "mutable",
                      "name": "multiplierToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2013,
                      "src": "819:23:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2011,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "819:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IncentiveParams",
                  "nodeType": "StructDefinition",
                  "scope": 2120,
                  "src": "362:560:31",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2014,
                    "nodeType": "StructuredDocumentation",
                    "src": "930:293:31",
                    "text": "@notice Event emitted when reward rates were changed\n @param rewardRate The new rate of main token distribution per sec\n @param bonusRewardRate The new rate of bonus token distribution per sec\n @param incentiveId The ID of the incentive for which rates were changed"
                  },
                  "id": 2022,
                  "name": "RewardsRatesChanged",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2021,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2016,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1255:18:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2015,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2018,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusRewardRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1275:23:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2017,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2020,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1300:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2019,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1300:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1254:66:31"
                  },
                  "src": "1229:92:31"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2023,
                    "nodeType": "StructuredDocumentation",
                    "src": "1329:334:31",
                    "text": "@notice Event emitted when rewards were added\n @param tokenId The ID of the token for which rewards were collected\n @param incentiveId The ID of the incentive for which rewards were collected\n @param rewardAmount Collected amount of reward\n @param bonusRewardAmount Collected amount of bonus reward"
                  },
                  "id": 2033,
                  "name": "RewardsCollected",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2032,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2025,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "1692:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2024,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1692:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2027,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "1709:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2026,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1709:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2029,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "1730:20:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2028,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1730:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2031,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusRewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2033,
                        "src": "1752:25:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2030,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1752:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1691:87:31"
                  },
                  "src": "1669:110:31"
                },
                {
                  "documentation": {
                    "id": 2034,
                    "nodeType": "StructuredDocumentation",
                    "src": "1787:542:31",
                    "text": "@notice Returns information about a farmd liquidity NFT\n @param tokenId The ID of the farmd token\n @param incentiveId The ID of the incentive for which the token is farmd\n @return liquidity The amount of liquidity in the NFT as of the last time the rewards were computed,\n tickLower The lower tick of position,\n tickUpper The upper tick of position,\n innerRewardGrowth0 The last saved reward0 growth inside position,\n innerRewardGrowth1 The last saved reward1 growth inside position"
                  },
                  "functionSelector": "27e6a99a",
                  "id": 2051,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "farms",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2036,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2350:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2035,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2350:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2038,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2367:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2037,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2367:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2349:38:31"
                  },
                  "returnParameters": {
                    "id": 2050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2041,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2452:17:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2040,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2452:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2043,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2484:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2042,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2484:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2045,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2514:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2044,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "2514:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2047,
                        "mutability": "mutable",
                        "name": "innerRewardGrowth0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2544:26:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2544:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2049,
                        "mutability": "mutable",
                        "name": "innerRewardGrowth1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2051,
                        "src": "2585:26:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2585:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2437:185:31"
                  },
                  "scope": 2120,
                  "src": "2335:288:31",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2052,
                    "nodeType": "StructuredDocumentation",
                    "src": "2631:280:31",
                    "text": "@notice Creates a new liquidity mining incentive program\n @param key Details of the incentive to create\n @param params Params of incentive\n @param tiers The amounts of locked token for liquidity multipliers\n @return virtualPool The virtual pool"
                  },
                  "functionSelector": "b58a7239",
                  "id": 2063,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createEternalFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2054,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "2957:23:31",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2053,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "2957:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2056,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "2991:29:31",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveParams_$2013_memory_ptr",
                          "typeString": "struct IAlgebraEternalFarming.IncentiveParams"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "IncentiveParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2013,
                          "src": "2991:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveParams_$2013_storage_ptr",
                            "typeString": "struct IAlgebraEternalFarming.IncentiveParams"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "tiers",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "3031:20:31",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tiers_$1495_calldata_ptr",
                          "typeString": "struct IAlgebraFarming.Tiers"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "Tiers",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1495,
                          "src": "3031:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tiers_$1495_storage_ptr",
                            "typeString": "struct IAlgebraFarming.Tiers"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2946:112:31"
                  },
                  "returnParameters": {
                    "id": 2062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2061,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "3077:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3077:7:31",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3076:21:31"
                  },
                  "scope": 2120,
                  "src": "2917:181:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "826cc0a1",
                  "id": 2072,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2065,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "3136:23:31",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2064,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "3136:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2067,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "3170:20:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2066,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2069,
                        "mutability": "mutable",
                        "name": "bonusRewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "3201:25:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2068,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3201:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3125:108:31"
                  },
                  "returnParameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3242:0:31"
                  },
                  "scope": 2120,
                  "src": "3106:137:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "92aa2d89",
                  "id": 2081,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRates",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2074,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "3279:23:31",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2073,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "3279:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2076,
                        "mutability": "mutable",
                        "name": "rewardRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "3313:18:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2075,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2078,
                        "mutability": "mutable",
                        "name": "bonusRewardRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2081,
                        "src": "3342:23:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2077,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "3342:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3268:104:31"
                  },
                  "returnParameters": {
                    "id": 2080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3381:0:31"
                  },
                  "scope": 2120,
                  "src": "3251:131:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fe4282fb",
                  "id": 2094,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collectRewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2088,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3424:23:31",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "3424:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2085,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3458:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3458:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2087,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3484:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3484:7:31",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3413:92:31"
                  },
                  "returnParameters": {
                    "id": 2093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2090,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3524:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3524:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2092,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "3540:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3540:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3523:37:31"
                  },
                  "scope": 2120,
                  "src": "3390:171:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2095,
                    "nodeType": "StructuredDocumentation",
                    "src": "3569:872:31",
                    "text": "@notice Event emitted when a liquidity mining incentive has been created\n @param rewardToken The token being distributed as a reward\n @param bonusRewardToken The token being distributed as a bonus reward\n @param pool The Algebra pool\n @param virtualPool The virtual pool address\n @param startTime The time when the incentive program begins\n @param endTime The time when rewards stop accruing\n @param reward The amount of reward tokens to be distributed\n @param bonusReward The amount of bonus reward tokens to be distributed\n @param tiers The amounts of locked token for liquidity multipliers\n @param multiplierToken The address of token which can be locked to get liquidity multiplier\n @param minimalAllowedPositionWidth The minimal allowed position width (tickUpper - tickLower)"
                  },
                  "id": 2119,
                  "name": "EternalFarmingCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2097,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4485:33:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 2096,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "4485:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2099,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bonusRewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4529:38:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 2098,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "4529:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2101,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4578:25:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                          "typeString": "contract IAlgebraPool"
                        },
                        "typeName": {
                          "id": 2100,
                          "name": "IAlgebraPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 225,
                          "src": "4578:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                            "typeString": "contract IAlgebraPool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2103,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4614:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4614:7:31",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2105,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4644:17:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2107,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4672:15:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4672:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2109,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4698:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2108,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4698:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2111,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4723:19:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4723:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2113,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tiers",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4753:11:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tiers_$1495_memory_ptr",
                          "typeString": "struct IAlgebraFarming.Tiers"
                        },
                        "typeName": {
                          "id": 2112,
                          "name": "Tiers",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1495,
                          "src": "4753:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tiers_$1495_storage_ptr",
                            "typeString": "struct IAlgebraFarming.Tiers"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2115,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "multiplierToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4775:23:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4775:7:31",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2117,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "minimalAllowedPositionWidth",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4809:34:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 2116,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "4809:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4474:376:31"
                  },
                  "src": "4447:404:31"
                }
              ],
              "scope": 2121,
              "src": "303:4551:31"
            }
          ],
          "src": "46:4810:31"
        },
        "id": 31
      },
      "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalVirtualPool.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/farmings/eternalFarming/IAlgebraEternalVirtualPool.sol",
          "exportedSymbols": {
            "IAlgebraEternalVirtualPool": [
              2153
            ],
            "IAlgebraVirtualPool": [
              289
            ],
            "IAlgebraVirtualPoolBase": [
              1993
            ]
          },
          "id": 2154,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2122,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:32"
            },
            {
              "id": 2123,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "71:19:32"
            },
            {
              "absolutePath": "contracts/tokenomics/farmings/IAlgebraVirtualPoolBase.sol",
              "file": "../IAlgebraVirtualPoolBase.sol",
              "id": 2124,
              "nodeType": "ImportDirective",
              "scope": 2154,
              "sourceUnit": 1994,
              "src": "94:40:32",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2125,
                    "name": "IAlgebraVirtualPoolBase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1993,
                    "src": "178:23:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraVirtualPoolBase_$1993",
                      "typeString": "contract IAlgebraVirtualPoolBase"
                    }
                  },
                  "id": 2126,
                  "nodeType": "InheritanceSpecifier",
                  "src": "178:23:32"
                }
              ],
              "contractDependencies": [
                289,
                1993
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2153,
              "linearizedBaseContracts": [
                2153,
                1993,
                289
              ],
              "name": "IAlgebraEternalVirtualPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2127,
                    "nodeType": "StructuredDocumentation",
                    "src": "209:172:32",
                    "text": "@notice Change reward rates\n @param rate0 The new rate of main token distribution per sec\n @param rate1 The new rate of bonus token distribution per sec"
                  },
                  "functionSelector": "7f463bb8",
                  "id": 2134,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRates",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2129,
                        "mutability": "mutable",
                        "name": "rate0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2134,
                        "src": "405:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2128,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2131,
                        "mutability": "mutable",
                        "name": "rate1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2134,
                        "src": "420:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2130,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:30:32"
                  },
                  "returnParameters": {
                    "id": 2133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "443:0:32"
                  },
                  "scope": 2153,
                  "src": "387:57:32",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fc41aa09",
                  "id": 2141,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2136,
                        "mutability": "mutable",
                        "name": "token0Amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2141,
                        "src": "472:20:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "token1Amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2141,
                        "src": "494:20:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "494:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "471:44:32"
                  },
                  "returnParameters": {
                    "id": 2140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "524:0:32"
                  },
                  "scope": 2153,
                  "src": "452:73:32",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0bd6f200",
                  "id": 2152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInnerRewardsGrowth",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2143,
                        "mutability": "mutable",
                        "name": "bottomTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "564:16:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2142,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "564:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2145,
                        "mutability": "mutable",
                        "name": "topTick",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "582:13:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2144,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "582:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "563:33:32"
                  },
                  "returnParameters": {
                    "id": 2151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2148,
                        "mutability": "mutable",
                        "name": "rewardGrowthInside0",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "647:27:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2147,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "647:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2150,
                        "mutability": "mutable",
                        "name": "rewardGrowthInside1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2152,
                        "src": "676:27:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "676:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "646:58:32"
                  },
                  "scope": 2153,
                  "src": "533:172:32",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2154,
              "src": "138:570:32"
            }
          ],
          "src": "46:664:32"
        },
        "id": 32
      },
      "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitFarming.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitFarming.sol",
          "exportedSymbols": {
            "IAlgebraFarming": [
              1690
            ],
            "IAlgebraLimitFarming": [
              2260
            ],
            "IAlgebraPool": [
              225
            ],
            "IAlgebraPoolActions": [
              649
            ],
            "IAlgebraPoolDeployer": [
              266
            ],
            "IAlgebraPoolDerivedState": [
              686
            ],
            "IAlgebraPoolEvents": [
              798
            ],
            "IAlgebraPoolImmutables": [
              839
            ],
            "IAlgebraPoolPermissionedActions": [
              863
            ],
            "IAlgebraPoolState": [
              983
            ],
            "IDataStorageOperator": [
              463
            ],
            "IERC165": [
              11
            ],
            "IERC20Minimal": [
              535
            ],
            "IERC721": [
              127
            ],
            "IERC721Enumerable": [
              158
            ],
            "IERC721Metadata": [
              185
            ],
            "IERC721Permit": [
              1018
            ],
            "IIncentiveKey": [
              1915
            ],
            "INonfungiblePositionManager": [
              1227
            ],
            "IPeripheryImmutableState": [
              1264
            ],
            "IPeripheryPayments": [
              1290
            ],
            "IPoolInitializer": [
              1340
            ]
          },
          "id": 2261,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2155,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:33"
            },
            {
              "id": 2156,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "71:19:33"
            },
            {
              "absolutePath": "contracts/tokenomics/IAlgebraFarming.sol",
              "file": "../../IAlgebraFarming.sol",
              "id": 2157,
              "nodeType": "ImportDirective",
              "scope": 2261,
              "sourceUnit": 1691,
              "src": "94:35:33",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2159,
                    "name": "IAlgebraFarming",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1690,
                    "src": "292:15:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraFarming_$1690",
                      "typeString": "contract IAlgebraFarming"
                    }
                  },
                  "id": 2160,
                  "nodeType": "InheritanceSpecifier",
                  "src": "292:15:33"
                }
              ],
              "contractDependencies": [
                1690,
                1915
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 2158,
                "nodeType": "StructuredDocumentation",
                "src": "133:125:33",
                "text": "@title Algebra Farming Interface\n @notice Allows farming nonfungible liquidity tokens in exchange for reward tokens"
              },
              "fullyImplemented": false,
              "id": 2260,
              "linearizedBaseContracts": [
                2260,
                1690,
                1915
              ],
              "name": "IAlgebraLimitFarming",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IAlgebraLimitFarming.IncentiveParams",
                  "id": 2171,
                  "members": [
                    {
                      "constant": false,
                      "id": 2162,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 2171,
                      "src": "349:14:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "349:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2164,
                      "mutability": "mutable",
                      "name": "bonusReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 2171,
                      "src": "423:19:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "423:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2166,
                      "mutability": "mutable",
                      "name": "minimalPositionWidth",
                      "nodeType": "VariableDeclaration",
                      "scope": 2171,
                      "src": "508:27:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 2165,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "508:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2168,
                      "mutability": "mutable",
                      "name": "multiplierToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2171,
                      "src": "611:23:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2167,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "611:7:33",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2170,
                      "mutability": "mutable",
                      "name": "enterStartTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 2171,
                      "src": "717:21:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2169,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "717:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "IncentiveParams",
                  "nodeType": "StructDefinition",
                  "scope": 2260,
                  "src": "315:477:33",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2172,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:55:33",
                    "text": "@notice The max duration of an incentive in seconds"
                  },
                  "functionSelector": "3dc0714b",
                  "id": 2177,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxIncentiveDuration",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "890:2:33"
                  },
                  "returnParameters": {
                    "id": 2176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2175,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2177,
                        "src": "916:7:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "916:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "915:9:33"
                  },
                  "scope": 2260,
                  "src": "861:64:33",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2178,
                    "nodeType": "StructuredDocumentation",
                    "src": "933:88:33",
                    "text": "@notice The max amount of seconds into the future the incentive startTime can be set"
                  },
                  "functionSelector": "01b75440",
                  "id": 2183,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "maxIncentiveStartLeadTime",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1061:2:33"
                  },
                  "returnParameters": {
                    "id": 2182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2181,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2183,
                        "src": "1087:7:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1087:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1086:9:33"
                  },
                  "scope": 2260,
                  "src": "1027:69:33",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1104:436:33",
                    "text": "@notice Returns information about a farmd liquidity NFT\n @param tokenId The ID of the farmd token\n @param incentiveId The ID of the incentive for which the token is farmd\n @return liquidity The amount of liquidity in the NFT as of the last time the rewards were computed,\n tickLower The lower end of the tick range for the position,\n tickUpper The upper end of the tick range for the position"
                  },
                  "functionSelector": "27e6a99a",
                  "id": 2197,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "farms",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2186,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2197,
                        "src": "1561:15:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1561:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2197,
                        "src": "1578:19:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1578:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1560:38:33"
                  },
                  "returnParameters": {
                    "id": 2196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2191,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nodeType": "VariableDeclaration",
                        "scope": 2197,
                        "src": "1663:17:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 2190,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1663:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2193,
                        "mutability": "mutable",
                        "name": "tickLower",
                        "nodeType": "VariableDeclaration",
                        "scope": 2197,
                        "src": "1695:15:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2192,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2195,
                        "mutability": "mutable",
                        "name": "tickUpper",
                        "nodeType": "VariableDeclaration",
                        "scope": 2197,
                        "src": "1725:15:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "typeName": {
                          "id": 2194,
                          "name": "int24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1725:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1648:103:33"
                  },
                  "scope": 2260,
                  "src": "1546:206:33",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "91045831",
                  "id": 2208,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createLimitFarming",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2199,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2208,
                        "src": "1798:23:33",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2198,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "1798:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2201,
                        "mutability": "mutable",
                        "name": "tiers",
                        "nodeType": "VariableDeclaration",
                        "scope": 2208,
                        "src": "1832:20:33",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tiers_$1495_calldata_ptr",
                          "typeString": "struct IAlgebraFarming.Tiers"
                        },
                        "typeName": {
                          "id": 2200,
                          "name": "Tiers",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1495,
                          "src": "1832:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tiers_$1495_storage_ptr",
                            "typeString": "struct IAlgebraFarming.Tiers"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2203,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "scope": 2208,
                        "src": "1863:29:33",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveParams_$2171_memory_ptr",
                          "typeString": "struct IAlgebraLimitFarming.IncentiveParams"
                        },
                        "typeName": {
                          "id": 2202,
                          "name": "IncentiveParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2171,
                          "src": "1863:15:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveParams_$2171_storage_ptr",
                            "typeString": "struct IAlgebraLimitFarming.IncentiveParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1787:112:33"
                  },
                  "returnParameters": {
                    "id": 2207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2206,
                        "mutability": "mutable",
                        "name": "virtualPool",
                        "nodeType": "VariableDeclaration",
                        "scope": 2208,
                        "src": "1918:19:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2205,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1918:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1917:21:33"
                  },
                  "scope": 2260,
                  "src": "1760:179:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "826cc0a1",
                  "id": 2217,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRewards",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2210,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "1977:23:33",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2209,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "1977:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2212,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "2011:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2211,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2214,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2217,
                        "src": "2036:19:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2036:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1966:96:33"
                  },
                  "returnParameters": {
                    "id": 2216,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2071:0:33"
                  },
                  "scope": 2260,
                  "src": "1947:125:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bf26a1d1",
                  "id": 2226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseRewardsAmount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2219,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "2121:23:33",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IncentiveKey_$1914_memory_ptr",
                          "typeString": "struct IIncentiveKey.IncentiveKey"
                        },
                        "typeName": {
                          "id": 2218,
                          "name": "IncentiveKey",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1914,
                          "src": "2121:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncentiveKey_$1914_storage_ptr",
                            "typeString": "struct IIncentiveKey.IncentiveKey"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2221,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "2155:20:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2155:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2223,
                        "mutability": "mutable",
                        "name": "bonusRewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "2186:25:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2186:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2110:108:33"
                  },
                  "returnParameters": {
                    "id": 2225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2227:0:33"
                  },
                  "scope": 2260,
                  "src": "2080:148:33",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2227,
                    "nodeType": "StructuredDocumentation",
                    "src": "2236:887:33",
                    "text": "@notice Event emitted when a liquidity mining incentive has been created\n @param rewardToken The token being distributed as a reward\n @param bonusRewardToken The token being distributed as a bonus reward\n @param pool The Algebra pool\n @param startTime The time when the incentive program begins\n @param endTime The time when rewards stop accruing\n @param reward The amount of reward tokens to be distributed\n @param bonusReward The amount of bonus reward tokens to be distributed\n @param tiers The amounts of locked token for liquidity multipliers\n @param multiplierToken The address of token which can be locked to get liquidity multiplier\n @param minimalAllowedPositionWidth The minimal allowed position width (tickUpper - tickLower)\n @param enterStartTime The time when enter becomes possible"
                  },
                  "id": 2251,
                  "name": "LimitFarmingCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2229,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3165:33:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "3165:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2231,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bonusRewardToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3209:38:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                          "typeString": "contract IERC20Minimal"
                        },
                        "typeName": {
                          "id": 2230,
                          "name": "IERC20Minimal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 535,
                          "src": "3209:13:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Minimal_$535",
                            "typeString": "contract IERC20Minimal"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2233,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3258:25:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                          "typeString": "contract IAlgebraPool"
                        },
                        "typeName": {
                          "id": 2232,
                          "name": "IAlgebraPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 225,
                          "src": "3258:12:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraPool_$225",
                            "typeString": "contract IAlgebraPool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2235,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3294:17:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3294:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2237,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3322:15:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3322:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2239,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3348:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2238,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3348:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3373:19:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3373:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2243,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tiers",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3403:11:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Tiers_$1495_memory_ptr",
                          "typeString": "struct IAlgebraFarming.Tiers"
                        },
                        "typeName": {
                          "id": 2242,
                          "name": "Tiers",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1495,
                          "src": "3403:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Tiers_$1495_storage_ptr",
                            "typeString": "struct IAlgebraFarming.Tiers"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2245,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "multiplierToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3425:23:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3425:7:33",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2247,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "minimalAllowedPositionWidth",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3459:34:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 2246,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "3459:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2249,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "enterStartTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "3504:21:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2248,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3504:6:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3154:378:33"
                  },
                  "src": "3129:404:33"
                },
                {
                  "anonymous": false,
                  "id": 2259,
                  "name": "RewardAmountsDecreased",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2253,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "3570:14:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2252,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3570:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2255,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bonusReward",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "3586:19:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3586:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2257,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "incentiveId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "3607:19:33",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2256,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3607:7:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3569:58:33"
                  },
                  "src": "3541:87:33"
                }
              ],
              "scope": 2261,
              "src": "258:3373:33"
            }
          ],
          "src": "46:3587:33"
        },
        "id": 33
      },
      "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitVirtualPool.sol": {
        "ast": {
          "absolutePath": "contracts/tokenomics/farmings/limitFarming/IAlgebraLimitVirtualPool.sol",
          "exportedSymbols": {
            "IAlgebraLimitVirtualPool": [
              2290
            ],
            "IAlgebraVirtualPool": [
              289
            ],
            "IAlgebraVirtualPoolBase": [
              1993
            ]
          },
          "id": 2291,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2262,
              "literals": [
                "solidity",
                "=",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "46:23:34"
            },
            {
              "id": 2263,
              "literals": [
                "abicoder",
                "v2"
              ],
              "nodeType": "PragmaDirective",
              "src": "71:19:34"
            },
            {
              "absolutePath": "contracts/tokenomics/farmings/IAlgebraVirtualPoolBase.sol",
              "file": "../IAlgebraVirtualPoolBase.sol",
              "id": 2264,
              "nodeType": "ImportDirective",
              "scope": 2291,
              "sourceUnit": 1994,
              "src": "94:40:34",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2265,
                    "name": "IAlgebraVirtualPoolBase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1993,
                    "src": "176:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraVirtualPoolBase_$1993",
                      "typeString": "contract IAlgebraVirtualPoolBase"
                    }
                  },
                  "id": 2266,
                  "nodeType": "InheritanceSpecifier",
                  "src": "176:23:34"
                }
              ],
              "contractDependencies": [
                289,
                1993
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2290,
              "linearizedBaseContracts": [
                2290,
                1993,
                289
              ],
              "name": "IAlgebraLimitVirtualPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "09670d0e",
                  "id": 2271,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "desiredEndTimestamp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "295:2:34"
                  },
                  "returnParameters": {
                    "id": 2270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2269,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2271,
                        "src": "321:6:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2268,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "321:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "320:8:34"
                  },
                  "scope": 2290,
                  "src": "267:62:34",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e96b8947",
                  "id": 2276,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "desiredStartTimestamp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2272,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "451:2:34"
                  },
                  "returnParameters": {
                    "id": 2275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2274,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "477:6:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2273,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "477:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "476:8:34"
                  },
                  "scope": 2290,
                  "src": "421:64:34",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7b352962",
                  "id": 2281,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isFinished",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "557:2:34"
                  },
                  "returnParameters": {
                    "id": 2280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2279,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2281,
                        "src": "583:4:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2278,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "582:6:34"
                  },
                  "scope": 2290,
                  "src": "538:51:34",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2282,
                    "nodeType": "StructuredDocumentation",
                    "src": "597:336:34",
                    "text": " @notice Finishes incentive if it wasn't\n @dev This function is called by a AlgebraLimitFarming when someone calls #exitFarming() after the end timestamp\n @return wasFinished Was incentive finished before this call or not\n @return activeTime The summary amount of seconds inside active positions"
                  },
                  "functionSelector": "d56b2889",
                  "id": 2289,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "finish",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2283,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "954:2:34"
                  },
                  "returnParameters": {
                    "id": 2288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2285,
                        "mutability": "mutable",
                        "name": "wasFinished",
                        "nodeType": "VariableDeclaration",
                        "scope": 2289,
                        "src": "975:16:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2284,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "975:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2287,
                        "mutability": "mutable",
                        "name": "activeTime",
                        "nodeType": "VariableDeclaration",
                        "scope": 2289,
                        "src": "993:17:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2286,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "993:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "974:37:34"
                  },
                  "scope": 2290,
                  "src": "939:73:34",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2291,
              "src": "138:877:34"
            }
          ],
          "src": "46:971:34"
        },
        "id": 34
      }
    }
  }
}
